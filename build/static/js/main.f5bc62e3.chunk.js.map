{"version":3,"sources":["theme.ts","components/Header/components/MobileNavBar/index.tsx","components/Header/components/DesktopNavBar/index.tsx","reducers/auth.ts","context/auth-context.tsx","components/Header/Header.tsx","components/Layout/Layout.tsx","constants/index.ts","util/axiosAPI.ts","components/AddItems/hooks/useAddItems.ts","components/AddItems/AddItems.tsx","components/CreateList/hooks/useCreateList.ts","components/AddItemForm/AddItemForm.tsx","components/CreateList/components/Suggestions/Suggestions.tsx","components/UI/CommentDialog/CommentDialog.tsx","components/CreateList/components/ConfirmSaveDialog/ConfirmSaveDialog.tsx","components/UI/ListElement/ListElement.tsx","components/CreateList/components/ListPaper/ListPaper.tsx","components/CreateList/CreateList.tsx","components/LogIn/hooks/useLogin.tsx","components/UI/Alert/Alert.tsx","components/LogIn/LogIn.tsx","components/Register/hooks/useRegister.tsx","components/Register/Register.tsx","components/MyLists/hooks/useMyLists.tsx","components/MyLists/MyLists.tsx","components/ListView/hooks/useListView.tsx","components/ListView/components/ListCompleteDialog/ListCompleteDialog.tsx","components/ListView/components/AddItemDialog/AddItemDialog.tsx","components/ListView/ListView.tsx","components/UserItemsAndCategories/components/TabPanel/TabPanel.tsx","components/UserItemsAndCategories/components/EditElementDialog/EditElementDialog.tsx","components/UserItemsAndCategories/components/EditCategoryDialog/EditCategoryDialog.tsx","components/UserItemsAndCategories/hooks/useUserItemsAndCategories.tsx","components/UserItemsAndCategories/UserItemsAndCategories.tsx","components/ListEdit/hooks/useListEdit.tsx","components/ListEdit/ListEdit.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","blueGrey","secondary","pink","typography","h1","fontSize","h2","h3","h4","h5","h6","useStyles","makeStyles","createStyles","menuButton","marginRight","spacing","title","flexGrow","drawer","width","display","flexDirection","link","textDecoration","margin","linkText","MobileNavBar","props","classes","Toolbar","localStorage","getItem","IconButton","edge","className","color","aria-label","aria-haspopup","onClick","openDrawer","Drawer","open","drawerOpen","onClose","closeDrawer","List","ListItem","alignItems","to","ListItemText","Typography","variant","Button","logOut","component","RouterLink","links","NavBar","Fragment","initialState","isAuth","isLoading","userId","token","username","authReducer","state","action","type","AuthContext","React","createContext","dispatch","AuthContextProvider","useReducer","authState","Provider","value","children","Header","useState","mobileView","redirectToLogin","localState","setLocalState","useContext","useEffect","setResponsiveness","window","innerWidth","prevState","addEventListener","removeItem","loginRedirect","AppBar","position","DesktopNavBar","Layout","config","url","API_URL","instance","axios","create","baseURL","filter","createFilterOptions","useAddItems","itemLasts","setItemLasts","itemName","setItemName","category","setCategory","categories","setCategories","getCategories","get","headers","Authorization","then","response","data","submitItem","event","preventDefault","name","lasts","post","console","log","catch","err","addItemToDB","handleCategoryChange","newValue","setTimeout","inputValue","handleNameChange","target","handleItemLastsChange","filterOptions","options","params","filtered","push","getOptionLabel","option","articleTitle","marginTop","addItemForm","inputs","addButton","AddItems","Container","maxWidth","align","onSubmit","TextField","required","id","label","fullWidth","onChange","Autocomplete","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","freeSolo","renderInput","useCreateList","items","list","setList","setItems","undefined","itemAddDialogValue","setItemAddDialogValue","itemAddModalOpen","setItemAddModalOpen","itemAutocompleteValue","setItemAutocompleteValue","suggestions","setSuggestions","toggleSuggestions","setToggleSuggestions","checkedSuggestions","setCheckedSuggestions","saveListDialogOpen","setSaveListDialogOpen","listSaveRedirect","setListSaveRedirect","savedListId","setSavedListId","menuAnchorEl","setMenuAnchorEl","commentDialogOpen","setCommentDialogOpen","commentDialogValue","setCommentDialogValue","commentItemId","setCommentItemId","getItems","getSuggestions","handleAddItemModalClose","handleSuggestionsVisible","closeDotsMenu","handleSaveListDialogClose","saveList","handleCommentDialogClose","addCommentButtonClicked","handleCommentDialogValueChange","deleteItemComment","updatedCommentItems","map","item","comment","updatedList","saveItemComment","handleDotsClick","currentTarget","itemAutocompleteValueChange","newList","newItems","newSuggestions","dialogNameChange","dialogCategoryChange","listNameChange","removeListItem","addItem","itemId","newListItems","addFromSuggestions","forEach","suggestion","suggestionCheckHandler","currentIndex","indexOf","newChecked","splice","saveListButtonPressed","randomName","String","Math","floor","random","saveListConfirm","AddItemForm","itemAutoCompleteValueChange","itemOptions","Dialog","dialogOpen","dialogClose","aria-labelledby","DialogTitle","DialogContent","autoFocus","dialogValues","categoryAutocompleteValue","onInputChange","categoryOptions","DialogActions","suggestionsBoxVisible","top","left","right","bottom","zIndex","padding","suggestionsBoxHidden","suggestionItem","cursor","buttonContainer","boxSizing","borderTop","suggestionList","maxHeight","overflow","Suggestions","Paper","elevation","length","divider","ListItemSecondaryAction","Checkbox","checked","Grid","container","justify","toggleVisible","disabled","addItems","CommentDialog","saveComment","valueChange","ConfirmSaveDialog","nameChange","nameValue","listItemText","ListElement","Chip","size","onDelete","deleteComment","anchorEl","keepMounted","Boolean","TransitionComponent","Fade","MenuItem","aria-controls","listPaper","justifyContent","marginBottom","minHeight","wideScreenListPaper","widescreenList","paddingBottom","ListPaper","widescreen","useMediaQuery","saveButton","height","backgroundImage","backgroundSize","hiddenTitle","inputSection","suggestionButton","widescreenInputSection","transform","wideScreenSaveButton","CreateList","startIcon","useLogin","setUsername","password","setPassword","message","setMessage","messageType","setMessageType","alertOpen","setAlertOpen","setLoginRedirect","handleAlertClose","reason","handleRegisterSuccessMessage","handleUsernameChange","handlePasswordChange","submitForm","setItem","error","userLogin","Alert","logInForm","marginLeft","registerContainer","textAlign","registerText","LogIn","URLSearchParams","location","search","Box","Snackbar","autoHideDuration","severity","useRegister","email","setEmail","repeatPassword","setRepeatPassword","resultMessage","setResultMessage","isError","setIsError","successRedirect","setSuccessRedirect","handleEmailChange","handleRepeatPasswordChange","confirmPassword","registerUser","signUpForm","registerButton","logInContainer","logInText","Register","useMyLists","myLists","setMyLists","getLists","deleteList","listId","delete","listTiles","gridColumnGap","gridRowGap","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","deleteButton","gridArea","useListButton","viewListButton","paddingLeft","date","MyLists","createdAt","split","history","pathname","useListView","listData","setListData","listItems","setListItems","pickedList","setPickedList","finishModalOpen","setFinishModalOpen","itemSearchOpen","setItemSearchOpen","finishedRedirect","setFinishedRedirect","getList","useCallback","user_items","handleFinishModalOpen","addItemTolist","handleFinishModalClose","openItemSearch","itemCheckClicked","itemKey","clickedItem","find","newPickedItems","itemCheckUndo","listPickingFinished","ListCompleteDialog","handleClose","handleFinished","AddItemDialog","handleItemSearchClose","autoCompleteValueChange","addItemToList","alignContent","listItem","pickedListItemText","paddingTop","listHeader","ListView","match","listElements","list_item","pickedListItems","reverse","Fab","addUserItem","itemsList","iconButtons","tabPlaceholder","TabPanel","role","hidden","index","other","content","element","editElement","deleteButtonPressed","deleteModalOpen","deleteModalClose","DialogContentText","isItem","elementToDelete","deleteElement","addButtonPressed","EditElementDialog","confirmEdit","addOrEdit","itemNameChange","EditCategoryDialog","dialogValue","useUserItemsAndCategories","tabValue","setTabValue","setAddOrEdit","editItemDialogValue","setEditItemDialogValue","editCategoryDialogValue","setEditCategoryDialogValue","editItemModalOpen","setEditItemModalOpen","editCategoryModalOpen","setEditCategoryModalOpen","editingItem","setEditingItem","editingCategory","setEditingCategory","setElementToDelete","setDeleteModalOpen","handleItemEditModalClose","handleCategoryEditModalClose","handleDeleteModalClose","editItemButtonPressed","cat","userCategoryId","editCategoryButtonPressed","handleTabChange","editDialogNameChange","editItemDialogCategoryChange","editCategoryNameChange","filterAutocompleteOptions","saveItemEdit","put","newName","saveCategoryEdit","newCategoryName","tabs","UserItemsAndCategories","Tabs","Tab","useListEdit","changedList","setChangedList","listChanged","setListChanged","listNameChangeRequest","duplicateItem","listNameInput","alert","ListEdit","listItemId","inputProps","min","style","InputLabelProps","shrink","withRouter","routes","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f5bc62e3.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport pink from '@material-ui/core/colors/pink';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blueGrey[500]\r\n        },\r\n        secondary: {\r\n            main: pink[500]\r\n        }\r\n    },\r\n    typography: {\r\n        h1: {\r\n            fontSize: \"2.4rem\",\r\n        },\r\n        h2: {\r\n            fontSize: \"2.2rem\"\r\n        },\r\n        h3: {\r\n            fontSize: \"2rem\"\r\n        },\r\n        h4: {\r\n            fontSize: \"1.6rem\"\r\n        },\r\n        h5: {\r\n            fontSize: \"1.3rem\"\r\n        },\r\n        h6: {\r\n            fontSize: \"1rem\"\r\n        }\r\n    }\r\n})\r\n\r\nexport default theme;","import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        menuButton: {\r\n            marginRight: theme.spacing(2)\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            fontSize: \"1.5rem\"\r\n        },\r\n        drawer: {\r\n            width: \"180px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            fontSize: '1.3rem'\r\n        },\r\n        link: {\r\n            textDecoration: \"none\",\r\n            margin: theme.spacing(2)\r\n        },\r\n        linkText: {\r\n            fontSize: '20px'\r\n        },\r\n    })\r\n);\r\n\r\n\r\nconst MobileNavBar = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Toolbar>\r\n            { localStorage.getItem('token') && (\r\n                <IconButton \r\n                    edge=\"start\" \r\n                    className={classes.menuButton} \r\n                    color=\"inherit\" \r\n                    aria-label=\"menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={props.openDrawer}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n            )}\r\n            <Drawer open={props.drawerOpen} onClose={props.closeDrawer}>\r\n                <nav className={classes.drawer}>\r\n                    <List>\r\n                        <ListItem color=\"inherit\" alignItems=\"center\" onClick={props.closeDrawer}>\r\n                            <RouterLink to=\"/createlist\" className={classes.link}>\r\n                                <ListItemText primary=\"Create a list\" classes={{ primary: classes.linkText }} />\r\n                            </RouterLink>\r\n                        </ListItem>\r\n                        <ListItem color=\"inherit\" alignItems=\"center\" onClick={props.closeDrawer}>\r\n                            <RouterLink to=\"/useritems\" className={classes.link}>\r\n                                <ListItemText primary=\"Edit Items\" classes={{ primary: classes.linkText }} />\r\n                            </RouterLink>\r\n                        </ListItem>\r\n                        <ListItem color=\"inherit\" alignItems=\"center\" onClick={props.closeDrawer}>\r\n                            <RouterLink to=\"/mylists\" className={classes.link}>\r\n                                <ListItemText primary=\"My lists\" classes={{ primary: classes.linkText }} />\r\n                            </RouterLink>\r\n                        </ListItem>\r\n                    </List>\r\n                </nav>\r\n            </Drawer>\r\n            <Typography variant=\"h1\" className={classes.title} color=\"inherit\">\r\n                Shopping\r\n            </Typography>\r\n            {!localStorage.getItem('token')\r\n                ?\r\n                <Button color=\"secondary\" variant=\"contained\" component={RouterLink} to=\"/login\">\r\n                    Log In\r\n                </Button>\r\n                :\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={props.logOut}>\r\n                    Log Out\r\n                </Button> \r\n            }\r\n        </Toolbar>\r\n    )\r\n}\r\n\r\nexport default MobileNavBar;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        menuButton: {\r\n            marginRight: theme.spacing(2)\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            fontSize: \"2rem\"\r\n        },\r\n        links: {\r\n            marginRight: theme.spacing(2)\r\n        }\r\n    })\r\n);\r\n\r\n\r\nconst NavBar = (props: { logOut: () => void }) => {\r\n    const classes = useStyles()\r\n\r\n\r\n    return (\r\n        <Toolbar>\r\n            <Typography variant=\"h1\" className={classes.title} color=\"inherit\">\r\n                Shopping\r\n            </Typography>\r\n            { localStorage.getItem('token') && (\r\n                <React.Fragment>\r\n                    <Button color=\"inherit\" component={RouterLink} to=\"/createlist\" className={classes.links}>\r\n                        Create a list\r\n                    </Button>\r\n                    <Button color=\"inherit\" component={RouterLink} to=\"/useritems\" className={classes.links}>\r\n                        Edit items\r\n                    </Button>\r\n                    <Button color=\"inherit\" component={RouterLink} to=\"/mylists\" className={classes.links}>\r\n                        My lists\r\n                    </Button>\r\n                </React.Fragment>\r\n            )}\r\n            {!localStorage.getItem('token')\r\n                ?\r\n                <Button color=\"secondary\" variant=\"contained\" component={RouterLink} to=\"/login\">\r\n                    Log In\r\n                </Button>\r\n                :\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={props.logOut}>\r\n                    Log Out\r\n                </Button> \r\n            }\r\n        </Toolbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { useReducer } from 'react'\r\n\r\nexport interface userInfo  {\r\n    isAuth: boolean;\r\n    isLoading: boolean;\r\n    userId: number | null;\r\n    token: string | null;\r\n    username: string | null;\r\n}\r\n\r\ntype Action = \r\n    { type: 'LOGIN_START' }\r\n    | {\r\n        type: 'LOGIN_SUCCESS';\r\n        username: string;\r\n        isAuth: boolean;\r\n        userId: number | null;\r\n        token: string | null;\r\n    }\r\n    | { type: 'LOGOUT' }\r\n    // | { type: 'REGISTER_START';\r\n    //     username: string;\r\n    //     email: string;\r\n    //     password: string;\r\n    //     repeatPassword: string;\r\n    //     }\r\n\r\nexport const initialState: userInfo = {\r\n    isAuth: false,\r\n    isLoading: false,\r\n    userId: null,\r\n    token: null,\r\n    username: null\r\n}\r\n\r\nexport const ActionTypes = {\r\n    LOGIN_START: 'LOGIN_START',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGOUT: 'LOGOUT',\r\n    REGISTER_START: 'REGISTER_START',\r\n    REGISTER_SUCCESS: 'REGISTER_SUCCESS'\r\n\r\n}\r\n\r\nexport type Reducer<userInfo, Action> =\r\n    (state: userInfo, action: Action) => userInfo\r\n\r\nconst authReducer = (state: userInfo, action: Action): userInfo => {\r\n    switch (action.type) {\r\n        case 'LOGIN_START':\r\n            return { ...state, isLoading: true }\r\n        case 'LOGIN_SUCCESS':\r\n            return { ...state, isAuth: true, userId: action.userId, token: action.token, username: action.username }\r\n        case 'LOGOUT':\r\n            return initialState\r\n        default:\r\n            return initialState\r\n    }\r\n}\r\n\r\nexport default authReducer","import React,  { useReducer } from 'react'\r\n\r\nimport authReducer, { initialState } from '../reducers/auth'\r\nimport {userInfo} from '../reducers/auth'\r\n\r\nexport const AuthContext = React.createContext<{state: userInfo; dispatch: React.Dispatch<any>}>(\r\n    {\r\n    state: initialState,\r\n    dispatch: () => null\r\n    }\r\n)\r\n\r\nconst AuthContextProvider = (props: any) => {\r\n\r\n    const [authState, dispatch] = useReducer(authReducer, initialState)   \r\n\r\n    return (\r\n        <AuthContext.Provider value={{state: authState, dispatch: dispatch}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider","import React, {useState, useEffect, useContext } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport MobileNavBar from './components/MobileNavBar';\r\nimport DesktopNavBar from './components/DesktopNavBar';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from '../../context/auth-context'\r\n\r\nconst Header = () => {\r\n    const [localState, setLocalState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false,\r\n        redirectToLogin: false\r\n    })\r\n\r\n    const {state, dispatch} = useContext(AuthContext)\r\n\r\n    const { mobileView } = localState\r\n    const { drawerOpen } = localState\r\n\r\n    useEffect(() => {\r\n        const setResponsiveness = () => {\r\n            return window.innerWidth < 900\r\n                ? setLocalState((prevState) => ({...prevState, mobileView: true }))\r\n                : setLocalState((prevState) => ({...prevState, mobileView: false }))\r\n        };\r\n        setResponsiveness()\r\n        window.addEventListener(\"resize\", () => setResponsiveness())\r\n    }, [])\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('userId')\r\n        setLocalState({...localState, redirectToLogin: true})\r\n    }\r\n\r\n\r\n    const handleDrawerOpen = () =>\r\n      setLocalState((prevState) => ({ ...prevState, drawerOpen: true }))\r\n\r\n      \r\n    const handleDrawerClose = () =>\r\n      setLocalState((prevState) => ({ ...prevState, drawerOpen: false }))\r\n\r\n    let loginRedirect = null\r\n    if ( localState.redirectToLogin ) {\r\n        loginRedirect = <Redirect to=\"/login\" />\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <AppBar color='primary' position='fixed'>\r\n                {mobileView \r\n                    ?   <MobileNavBar \r\n                            openDrawer={handleDrawerOpen} \r\n                            closeDrawer={handleDrawerClose}\r\n                            drawerOpen={drawerOpen}\r\n                            logOut={logOut}\r\n                        /> \r\n                    :   <DesktopNavBar logOut={logOut} />}\r\n            </AppBar>\r\n            {loginRedirect}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Fragment } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst Layout = (props: any) => {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <main>\r\n                {props.children}\r\n            </main>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout;","const prod = {\r\n    url: {\r\n        API_URL: 'http://ec2-18-191-229-230.us-east-2.compute.amazonaws.com/api/'\r\n    }\r\n}\r\n\r\nconst dev = {\r\n    url: {\r\n        API_URL: 'http://localhost:8080/api/'\r\n    }\r\n}\r\n\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import axios from 'axios'\r\nimport { config } from '../constants'\r\n\r\nconst instance = axios.create({\r\n    baseURL: config.url.API_URL\r\n})\r\n\r\nexport default instance","import React, { useEffect, useState } from 'react'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\nimport axios from '../../../util/axiosAPI'\r\n\r\ninterface Category {\r\n    id?: number;\r\n    name: string;\r\n    createdAt?: Date;\r\n    updatedAt?: Date;\r\n    inputValue?: string; \r\n}\r\n\r\nconst filter = createFilterOptions<Category>()\r\n\r\nconst useAddItems = () => {\r\n    const [itemLasts, setItemLasts] = useState('')\r\n    const [itemName, setItemName] = useState('')\r\n    const [category, setCategory] = useState<Category | null | string>(null)\r\n    const [categories, setCategories] = useState<Category[]>([])\r\n\r\n    useEffect(() => {\r\n        getCategories();\r\n    }, [])\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setItemName(event.target.value)\r\n    }\r\n\r\n    const handleCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | null | string) => {\r\n        if (typeof newValue === 'string') {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            setTimeout(() => {\r\n              setCategory({ name: newValue })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setCategory({ name: newValue.inputValue })\r\n        } else {\r\n            setCategory(newValue)\r\n        }\r\n    }\r\n\r\n    const filterOptions = (options: Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const getOptionLabel = (option: Category) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const handleItemLastsChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setItemLasts(event.target.value)\r\n    }\r\n\r\n    const getCategories = () => {\r\n        axios.get('/categories/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                setCategories(response.data)\r\n            })\r\n    }\r\n\r\n    const addItemToDB = (name: string, category?: Category | null | string, lasts?: string) => {\r\n        axios.post('/items/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            name: name,\r\n            category: category,\r\n            lasts: (lasts !== '' ? lasts : null)\r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const submitItem = (event: any) => {\r\n        event.preventDefault()\r\n        addItemToDB(itemName, category, itemLasts)\r\n    }\r\n\r\n    return {\r\n        submitItem,\r\n        handleCategoryChange: handleCategoryChange,\r\n        handleNameChange: handleNameChange,\r\n        handleItemLastsChange: handleItemLastsChange,\r\n        filterOptions: filterOptions,\r\n        getOptionLabel: getOptionLabel,\r\n        itemName: itemName,\r\n        category: category,\r\n        categories: categories,\r\n        itemLasts: itemLasts\r\n    }\r\n}\r\n\r\nexport default useAddItems","import React, { useState, useEffect } from 'react';\r\nimport useAddItems from './hooks/useAddItems'\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        articleTitle: {\r\n            marginTop: '100px'\r\n        },\r\n        addItemForm: {\r\n            margin: theme.spacing(4)\r\n        },\r\n        inputs: {\r\n            marginTop: theme.spacing(2)\r\n        },\r\n        addButton: {\r\n            display: \"block\",\r\n            marginTop: theme.spacing(2)\r\n        }\r\n    })\r\n);\r\n\r\nconst AddItems = () => {\r\n    const classes = useStyles();\r\n    const { \r\n        itemName, \r\n        categories, \r\n        category, \r\n        itemLasts, \r\n        handleNameChange, \r\n        submitItem, \r\n        handleCategoryChange, \r\n        handleItemLastsChange,\r\n        filterOptions,\r\n        getOptionLabel,\r\n    } = useAddItems();\r\n\r\n    return(\r\n        <Container component='article' maxWidth='md'>\r\n            <Typography variant='h1' className={classes.articleTitle} color='primary' align='center'>\r\n                Add an item\r\n            </Typography>\r\n            <form className={classes.addItemForm} onSubmit={submitItem}>\r\n                <TextField \r\n                    required\r\n                    id='item-name'\r\n                    label='Item name'\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                    value={itemName}\r\n                    onChange={handleNameChange}\r\n                    className={classes.inputs}\r\n                />\r\n                <Autocomplete \r\n                    value={category}\r\n                    onChange={handleCategoryChange}\r\n                    filterOptions={filterOptions}\r\n                    id='category-autocomplete'\r\n                    options={categories}\r\n                    getOptionLabel={getOptionLabel}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    handleHomeEndKeys\r\n                    renderOption={option => option.name}\r\n                    freeSolo\r\n                    renderInput={params => (<TextField {...params} label='category' variant='outlined' className={classes.inputs}/>)}\r\n                />\r\n                <TextField \r\n                    id='item-name'\r\n                    label='Lasts (days)'\r\n                    variant='outlined'\r\n                    value={itemLasts}\r\n                    onChange={handleItemLastsChange}\r\n                    className={classes.inputs}\r\n                />\r\n                <Button type=\"submit\" className={classes.addButton} variant='contained' color='secondary'>\r\n                    Add\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddItems;","import axios from '../../../util/axiosAPI'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\n\r\nexport interface Item {\r\n    id?: number;\r\n    name: string;\r\n    categoryId?: number;\r\n    userCategoryId?: number;\r\n    category?: string | Category | null;\r\n    last_bought?: Date;\r\n    lasts?: number;\r\n    inputValue?: string;\r\n    comment?: string | null\r\n}\r\n\r\nexport interface Category {\r\n    id?: number;\r\n    name: string\r\n    inputValue?: string;\r\n}\r\n\r\ninterface List { name: string; items: Item[] }\r\n\r\nconst useCreateList = () => {\r\n\r\n    const filter = createFilterOptions<Item | Category>()\r\n\r\n    const [list, setList] = useState<List>({name: '', items: []})\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [categories, setCategories] = useState([])\r\n    const [itemAddDialogValue, setItemAddDialogValue] = useState<Item>({ id: undefined, name: '', category: '' })\r\n    const [itemAddModalOpen, setItemAddModalOpen] = useState<boolean>(false)\r\n    const [itemAutocompleteValue, setItemAutocompleteValue] = useState<Item | null>(null)\r\n    const [suggestions, setSuggestions] = useState<Item[]>([])\r\n    const [toggleSuggestions, setToggleSuggestions] = useState<boolean>(false)\r\n    const [checkedSuggestions, setCheckedSuggestions] = useState<Item[]>([])\r\n    const [saveListDialogOpen, setSaveListDialogOpen] = useState<boolean>(false)\r\n    const [listSaveRedirect, setListSaveRedirect] = useState<boolean>(false)\r\n    const [savedListId, setSavedListId] = useState<number | null>(null)\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState<null | HTMLElement>(null)\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState<boolean>(false)\r\n    const [commentDialogValue, setCommentDialogValue] = useState<string>('')\r\n    const [commentItemId, setCommentItemId] = useState<number | null>(null)\r\n\r\n\r\n    useEffect(() => {\r\n        getItems(localStorage.getItem('userId'))\r\n        getCategories(localStorage.getItem('userId'))\r\n        getSuggestions(localStorage.getItem('userId'))\r\n    }, [localStorage.getItem('userId')])\r\n\r\n    const getItems = (userId: string | null) => {\r\n        axios.get('items/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setItems(response.data)\r\n        })\r\n    }\r\n\r\n    const getCategories = (userId: string | null) => {\r\n        axios.get('categories/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setCategories(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getSuggestions = (userId: string | null) => {\r\n        axios.get('items/suggestions/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setSuggestions(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const itemAutocompleteValueChange = (event: React.ChangeEvent<any>, newValue: Item | string) => {\r\n        if (typeof newValue === 'string') {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            setTimeout(() => {\r\n              setItemAddModalOpen(true)\r\n              setItemAddDialogValue({\r\n                name: newValue,\r\n                category: '',\r\n              })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddModalOpen(true)\r\n            setItemAddDialogValue({\r\n                id: newValue.id,\r\n                name: newValue.inputValue,\r\n                category: '',\r\n            })\r\n        } else {\r\n            setItemAddDialogValue({\r\n                id: newValue.id,\r\n                name: newValue.name,\r\n                category: ''\r\n            })\r\n            const newList = {...list, items: [...list.items, {name: newValue.name, id: newValue.id }]}\r\n            const newItems = items.filter(item => item.id !== newValue.id)\r\n            const newSuggestions = suggestions.filter(item => item.id !== newValue.id)\r\n            setSuggestions(newSuggestions)\r\n            setList(newList)\r\n            setItems(newItems)\r\n        }\r\n    }\r\n\r\n    const dialogCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | string) => {\r\n        if (typeof newValue === 'string') {\r\n            setTimeout(() => {\r\n              setItemAddModalOpen(true);\r\n              setItemAddDialogValue({\r\n                ...(itemAddDialogValue as Item),\r\n                category: newValue,\r\n              })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue.inputValue})\r\n        } else {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue})\r\n        }\r\n    }\r\n\r\n    const dialogNameChange = (event: React.ChangeEvent<any>) => {\r\n        setItemAddDialogValue({...(itemAddDialogValue as Item), name: event.target.value, id: event.target.value.id })\r\n    }\r\n\r\n    const listNameChange = (event: React.ChangeEvent<any>) => {\r\n        setList({...list, name: event.target.value})\r\n    }\r\n\r\n    const filterOptions = (options: Item[] | Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`,\r\n            id: params.id\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const getOptionLabel = (option: Item | Category | string) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const addItem = (event: any) => {\r\n        event.preventDefault()\r\n        axios.post('/items/' + localStorage.getItem('userId'), {\r\n            itemId: itemAutocompleteValue?.id,\r\n            name: itemAddDialogValue.name,\r\n            category: itemAddDialogValue.category\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            const newListItems = {...list, items: [...list.items, {name: itemAddDialogValue.name, id: response.data.id }]}\r\n            setList(newListItems)\r\n            handleAddItemModalClose()\r\n            getItems(localStorage.getItem('userId'))\r\n            getCategories(localStorage.getItem('userId'))\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleAddItemModalClose = () => {\r\n        setItemAddDialogValue({\r\n            name: '',\r\n            category: ''\r\n        })\r\n        setItemAddModalOpen(false)\r\n        setItemAutocompleteValue(null)\r\n    }\r\n\r\n    const handleSuggestionsVisible = () => {\r\n        if (toggleSuggestions === true) {\r\n            setToggleSuggestions(false)\r\n        } else {\r\n            setToggleSuggestions(true)\r\n        }\r\n    }\r\n\r\n    const suggestionCheckHandler = (item: Item) => {\r\n        const currentIndex = checkedSuggestions.indexOf(item)\r\n        const newChecked = [...checkedSuggestions]\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(item)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n        setCheckedSuggestions(newChecked)\r\n    }\r\n\r\n    const addFromSuggestions = () => {\r\n        const newListItems = {...list, items: [...list.items, ...checkedSuggestions]}\r\n        let newSuggestions = [...suggestions]\r\n        let newItems = [...items]\r\n        // Taking off items from suggestions and item autocomplete item pool after they are added to list\r\n        checkedSuggestions.forEach(suggestion => {\r\n            newSuggestions = newSuggestions.filter(item => item.id !== suggestion.id)\r\n            newItems = newItems.filter(item => item.id !== suggestion.id)\r\n        })\r\n        setList(newListItems)\r\n        setItems(newItems)\r\n        setSuggestions(newSuggestions)\r\n        handleSuggestionsVisible()\r\n        setCheckedSuggestions([])\r\n    }\r\n\r\n    const handleDotsClick = (event: React.MouseEvent<HTMLButtonElement>, id: number) => {\r\n        setMenuAnchorEl(event.currentTarget)\r\n        setCommentItemId(id)\r\n    }\r\n\r\n    const closeDotsMenu = () => {\r\n        setMenuAnchorEl(null)\r\n    }\r\n\r\n    const removeListItem = () => {\r\n        const newList = list.items.filter(item => {\r\n            return item.id !== commentItemId\r\n        })\r\n        setList({...list, items: newList })\r\n        closeDotsMenu()\r\n        getItems(localStorage.getItem('userId'))\r\n    }\r\n\r\n    const handleSaveListDialogClose = () => {\r\n        setSaveListDialogOpen(false)\r\n    }\r\n\r\n    const saveListButtonPressed = () => {\r\n        setSaveListDialogOpen(true)\r\n        const randomName = 'list' + String(Math.floor(Math.random() * 10000))\r\n        setList({...list, name: randomName})\r\n    }\r\n\r\n    const saveListConfirm = (event: any) => {\r\n        event.preventDefault()\r\n        saveList()\r\n        handleSaveListDialogClose()\r\n    }\r\n\r\n    const saveList = (): void => {\r\n        axios.post('/list', {\r\n            list: list,\r\n            userId: localStorage.getItem('userId')\r\n        }, { \r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n            setSavedListId(response.data)\r\n            setListSaveRedirect(true)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const addCommentButtonClicked = (event: any) => {\r\n        setCommentDialogOpen(true)\r\n    }\r\n\r\n    const handleCommentDialogValueChange = (event: React.ChangeEvent<any>) => {\r\n        setCommentDialogValue(event.target.value)\r\n    }\r\n\r\n    const handleCommentDialogClose = () => {\r\n        setCommentDialogOpen(false)\r\n        setCommentItemId(null)\r\n        setMenuAnchorEl(null)\r\n        setCommentDialogValue('')\r\n    }\r\n\r\n    const deleteItemComment = (id: number) => {\r\n        const updatedCommentItems = list.items.map(item => {\r\n            if (item.id !== id) {\r\n                return item\r\n            }\r\n            return {\r\n                ...item,\r\n                comment: null\r\n            }\r\n        })\r\n        const updatedList = {...list, items: updatedCommentItems}\r\n        setList(updatedList)\r\n        handleCommentDialogClose()\r\n    }\r\n\r\n    const saveItemComment = (event: any) => {\r\n        event.preventDefault()\r\n        const updatedCommentItems = list.items.map(item => {\r\n            if (item.id !== commentItemId) {\r\n                return item\r\n            }\r\n            return {\r\n                ...item,\r\n                comment: commentDialogValue\r\n            }\r\n        })\r\n        const updatedList = {...list, items: updatedCommentItems}\r\n        setList(updatedList)\r\n        handleCommentDialogClose()\r\n    }\r\n\r\n    return {\r\n        list: list,\r\n        items: items,\r\n        categories: categories,\r\n        suggestions: suggestions,\r\n        itemAddDialogValue: itemAddDialogValue,\r\n        itemAddModalOpen: itemAddModalOpen,\r\n        saveListDialogOpen: saveListDialogOpen,\r\n        itemAutocompleteValue: itemAutocompleteValue,\r\n        toggleSuggestions: toggleSuggestions,\r\n        checkedSuggestions: checkedSuggestions,\r\n        menuAnchorEl: menuAnchorEl,\r\n        commentDialogOpen: commentDialogOpen,\r\n        commentDialogValue: commentDialogValue,\r\n        listSaveRedirect: listSaveRedirect,\r\n        savedListId: savedListId,\r\n        addCommentButtonClicked: addCommentButtonClicked,\r\n        handleCommentDialogValueChange: handleCommentDialogValueChange,\r\n        handleCommentDialogClose: handleCommentDialogClose,\r\n        deleteItemComment: deleteItemComment,\r\n        saveItemComment: saveItemComment,\r\n        handleAddItemModalClose: handleAddItemModalClose,\r\n        handleSaveListDialogClose: handleSaveListDialogClose,\r\n        handleSuggestionsVisible: handleSuggestionsVisible,\r\n        handleDotsClick: handleDotsClick,\r\n        closeDotsMenu: closeDotsMenu,\r\n        itemAutocompleteValueChange: itemAutocompleteValueChange,\r\n        dialogNameChange: dialogNameChange,\r\n        dialogCategoryChange: dialogCategoryChange,\r\n        listNameChange: listNameChange,\r\n        getOptionLabel: getOptionLabel,\r\n        filterOptions: filterOptions,\r\n        getItems: getItems,\r\n        getCategories: getCategories,\r\n        removeListItem: removeListItem,\r\n        addItem: addItem,\r\n        addFromSuggestions: addFromSuggestions,\r\n        suggestionCheckHandler: suggestionCheckHandler,\r\n        saveListButtonPressed: saveListButtonPressed,\r\n        saveListConfirm: saveListConfirm,\r\n        saveList: saveList,\r\n    }\r\n}\r\n\r\nexport default useCreateList","import React from 'react'\r\nimport { Item } from '../ListView/hooks/useListView'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n// import { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst AddItemForm = (props: any) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Autocomplete \r\n                value={props.itemAutocompleteValue}\r\n                onChange={props.itemAutoCompleteValueChange}\r\n                filterOptions={props.filterOptions}\r\n                id='add-item-autocomplete'\r\n                options={props.itemOptions}\r\n                getOptionLabel={props.getOptionLabel}\r\n                selectOnFocus\r\n                clearOnBlur\r\n                handleHomeEndKeys\r\n                fullWidth={true}\r\n                renderOption={option => option.name}\r\n                freeSolo\r\n                renderInput={params => (<TextField {...params} label='Search Item or add new' variant='outlined' />)}\r\n            />\r\n            <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"add-item-dialog-name\">\r\n                    <form onSubmit={props.addItem}>\r\n                        <DialogTitle id=\"add-item-dialog-name\">Add a new item</DialogTitle>\r\n                        <DialogContent>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                value={(props.dialogValues as Item).name}\r\n                                onChange={props.dialogNameChange}\r\n                                label=\"name\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <Autocomplete \r\n                                value={props.categoryAutocompleteValue}\r\n                                onChange={props.dialogCategoryChange}\r\n                                onInputChange={props.onInputChange}\r\n                                filterOptions={props.filterOptions}\r\n                                id='category-autocomplete'\r\n                                options={props.categoryOptions}\r\n                                getOptionLabel={props.getOptionLabel}\r\n                                selectOnFocus\r\n                                clearOnBlur\r\n                                handleHomeEndKeys\r\n                                renderOption={option => option.name}\r\n                                freeSolo\r\n                                renderInput={params => (<TextField {...params} label='category' margin='dense' variant='outlined' />)}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={props.dialogClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Add\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddItemForm","import React, { useEffect } from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Item } from '../../hooks/useCreateList'\r\nimport { createStyles, makeStyles, Theme, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        suggestionsBoxVisible: {\r\n            display: 'block',\r\n            position: 'fixed',\r\n            top: '100px',\r\n            left: '50px',\r\n            right: 50,\r\n            bottom: 100,\r\n            zIndex: 10,\r\n            padding: theme.spacing(1)\r\n        },\r\n        suggestionsBoxHidden: {\r\n            display: 'none'\r\n        },\r\n        suggestionItem: {\r\n            cursor: 'pointer'\r\n        },\r\n        buttonContainer: {\r\n            boxSizing: 'border-box',\r\n            position: 'absolute',\r\n            width: '100%',\r\n            bottom: 0,\r\n            left: 0,\r\n            margin: 0,\r\n            padding: theme.spacing(1),\r\n            borderTop: '1px black solid',\r\n            zIndex: 11\r\n        },\r\n        suggestionList: {\r\n            maxHeight: 400,\r\n            overflow: 'auto'\r\n        }\r\n    })\r\n)\r\n\r\nconst Suggestions = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Paper\r\n            className={props.toggleSuggestions \r\n                ? classes.suggestionsBoxVisible \r\n                : classes.suggestionsBoxHidden\r\n            } \r\n            elevation={4}\r\n            component='article'\r\n        >\r\n            {props.items.length === 0\r\n                ? <Typography variant='h5' component='p' color='primary' align='center'>\r\n                    No suggestions yet. You need to use the app for a bit longer to provide enough information.\r\n                </Typography>\r\n                : null\r\n            }\r\n            <List className={classes.suggestionList}>\r\n                {props.items.map((item: Item) => {\r\n                    return (\r\n                        <ListItem \r\n                            key={item.id} \r\n                            className={classes.suggestionItem}\r\n                            divider={true}\r\n                        >\r\n                            <ListItemText primary={item.name}/>\r\n                            <ListItemSecondaryAction>\r\n                                <Checkbox \r\n                                    edge='end'\r\n                                    onChange={() => props.suggestionCheckHandler(item)}\r\n                                    checked={props.checkedSuggestions.indexOf(item) !== -1}\r\n                                />\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem> \r\n                    )\r\n                })}\r\n            </List>\r\n            <Grid container justify='space-evenly' spacing={2} className={classes.buttonContainer} component='footer'>\r\n                <Grid item>\r\n                    <Button\r\n                        color='primary'\r\n                        variant='contained'\r\n                        onClick={props.toggleVisible}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button \r\n                        color='secondary'\r\n                        variant='contained'\r\n                        disabled={props.checkedSuggestions.length < 1}\r\n                        onClick={props.addItems}\r\n                    >\r\n                        Add Items\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Suggestions","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        \r\n    })\r\n)\r\n\r\nconst CommentDialog = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"add-comment-dialog\">\r\n            <form onSubmit={props.saveComment}>\r\n                <DialogTitle id=\"add-comment-dialog\">Add comment</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        id=\"item-comment\"\r\n                        onChange={props.valueChange}\r\n                        label=\"Comment\"\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        value={props.value}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.dialogClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"secondary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CommentDialog","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ConfirmSaveDialog = (props: any) => {\r\n\r\n    return (\r\n                <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"confirm-save-dialog\">\r\n                    <form onSubmit={props.saveList}>\r\n                        <DialogTitle id=\"confirm-save-dialog\">Edit name</DialogTitle>\r\n                        <DialogContent>\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"list-name\"\r\n                                onChange={props.nameChange}\r\n                                label=\"List name\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                value={props.nameValue}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={props.dialogClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"submit\" color=\"secondary\">\r\n                                Save\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n    )\r\n}\r\n\r\nexport default ConfirmSaveDialog","import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        listItemText: {\r\n            flexGrow: 'unset',\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    })\r\n)\r\n\r\nconst ListElement = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <ListItem divider={true} >\r\n            <ListItemText primary={props.name} className={classes.listItemText} />\r\n            {props.comment\r\n                ? <Chip label={props.comment} variant='outlined' size='small' onDelete={() => props.deleteComment(props.id)}/>\r\n                : null\r\n            }\r\n            <Menu\r\n                id=\"item-actions-menu\"\r\n                anchorEl={props.menuAnchorEl}\r\n                keepMounted\r\n                open={Boolean(props.menuAnchorEl)}\r\n                onClose={props.closeDotsMenu}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={props.removeListItem}>Remove</MenuItem>\r\n                <MenuItem onClick={props.addCommentButtonClicked}>Add comment</MenuItem>\r\n            </Menu>\r\n            <ListItemSecondaryAction>\r\n                <IconButton \r\n                    aria-controls='item-actions-menu'\r\n                    aria-haspopup='true'\r\n                    edge='end'\r\n                    size='small'\r\n                    color='inherit'\r\n                    onClick={(event) => props.handleDotsClick(event, props.id)}\r\n                >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default ListElement","import React from 'react'\r\nimport ListElement from '../../../UI/ListElement'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport List from '@material-ui/core/List'\r\nimport { createStyles, makeStyles, Theme, useMediaQuery } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        listPaper: {\r\n            position: 'relative',\r\n            boxSizing: 'border-box',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n            padding: theme.spacing(3) ,\r\n            width: '100%',\r\n            minHeight: '350px',\r\n        },\r\n        wideScreenListPaper: {\r\n            position: 'relative',\r\n            boxSizing: 'border-box',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n            padding: theme.spacing(5) ,\r\n            width: '100%',\r\n            minHeight: '350px',\r\n        },\r\n        list: {\r\n            marginBottom: theme.spacing(3),\r\n            boxSizing: 'border-box',\r\n            overflow: 'auto'\r\n        },\r\n        widescreenList: {\r\n            paddingBottom: theme.spacing(6)\r\n        },\r\n        listItemText: {\r\n            flexGrow: 'unset',\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    })\r\n)\r\n\r\nconst ListPaper = (props: any) => {\r\n    const classes = useStyles()\r\n    const widescreen = useMediaQuery('(min-width:600px)')\r\n\r\n    return (\r\n        <Paper  className={widescreen ? classes.wideScreenListPaper : classes.listPaper} elevation={3} component='section'>\r\n            <List className={widescreen ? classes.widescreenList : classes.list}>\r\n                {props.list.items.map((item: any) => {\r\n                    return (\r\n                        <ListElement\r\n                            id={item.id}\r\n                            name={item.name}\r\n                            comment={item.comment}\r\n                            deleteComment={props.deleteComment}\r\n                            menuAnchorEl={props.menuAnchorEl}\r\n                            closeDotsMenu={props.closeDotsMenu}\r\n                            removeListItem={props.removeListItem}\r\n                            addCommentButtonClicked={props.addCommentButtonClicked}\r\n                            handleDotsClick={props.handleDotsClick}\r\n                        />\r\n                    )\r\n                })}\r\n            </List>\r\n            {props.widescreen && props.saveButton}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default ListPaper","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport useCreateList from './hooks/useCreateList'\r\nimport AddItemForm from '../AddItemForm/AddItemForm'\r\nimport Suggestions from './components/Suggestions'\r\nimport CommentDialog from '../UI/CommentDialog'\r\nimport ConfirmSaveDialog from './components/ConfirmSaveDialog'\r\nimport ListPaper from './components/ListPaper'\r\nimport Container from '@material-ui/core/Container'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport { createStyles, makeStyles, Theme, useMediaQuery } from '@material-ui/core'\r\nimport HelpIcon from '@material-ui/icons/Help'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        articleTitle: {\r\n            margin: '0 0 20px 0'\r\n        },\r\n        container: {\r\n            position: 'relative',\r\n            height: '100vh',\r\n            minHeight: '600px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            backgroundImage: 'url(\"groceries1.jpg\")',\r\n            backgroundSize: 'cover',\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n        inputSection: {\r\n            boxSizing: 'border-box',\r\n            width: '100%',\r\n            padding: '2rem 1rem 1rem 1rem',\r\n            marginTop: '70px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        suggestionButton: {\r\n            margin: '15px auto 5px auto'\r\n        },\r\n        widescreenInputSection: {\r\n            boxSizing: 'border-box',\r\n            width: '100%',\r\n            padding: '3rem 2rem 1rem 2rem',\r\n            marginTop: '120px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        saveButton: {\r\n            position: 'absolute',\r\n            bottom: theme.spacing(2),\r\n            left: '50%',\r\n            transform: 'translateX(-50%)'\r\n        },\r\n        wideScreenSaveButton: {\r\n            position: 'absolute',\r\n            width: '12rem',\r\n            bottom: theme.spacing(3),\r\n            left: '50%',\r\n            transform: 'translateX(-50%)'\r\n        }\r\n    })\r\n)\r\n\r\nconst CreateList = () => {\r\n    const classes = useStyles()\r\n    const widescreen = useMediaQuery('(min-width:600px)')\r\n    const { \r\n        list,\r\n        items,\r\n        categories,\r\n        suggestions,\r\n        itemAddDialogValue,\r\n        itemAutocompleteValue,\r\n        itemAddModalOpen,\r\n        toggleSuggestions,\r\n        checkedSuggestions,\r\n        saveListDialogOpen,\r\n        menuAnchorEl,\r\n        commentDialogOpen,\r\n        commentDialogValue,\r\n        listSaveRedirect,\r\n        savedListId,\r\n        addCommentButtonClicked,\r\n        deleteItemComment,\r\n        handleCommentDialogValueChange,\r\n        handleCommentDialogClose,\r\n        saveItemComment,\r\n        handleAddItemModalClose,\r\n        handleSuggestionsVisible,\r\n        handleSaveListDialogClose,\r\n        handleDotsClick,\r\n        closeDotsMenu,\r\n        itemAutocompleteValueChange,\r\n        dialogNameChange,\r\n        dialogCategoryChange,\r\n        listNameChange,\r\n        getOptionLabel,\r\n        filterOptions,\r\n        removeListItem,\r\n        addItem,\r\n        addFromSuggestions,\r\n        suggestionCheckHandler,\r\n        saveListButtonPressed,\r\n        saveListConfirm\r\n    } = useCreateList()\r\n\r\n    const saveButton = \r\n        <Button \r\n            type='button' \r\n            color='secondary' \r\n            variant='contained' \r\n            size='large'\r\n            onClick={saveListButtonPressed}\r\n            disabled={list.items.length < 1}\r\n            className={widescreen ? classes.wideScreenSaveButton : classes.saveButton}\r\n        >\r\n            Save list\r\n        </Button>\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container component='article' maxWidth='sm' className={classes.container}>\r\n                <h1 className={classes.hiddenTitle}>Create a List!</h1>\r\n                <Paper className={widescreen ? classes.widescreenInputSection : classes.inputSection} elevation={3} component='section'>\r\n                    <AddItemForm\r\n                        itemAutocompleteValue={itemAutocompleteValue}\r\n                        categoryAutocompleteValue={itemAutocompleteValue?.category}\r\n                        itemAutoCompleteValueChange={itemAutocompleteValueChange}\r\n                        filterOptions={filterOptions}\r\n                        itemOptions={items}\r\n                        categoryOptions={categories}\r\n                        getOptionLabel={getOptionLabel}\r\n                        dialogOpen={itemAddModalOpen}\r\n                        dialogClose={handleAddItemModalClose}\r\n                        addItem={addItem}\r\n                        dialogValues={itemAddDialogValue}\r\n                        dialogNameChange={dialogNameChange}\r\n                        dialogCategoryChange={dialogCategoryChange}\r\n                    />\r\n                    <Button \r\n                        color='secondary'\r\n                        className={classes.suggestionButton}\r\n                        startIcon={<HelpIcon />}\r\n                        onClick={handleSuggestionsVisible}\r\n                    >\r\n                        Suggestions\r\n                    </Button>\r\n                </Paper>\r\n                <ListPaper \r\n                    list={list}\r\n                    menuAnchorEl={menuAnchorEl}\r\n                    handleDotsClick={handleDotsClick}\r\n                    closeDotsMenu={closeDotsMenu}\r\n                    removeListItem={removeListItem}\r\n                    saveListButtonPressed={saveListButtonPressed}\r\n                    widescreen={widescreen}\r\n                    saveButton={saveButton}\r\n                    addCommentButtonClicked={addCommentButtonClicked}\r\n                    deleteComment={deleteItemComment}\r\n                />\r\n                <Suggestions \r\n                    items={suggestions}\r\n                    toggleSuggestions={toggleSuggestions}\r\n                    suggestionCheckHandler={suggestionCheckHandler}\r\n                    checkedSuggestions={checkedSuggestions}\r\n                    addItems={addFromSuggestions}\r\n                    toggleVisible={handleSuggestionsVisible}\r\n                />\r\n                {!widescreen && saveButton}\r\n            </Container>\r\n            <CommentDialog \r\n                dialogOpen={commentDialogOpen}\r\n                dialogClose={handleCommentDialogClose}\r\n                saveComment={saveItemComment}\r\n                valueChange={handleCommentDialogValueChange}\r\n                value={commentDialogValue}\r\n            />\r\n            <ConfirmSaveDialog \r\n                dialogOpen={saveListDialogOpen}\r\n                dialogClose={handleSaveListDialogClose}\r\n                nameValue={list.name}\r\n                nameChange={listNameChange}\r\n                saveList={saveListConfirm}\r\n            />\r\n            {listSaveRedirect ? <Redirect to={'/mylists/use/' + savedListId} /> : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateList","import React, { useEffect, useState,} from 'react'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\n\r\nconst useLogin = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [messageType, setMessageType] = useState('')\r\n    const [alertOpen, setAlertOpen] = useState(false)\r\n    const [loginRedirect, setLoginRedirect] = useState(false)\r\n\r\n    const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleAlertClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlertOpen(false)\r\n    }\r\n\r\n    const handleRegisterSuccessMessage = (message: string) => {\r\n        setMessage(message)\r\n        setMessageType('success')\r\n        setAlertOpen(true)\r\n    }\r\n\r\n    const userLogin = (username: string, password: string): void => {\r\n        axios.post('/auth/login', {\r\n            username: username,\r\n            password: password\r\n        })\r\n        .then(response => {\r\n            localStorage.setItem('token', response.data.token)\r\n            localStorage.setItem('userId', response.data.userId)\r\n            localStorage.setItem('username', response.data.username)\r\n            setLoginRedirect(true)\r\n        })\r\n        .catch(err => {\r\n            setMessage(err.response.data.error)\r\n            setMessageType('error')\r\n            setAlertOpen(true)\r\n        })\r\n    }\r\n\r\n    const submitForm = (event: any): void => {\r\n        event.preventDefault()\r\n        userLogin(username, password)\r\n    }\r\n\r\n    return {\r\n        username: username,\r\n        password: password,\r\n        message: message,\r\n        messageType: messageType,\r\n        alertOpen: alertOpen,\r\n        loginRedirect: loginRedirect,\r\n        handleAlertClose: handleAlertClose,\r\n        handleRegisterSuccessMessage: handleRegisterSuccessMessage,\r\n        handleUsernameChange: handleUsernameChange,\r\n        handlePasswordChange: handlePasswordChange,\r\n        submitForm: submitForm\r\n    }\r\n}\r\n\r\nexport default useLogin","import React from 'react'\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport default Alert","import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport useLogin from './hooks/useLogin'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '../UI/Alert'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        articleTitle: {\r\n            marginTop: '100px'\r\n        },\r\n        logInForm: {\r\n            margin: theme.spacing(2)\r\n        },\r\n        inputs: {\r\n            marginTop: theme.spacing(4)\r\n        },\r\n        addButton: {\r\n            display: \"block\",\r\n            marginTop: theme.spacing(4),\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto'\r\n        },\r\n        registerContainer: {\r\n            marginTop: theme.spacing(8),\r\n            textAlign: 'center'\r\n        },\r\n        registerText: {\r\n            marginBottom: theme.spacing(1)\r\n        }\r\n    })\r\n)\r\n\r\nconst LogIn = (props: any) => {\r\n    const classes = useStyles()\r\n    const { \r\n        message,\r\n        messageType,\r\n        alertOpen,\r\n        loginRedirect,\r\n        handleAlertClose,\r\n        handleUsernameChange,\r\n        handlePasswordChange,\r\n        submitForm,\r\n        handleRegisterSuccessMessage\r\n    } = useLogin()\r\n\r\n    useEffect(() => {\r\n        const query = new URLSearchParams(props.location.search)\r\n        const redirect = query.get('redirect')\r\n        if (redirect === 'true') {\r\n            handleRegisterSuccessMessage('User created! You can now log in.')\r\n        }\r\n    }, [props.location.search])\r\n\r\n    return (\r\n        <Container component='article' maxWidth='sm'>\r\n            <Typography variant='h1' className={classes.articleTitle} color='primary' align='center'>\r\n                Log In\r\n            </Typography>\r\n            <form className={classes.logInForm} onSubmit={submitForm}>\r\n                <TextField\r\n                    required\r\n                    id='username'\r\n                    label='Username'\r\n                    variant='outlined'\r\n                    onChange={handleUsernameChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='password'\r\n                    label='Password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    onChange={handlePasswordChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <Button \r\n                    type=\"submit\" \r\n                    className={classes.addButton} \r\n                    variant='contained' \r\n                    size='large' \r\n                    color='secondary'\r\n                >\r\n                    Log In\r\n                </Button>\r\n            </form>\r\n            <Box component=\"section\" className={classes.registerContainer}>\r\n                <Typography \r\n                    variant='h5' \r\n                    component='h2' \r\n                    className={classes.registerText} \r\n                    color='primary' \r\n                    align='center'\r\n                >\r\n                    New to the app?\r\n                </Typography>\r\n                <Button \r\n                    type=\"button\" \r\n                    color='secondary' \r\n                    size='large' \r\n                    component={RouterLink} \r\n                    to='/register'\r\n                >\r\n                    Sign Up Here\r\n                </Button>\r\n            </Box>\r\n            <Snackbar open={alertOpen} autoHideDuration={9000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} severity={messageType === 'error' ? 'error' : 'success'}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n            {loginRedirect ? <Redirect to=\"/createlist\" /> : null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LogIn","import React, { useState } from 'react'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\n\r\nconst useRegister = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    const [resultMessage, setResultMessage] = useState('')\r\n    const [alertOpen, setAlertOpen] = useState(false)\r\n    const [isError, setIsError] = useState(false)\r\n    const [successRedirect, setSuccessRedirect] = useState(false)\r\n\r\n    const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleRepeatPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setRepeatPassword(event.target.value)\r\n    }\r\n\r\n    const handleAlertClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlertOpen(false)\r\n    }\r\n\r\n    const registerUser = (username: string, email: string, password: string, repeatPassword: string): void => {\r\n        if (password === repeatPassword) {\r\n            axios.post('/auth/signup', {\r\n                username: username,\r\n                email: email,\r\n                password: password,\r\n                confirmPassword: repeatPassword\r\n            })\r\n            .then(response => {\r\n                setIsError(false)\r\n                setAlertOpen(true)\r\n                setResultMessage(response.data.message)\r\n                setSuccessRedirect(true)\r\n                \r\n            })\r\n            .catch(err => {\r\n                setIsError(true)\r\n                setResultMessage(err.response.data.error)\r\n                setAlertOpen(true)\r\n            })\r\n        }\r\n    }\r\n\r\n    const submitForm = (event: any) => {\r\n        event.preventDefault()\r\n        registerUser(username, email, password, repeatPassword)\r\n    }\r\n\r\n    return {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        resultMessage: resultMessage,\r\n        alertOpen: alertOpen,\r\n        isError: isError,\r\n        successRedirect: successRedirect,\r\n        handleAlertClose: handleAlertClose,\r\n        handleUsernameChange: handleUsernameChange,\r\n        handleEmailChange: handleEmailChange,\r\n        handlePasswordChange: handlePasswordChange,\r\n        handleRepeatPasswordChange: handleRepeatPasswordChange,\r\n        submitForm: submitForm\r\n    }\r\n}\r\n\r\nexport default useRegister\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport useRegister from './hooks/useRegister'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '../UI/Alert'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        articleTitle: {\r\n            marginTop: '100px'\r\n        },\r\n        signUpForm: {\r\n            margin: theme.spacing(2)\r\n        },\r\n        inputs: {\r\n            marginTop: theme.spacing(4)\r\n        },\r\n        registerButton: {\r\n            display: \"block\",\r\n            marginTop: theme.spacing(4),\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto'\r\n        },\r\n        logInContainer: {\r\n            marginTop: theme.spacing(6),\r\n            textAlign: 'center'\r\n        },\r\n        logInText: {\r\n            marginBottom: theme.spacing(1)\r\n        }\r\n    })\r\n)\r\n\r\nconst Register = () => {\r\n    const classes = useStyles()\r\n    const {\r\n        resultMessage,\r\n        alertOpen,\r\n        isError,\r\n        successRedirect,\r\n        handleAlertClose,\r\n        handleUsernameChange,\r\n        handleEmailChange,\r\n        handlePasswordChange,\r\n        handleRepeatPasswordChange,\r\n        submitForm\r\n    } = useRegister()\r\n    \r\n    return (\r\n        <Container component='article' maxWidth='sm'>\r\n            <Typography variant='h1' component='h1' className={classes.articleTitle} color='primary' align='center'>\r\n                Sign Up\r\n            </Typography>\r\n            <form className={classes.signUpForm} onSubmit={submitForm}>\r\n                <TextField\r\n                    required\r\n                    id='email'\r\n                    label='e-mail'\r\n                    variant='outlined'\r\n                    onChange={handleEmailChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='username'\r\n                    label='Username'\r\n                    variant='outlined'\r\n                    onChange={handleUsernameChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='password'\r\n                    label='Password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    onChange={handlePasswordChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='repeat-password'\r\n                    label='Repeat password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    onChange={handleRepeatPasswordChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <Button \r\n                    type=\"submit\" \r\n                    className={classes.registerButton} \r\n                    variant='contained' \r\n                    size='large' \r\n                    color='secondary'\r\n                >\r\n                    Register\r\n                </Button>\r\n            </form>\r\n            <Box component=\"section\" className={classes.logInContainer}>\r\n                <Typography \r\n                    variant='h5' \r\n                    component='h2' \r\n                    className={classes.logInText} \r\n                    color='primary' \r\n                    align='center'\r\n                >\r\n                    Already a user?\r\n                </Typography>\r\n                <Button \r\n                    type=\"button\" \r\n                    color='secondary' \r\n                    size='large' \r\n                    component={RouterLink} \r\n                    to='/login'\r\n                >\r\n                    Log In\r\n                </Button>\r\n            </Box>\r\n            <Snackbar open={alertOpen} autoHideDuration={9000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} severity={isError? 'error': 'success'}>\r\n                    {resultMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            {successRedirect ? <Redirect to='/login?registerRedirect=true' /> : null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register","import React, { useEffect, useState } from 'react'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\n\r\ninterface ListTile {\r\n    id: number;\r\n    name: string;\r\n    createdAt?: string;\r\n    updatedAt?: string; \r\n}\r\n\r\ntype MyLists = ListTile[]\r\n\r\nconst useMyLists = () => {\r\n\r\n    const [myLists, setMyLists] = useState<MyLists>([])\r\n\r\n    useEffect(() => {\r\n        getLists()\r\n    }, [])\r\n\r\n    const getLists = () => {\r\n        axios.get('/list/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setMyLists(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const deleteList = (listId: number) => {\r\n        axios.delete('/list/delete/' + listId + '?userId=' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            getLists()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return {\r\n        myLists: myLists,\r\n        deleteList: deleteList\r\n    }\r\n}\r\n\r\nexport default useMyLists","import React from 'react'\r\nimport useMyLists from './hooks/useMyLists'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        articleTitle: {\r\n            margin: '100px 10px 40px 10px'\r\n        },\r\n        listTiles: {\r\n            boxSizing: 'border-box',\r\n            display: 'grid',\r\n            gridColumnGap: '1rem',\r\n            gridRowGap: '10%',\r\n            gridTemplateColumns:\r\n                '4fr 4fr 4fr 4fr',\r\n            gridTemplateRows:\r\n                '45% 45%',\r\n            gridTemplateAreas: `\r\n                \"name name date date\"\r\n                \"useListButton viewListButton . deleteButton\"\r\n                `,\r\n            justifyContent: 'space-around',\r\n            marginTop: theme.spacing(2),\r\n            padding: theme.spacing(2),\r\n            width: '100%',\r\n            height: '8rem'\r\n        },\r\n        deleteButton: {\r\n            gridArea: 'deleteButton'\r\n        },\r\n        useListButton: {\r\n            gridArea: 'useListButton'\r\n        },\r\n        viewListButton: {\r\n            gridArea: 'viewListButton'\r\n        },\r\n        name: {\r\n            gridArea: 'name',\r\n            textAlign: 'left',\r\n            paddingLeft: theme.spacing(1)\r\n            \r\n        },\r\n        date: {\r\n            gridArea: 'date'\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n    })\r\n)\r\n\r\nconst MyLists = (props: any) => {\r\n    const classes = useStyles()\r\n    const { myLists, deleteList } = useMyLists()\r\n\r\n    const listTiles = myLists.map(list => {\r\n        return (\r\n            <Paper \r\n                className={classes.listTiles} \r\n                elevation={3} \r\n                component='section' \r\n                key={list.id}\r\n            >\r\n                <Typography variant='h4' color='secondary' align='center' component='h2' className={classes.name}>\r\n                    {list.name}\r\n                </Typography>\r\n                <Typography variant='h5' color='inherit' align='center' component='h3' className={classes.date}>\r\n                    {list.createdAt?.split('T')[0]}\r\n                </Typography>\r\n                <IconButton \r\n                    color='inherit'\r\n                    aria-label='delete-list'\r\n                    className={classes.deleteButton}\r\n                    onClick={() => deleteList(list.id)}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n                <Button \r\n                    color='primary'\r\n                    variant='contained'\r\n                    className={classes.useListButton}\r\n                    onClick={() => props.history.push({ pathname: '/mylists/use/' + list.id })}\r\n                >\r\n                    Shop\r\n                </Button>\r\n                <Button \r\n                    color='inherit'\r\n                    variant='contained'\r\n                    className={classes.viewListButton}\r\n                    onClick={() => props.history.push({ pathname: '/mylists/edit/' + list.id })}    \r\n                >\r\n                    Edit\r\n                </Button>\r\n            </Paper>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Container component='article' maxWidth='sm'>\r\n            <h1 className={classes.hiddenTitle}>My lists</h1>\r\n            <Typography variant='h1' component='p' className={classes.articleTitle} color='primary' align='center'>\r\n                {myLists.length === 0 ? 'You have no lists saved yet' : null}\r\n            </Typography>\r\n            {listTiles}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MyLists","import React, { useCallback, useState } from 'react'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\n\r\nexport interface Item {\r\n    id?: number;\r\n    name: string;\r\n    categoryId?: number;\r\n    category?: string | Category | null;\r\n    last_bought?: Date;\r\n    lasts?: number;\r\n    inputValue?: string;\r\n    list_item?: any;\r\n    comment?: string | null;\r\n}\r\n\r\nexport interface Category {\r\n    id?: number;\r\n    name: string\r\n    inputValue?: string;\r\n}\r\n\r\nexport type ListData = {\r\n    id? : number;\r\n    name?: string;\r\n    createdAt?: Date;\r\n    updatedAt?: Date;\r\n    userId?: number;\r\n    items?: Item[]\r\n} \r\n\r\nconst useListView = () => {\r\n\r\n    const filter = createFilterOptions<Item | Category>()\r\n\r\n    const [listData, setListData] = useState<ListData>({})\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [categories, setCategories] = useState([])\r\n    const [itemAddDialogValue, setItemAddDialogValue] = useState<Item>({ name: '', category: '' })\r\n    const [listItems, setListItems] = useState<Item[]>([])\r\n    const [pickedList, setPickedList] = useState<Item[]>([])\r\n    const [finishModalOpen, setFinishModalOpen] = useState<boolean>(false)\r\n    const [itemAddModalOpen, setItemAddModalOpen] = useState<boolean>(false)\r\n    const [itemSearchOpen, setItemSearchOpen] = useState<boolean>(false)\r\n    const [itemAutocompleteValue, setItemAutocompleteValue] = useState<Item | null>(null)\r\n    const [finishedRedirect, setFinishedRedirect] = useState<boolean>(false)\r\n\r\n    const getList = useCallback((listId: number) => {\r\n        axios.get('/list/listdetails/' + listId + '?userId=' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                setListData(response.data)\r\n                setListItems(response.data.user_items)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    const getItems = () => {\r\n        axios.get('/items/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setItems(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        axios.get('categories/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setCategories(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const itemCheckClicked = (itemKey: number | undefined): void => {\r\n        // remove clicked item from list items\r\n        const newListItems = listItems?.filter(item => item.id !== itemKey)\r\n        setListItems(newListItems)\r\n        if (newListItems.length < 1) {\r\n            handleFinishModalOpen()\r\n        }\r\n        // put item into picked items list\r\n        const clickedItem = listItems.find(item => item.id === itemKey)\r\n        let newPickedItems = [...pickedList, clickedItem as Item]\r\n        setPickedList(newPickedItems)\r\n    }\r\n\r\n    const itemCheckUndo = (itemKey: number | undefined): void => {\r\n        const newPickedItems = pickedList.filter(item => item.id !== itemKey)\r\n        const clickedItem = pickedList.find(item => item.id === itemKey)\r\n        setPickedList(newPickedItems)\r\n        let newListItems = [...listItems, clickedItem as Item]\r\n        setListItems(newListItems)\r\n    }\r\n\r\n    const itemAutocompleteValueChange = (event: React.ChangeEvent<any>, newValue: Item | string) => {\r\n        if (typeof newValue === 'string') {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            setTimeout(() => {\r\n              setItemAddModalOpen(true);\r\n              setItemAddDialogValue({\r\n                name: newValue,\r\n                category: '',\r\n              })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddModalOpen(true)\r\n            setItemAddDialogValue({\r\n                name: newValue.inputValue,\r\n                category: '',\r\n            })\r\n        } else {\r\n            setItemAddDialogValue({\r\n                name: newValue.name,\r\n                category: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    const dialogCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | string) => {\r\n        if (typeof newValue === 'string') {\r\n            setItemAddModalOpen(true);\r\n            setItemAddDialogValue({\r\n            ...(itemAddDialogValue as Item),\r\n            category: newValue,\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue.inputValue})\r\n        } else {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue})\r\n        }\r\n    }\r\n\r\n    const filterOptions = (options: Item[] | Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const getOptionLabel = (option: Item | Category | string) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const handleAddItemModalClose = () => {\r\n        setItemAddDialogValue({\r\n            name: '',\r\n            category: ''\r\n        })\r\n        setItemAddModalOpen(false)\r\n        setItemSearchOpen(false)\r\n        setItemAutocompleteValue(null)\r\n\r\n    }\r\n\r\n    const addItemToList = (event: any) => {\r\n        event.preventDefault()\r\n        axios.post('/list/add/' + listData.id, {\r\n            userId: localStorage.getItem('userId'),\r\n            itemId: itemAutocompleteValue?.id,\r\n            name: itemAddDialogValue.name,\r\n            category: itemAddDialogValue.category\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            getList(response.data.listId)\r\n            handleAddItemModalClose()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const dialogNameChange = (event: React.ChangeEvent<any>) => {\r\n        setItemAddDialogValue({...(itemAddDialogValue as Item), name: event.target.value})\r\n    }\r\n\r\n    const handleFinishModalOpen = () => {\r\n        setFinishModalOpen(true)\r\n    }\r\n    \r\n    const handleFinishModalClose = () => {\r\n        setFinishModalOpen(false)\r\n    }\r\n\r\n    const listPickingFinished = () => {\r\n        axios.post('/items/bought/' + localStorage.getItem('userId'), {\r\n            items: pickedList,\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setFinishModalOpen(false)\r\n            setFinishedRedirect(true)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const openItemSearch = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        getItems()\r\n        getCategories()\r\n        setItemSearchOpen(true)\r\n    }\r\n\r\n    return {\r\n        listData: listData,\r\n        items: items,\r\n        categories: categories,\r\n        itemAddDialogValue: itemAddDialogValue,\r\n        itemAddModalOpen: itemAddModalOpen,\r\n        listItems: listItems,\r\n        pickedList: pickedList,\r\n        finishModalOpen: finishModalOpen,\r\n        itemSearchOpen: itemSearchOpen,\r\n        itemAutocompleteValue: itemAutocompleteValue,\r\n        finishedRedirect: finishedRedirect,\r\n        addItemTolist: addItemToList,\r\n        handleFinishModalOpen: handleFinishModalOpen,\r\n        handleFinishModalClose: handleFinishModalClose,\r\n        handleAddItemModalClose: handleAddItemModalClose,\r\n        openItemSearch: openItemSearch,\r\n        itemAutoCompleteValueChange: itemAutocompleteValueChange,\r\n        dialogNameChange: dialogNameChange,\r\n        dialogCategoryChange: dialogCategoryChange,\r\n        getOptionLabel: getOptionLabel,\r\n        filterOptions: filterOptions,\r\n        itemCheckClicked: itemCheckClicked,\r\n        itemCheckUndo: itemCheckUndo,\r\n        getItems: getItems,\r\n        getList: getList,\r\n        listPickingFinished: listPickingFinished,\r\n    }\r\n}\r\n\r\nexport default useListView","import React from 'react'\r\nimport useListView from '../../hooks/useListView'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        \r\n    })\r\n)\r\n\r\nconst ListCompleteDialog = (props: any) => {\r\n    const classes = useStyles()\r\n    return(\r\n        <Dialog \r\n            open={props.open} \r\n            onClose={props.handleClose} \r\n            aria-labelledby='finish-dialog'\r\n        >\r\n            <DialogTitle id='finish-dialog'>{'Mark shopping complete?'}</DialogTitle>\r\n            <DialogActions>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    No, I forgot something\r\n                </Button>\r\n                <Button onClick={props.handleFinished} color=\"secondary\" autoFocus>\r\n                    Yes\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )   \r\n}\r\n\r\nexport default ListCompleteDialog","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { Item } from '../../hooks/useListView'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        \r\n    })\r\n)\r\n\r\n\r\nconst AddItemDialog = (props: any) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog open={props.itemSearchOpen} fullWidth={true} onClose={props.handleItemSearchClose} aria-labelledby='add-item-search'>\r\n                <DialogContent>\r\n                    <Autocomplete \r\n                        value={props.itemAutocompleteValue}\r\n                        onChange={props.autoCompleteValueChange}\r\n                        filterOptions={props.filterOptions}\r\n                        id='add-item-autocomplete'\r\n                        options={props.itemOptions}\r\n                        getOptionLabel={props.getOptionLabel}\r\n                        selectOnFocus\r\n                        clearOnBlur\r\n                        handleHomeEndKeys\r\n                        renderOption={option => option.name}\r\n                        freeSolo\r\n                        renderInput={params => (<TextField {...params} label='Search Item or add new' variant='outlined' />)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleItemSearchClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\" onClick={props.addItemToList}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"add-item-dialog-name\">\r\n                <form onSubmit={props.addItem}>\r\n                    <DialogTitle id=\"add-item-dialog-name\">Add a new item</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            value={(props.dialogValues as Item).name}\r\n                            onChange={props.dialogNameChange}\r\n                            label=\"name\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Autocomplete \r\n                            value={props.categoryAutocompleteValue}\r\n                            onChange={props.dialogCategoryChange}\r\n                            filterOptions={props.filterOptions}\r\n                            id='category-autocomplete'\r\n                            options={props.categoryOptions}\r\n                            getOptionLabel={props.getOptionLabel}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            renderOption={option => option.name}\r\n                            freeSolo\r\n                            renderInput={params => (<TextField {...params} label='category' margin='dense' variant='outlined' />)}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.dialogClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddItemDialog","import React, { useEffect } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport useListView from './hooks/useListView'\r\nimport ListCompleteDialog from './components/ListCompleteDialog'\r\nimport Container from '@material-ui/core/Container'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RestoreIcon from '@material-ui/icons/Restore'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport AddItemDialog from './components/AddItemDialog'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        articleTitle: {\r\n\r\n        },\r\n        listPaper: {\r\n            boxSizing: 'border-box',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignContent: 'center',\r\n            justifyContent: 'space-evenly',\r\n            padding: theme.spacing(3),\r\n            width: '100%'\r\n        },\r\n        pickedList: {\r\n            marginTop: theme.spacing(4),\r\n        },\r\n        listItem: {\r\n            flexGrow: 1\r\n        },\r\n        pickedListItemText: {\r\n            textDecoration: 'line-through',\r\n            flexGrow: 'unset',\r\n            marginRight: theme.spacing(1)\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n        addButton: {\r\n            position: 'sticky',\r\n            marginTop: theme.spacing(-3),\r\n            left: '50\\%',\r\n            right: '50\\%',\r\n            bottom: theme.spacing(2),\r\n            transform: 'translateX(-50\\%)'\r\n        },\r\n        listItemText: {\r\n            flexGrow: 'unset',\r\n            marginRight: theme.spacing(1)\r\n        },\r\n        container: {\r\n            height: '100%',\r\n            position: 'relative',\r\n            top: 0,\r\n            paddingTop: theme.spacing(10)\r\n        },\r\n        listHeader: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginBottom: theme.spacing(2)\r\n        }\r\n    })\r\n)\r\n\r\nconst ListView = (props: any) => {\r\n    const classes = useStyles()\r\n    const { \r\n        listData,\r\n        items,\r\n        categories,\r\n        itemAddDialogValue,\r\n        itemAddModalOpen,\r\n        itemAutocompleteValue,\r\n        listItems,\r\n        pickedList,\r\n        finishModalOpen,\r\n        itemSearchOpen,\r\n        finishedRedirect,\r\n        addItemTolist,\r\n        handleFinishModalClose,\r\n        handleAddItemModalClose,\r\n        openItemSearch,\r\n        dialogNameChange,\r\n        dialogCategoryChange,\r\n        itemCheckUndo,\r\n        getOptionLabel,\r\n        itemCheckClicked,\r\n        getList,\r\n        itemAutoCompleteValueChange,\r\n        filterOptions,\r\n        listPickingFinished\r\n    } = useListView()\r\n\r\n    useEffect(() => {\r\n        getList(props.match.params.listId)\r\n    }, [props.match.params.listId])\r\n\r\n    const listElements = listItems.map(item => {\r\n        return (\r\n            <ListItem key={item.id} className={classes.listItem} divider={true}>\r\n                <ListItemText primary={item.name} className={classes.listItemText} />\r\n                {item.list_item.comment\r\n                    ? <Chip label={item.list_item.comment} size='small' />\r\n                    : null\r\n                }\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge='end' size='small' color='secondary' onClick={() => itemCheckClicked(item.id)}>\r\n                        <CheckIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    })\r\n\r\n    const pickedListItems = pickedList.map(item => {\r\n        return (\r\n            <ListItem key={item.id} divider={true}>\r\n                <ListItemText primary={item.name} className={classes.pickedListItemText}/>\r\n                {item.list_item.comment\r\n                    ? <Chip label={item.list_item.comment} size='small' />\r\n                    : null\r\n                }\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge='end' size='small' color='inherit' onClick={() => itemCheckUndo(item.id)}>\r\n                        <RestoreIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {finishedRedirect ? <Redirect to='/createlist' /> : null}\r\n            <Container component='div' maxWidth='sm' className={classes.container}>\r\n                <h1 className={classes.hiddenTitle}>{`Shopping page - ${listData.name}`}</h1>\r\n                <Paper \r\n                    className={classes.listPaper} \r\n                    elevation={3} \r\n                    component='article' \r\n                >\r\n                    <header className={classes.listHeader}>\r\n                        <Typography variant='h4' component='h1' className={classes.articleTitle} color='primary' align='center'>\r\n                            {listData.name}\r\n                        </Typography>\r\n                        <IconButton \r\n                            edge='end'\r\n                            color='inherit'\r\n                            onClick={() => props.history.push('/mylists/edit/' + props.match.params.listId)}\r\n                        >\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                    </header>\r\n                    <List>\r\n                        {listElements}\r\n                    </List>\r\n                    <List className={classes.pickedList}>\r\n                        {pickedListItems.reverse()}\r\n                    </List>\r\n                </Paper>\r\n            </Container>\r\n            <ListCompleteDialog open={finishModalOpen} handleClose={handleFinishModalClose} handleFinished={listPickingFinished} />\r\n            <Fab color='secondary' aria-label='add-items-to-list' className={classes.addButton} onClick={openItemSearch}>\r\n                <AddIcon />\r\n            </Fab>\r\n            <AddItemDialog \r\n                addItem={addItemTolist}\r\n                addUserItem={addItemTolist}\r\n                openItemSearch={openItemSearch}\r\n                itemSearchOpen={itemSearchOpen}\r\n                handleItemSearchClose={handleAddItemModalClose}\r\n                itemAutocompleteValue={itemAutocompleteValue}\r\n                categoryAutocompleteValue={itemAddDialogValue.category}\r\n                autoCompleteValueChange={itemAutoCompleteValueChange}\r\n                filterOptions={filterOptions}\r\n                itemOptions={items}\r\n                categoryOptions={categories}\r\n                getOptionLabel={getOptionLabel}\r\n                dialogOpen={itemAddModalOpen}\r\n                dialogClose={handleAddItemModalClose}\r\n                dialogValues={itemAddDialogValue}\r\n                dialogNameChange={dialogNameChange}\r\n                dialogCategoryChange={dialogCategoryChange}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ListView","import React from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport { createStyles, DialogContentText, makeStyles, Theme, Typography } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\nimport { isIterationStatement } from 'typescript'\r\n\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        itemsList: {\r\n\r\n        },\r\n        listItem: {\r\n            marginBottom: '0.5rem'\r\n        },\r\n        iconButtons: {\r\n            marginLeft: theme.spacing(2)\r\n        },\r\n        addButton: {\r\n            position: 'fixed',\r\n            left: '50\\%',\r\n            right: '50\\%',\r\n            bottom: theme.spacing(2),\r\n            transform: 'translateX(-50\\%)'\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n        tabPlaceholder: {\r\n            marginTop: theme.spacing(3)\r\n        }\r\n    })\r\n)\r\n\r\nconst TabPanel = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <section \r\n            role='tabpanel'\r\n            hidden={props.value !== props.index}\r\n            id={`${props.name} Tab`}\r\n            aria-labelledby={props.name}\r\n            {...props.other}\r\n        >\r\n            {props.value === props.index && (\r\n                <React.Fragment>\r\n                    <h2 className={classes.hiddenTitle}>{props.name}</h2>\r\n                    {props.content.length > 0\r\n                        ? null\r\n                        : <Typography variant='h5' component='p' color='primary' className={classes.tabPlaceholder}>\r\n                            {`You have not saved any ${props.name} yet.`}\r\n                        </Typography>\r\n                    }\r\n                    <List className={classes.itemsList}>\r\n                        {props.content.map((element: any) => {\r\n                            return (\r\n                                <ListItem\r\n                                    key={element.id}\r\n                                    className={classes.listItem}\r\n                                    divider={true}\r\n                                >\r\n                                    <ListItemText primary={element.name} />\r\n                                    <Menu\r\n                                        id=\"item-actions-menu\"\r\n                                        anchorEl={props.menuAnchorEl}\r\n                                        keepMounted\r\n                                        open={Boolean(props.menuAnchorEl)}\r\n                                        onClose={props.closeDotsMenu}\r\n                                        TransitionComponent={Fade}\r\n                                    >\r\n                                        <MenuItem onClick={props.editElement}>Edit</MenuItem>\r\n                                        <MenuItem onClick={() => props.deleteButtonPressed(element)}>Delete</MenuItem>\r\n                                    </Menu>\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton \r\n                                            aria-controls='item-actions-menu'\r\n                                            aria-haspopup='true'\r\n                                            edge='end'\r\n                                            size='small'\r\n                                            color='inherit'\r\n                                            onClick={(event) => props.handleDotsClick(event, element)}\r\n                                        >\r\n                                            <MoreVertIcon />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </List>\r\n                    <Dialog open={props.deleteModalOpen} onClose={props.deleteModalClose}>\r\n                        <DialogTitle id=\"confirm-delete\">\r\n                            Delete item?\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                {`Are you sure you want to delete ${props.isItem ? 'item ' : 'category '} - ${props.elementToDelete ? props.elementToDelete.name : null} ?`}\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" onClick={props.deleteModalClose}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" onClick={() => props.deleteElement(props.isItem)}>\r\n                                Yes\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Fab color='secondary' aria-label={`add-${props.isItem ? 'item' : 'category'}`} className={classes.addButton} onClick={() => props.addButtonPressed(props.isItem)}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </React.Fragment>\r\n            ) }\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default TabPanel","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { Item } from '../../../ListView/hooks/useListView'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        \r\n    })\r\n)\r\n\r\nconst EditElementDialog = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n\r\n    return (\r\n        <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"add-item-dialog-name\">\r\n                <form onSubmit={props.confirmEdit}>\r\n                    <DialogTitle id=\"add-item-dialog-name\">{props.addOrEdit === 'add' ? 'Add Item' : 'Edit item'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            value={(props.dialogValues as Item).name}\r\n                            onChange={props.itemNameChange}\r\n                            label=\"name\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Autocomplete \r\n                            value={props.categoryAutocompleteValue}\r\n                            onChange={props.dialogCategoryChange}\r\n                            filterOptions={props.filterOptions}\r\n                            id='category-autocomplete'\r\n                            options={props.categoryOptions}\r\n                            getOptionLabel={props.getOptionLabel}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            renderOption={option => option.name}\r\n                            freeSolo\r\n                            renderInput={params => (<TextField {...params} label='category' margin='dense' variant='outlined' />)}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.dialogClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditElementDialog","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { Category } from '../../../ListView/hooks/useListView'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        \r\n    })\r\n)\r\n\r\nconst EditCategoryDialog = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"edit-category-dialog\">\r\n            <form onSubmit={props.confirmEdit}>\r\n                <DialogTitle id=\"edit-category-dialog\">{props.addOrEdit === 'add' ? 'Add Item' : 'Edit Item'}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        value={props.dialogValue}\r\n                        onChange={props.nameChange}\r\n                        label=\"name\"\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.dialogClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditCategoryDialog","import React, { useEffect, useState } from 'react'\r\nimport axios from '../../../util/axiosAPI'\r\nimport { Item } from '../../CreateList/hooks/useCreateList'\r\nimport { Category } from '../../CreateList/hooks/useCreateList'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\n\r\nconst useUserItemsAndCategories = () => {\r\n    const [tabValue, setTabValue] = useState<number>(0)\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [addOrEdit, setAddOrEdit] = useState<string>('add')\r\n    const [categories, setCategories] = useState<Category[]>([])\r\n    const [editItemDialogValue, setEditItemDialogValue] = useState({ name: '', category: {}})\r\n    const [editCategoryDialogValue, setEditCategoryDialogValue] = useState<string>('')\r\n    const [editItemModalOpen, setEditItemModalOpen] = useState<boolean>(false)\r\n    const [editCategoryModalOpen, setEditCategoryModalOpen] = useState<boolean>(false)\r\n    const [editingItem, setEditingItem] = useState<Item | null>(null)\r\n    const [editingCategory, setEditingCategory] = useState<Category | null>(null)\r\n    const [elementToDelete, setElementToDelete] = useState<any>(null)\r\n    const [deleteModalOpen, setDeleteModalOpen] = useState<boolean>(false)\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState<null | HTMLElement>(null)\r\n\r\n    const filter = createFilterOptions<Item | Category>()\r\n\r\n    useEffect(() => {\r\n        getItems(localStorage.getItem('userId'))\r\n        getCategories(localStorage.getItem('userId'))\r\n    }, [localStorage.getItem('userId')])\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTabValue(newValue)\r\n    }\r\n\r\n    const getItems = (userId: string | null) => {\r\n        axios.get('/items/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setItems(response.data)\r\n        })\r\n    }\r\n\r\n    const getCategories = (userId: string | null) => {\r\n        axios.get('/categories/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setCategories(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const addButtonPressed = (isItem: boolean) => {\r\n        setEditingCategory(null)\r\n        setAddOrEdit('add')\r\n        setEditingItem(null)\r\n        if (isItem) {\r\n            setEditItemModalOpen(true)\r\n        } else {\r\n            setEditCategoryModalOpen(true)\r\n        }\r\n    }\r\n\r\n    const editItemButtonPressed = () => {\r\n        setAddOrEdit('edit')\r\n        const category = categories.find(cat => cat.id === editingItem!.userCategoryId)\r\n        setEditItemDialogValue({ name: editingItem!.name, category: (category as Category) })\r\n        setEditItemModalOpen(true)\r\n        setMenuAnchorEl(null)\r\n    }\r\n\r\n    const editCategoryButtonPressed = () => {\r\n        setAddOrEdit('edit')\r\n        setEditCategoryDialogValue(editingCategory!.name)\r\n        setEditCategoryModalOpen(true)\r\n        setMenuAnchorEl(null)\r\n    }\r\n\r\n    const editDialogNameChange = (event: React.ChangeEvent<any>) => {\r\n        setEditItemDialogValue({ ...editItemDialogValue, name: event.target.value })\r\n    }\r\n\r\n    const editItemDialogCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | string) => {\r\n        if (typeof newValue === 'string') {\r\n            setEditItemModalOpen(true);\r\n            setEditItemDialogValue({\r\n            ...(editItemDialogValue as Item),\r\n            category: newValue,\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setEditItemDialogValue({...(editItemDialogValue as Item), category: newValue.inputValue})\r\n        } else {\r\n            setEditItemDialogValue({...(editItemDialogValue as Item), category: newValue})\r\n        }\r\n    }\r\n\r\n    const filterAutocompleteOptions = (options: Item[] | Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const editCategoryNameChange = (event: React.ChangeEvent<any>) => {\r\n        setEditCategoryDialogValue(event.target.value)\r\n    }\r\n\r\n    const getOptionLabel = (option: Item | Category | string) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const saveItemEdit = (event: any) => {\r\n        event.preventDefault()\r\n        if (editingItem) {\r\n            axios.put('/items/' + editingItem!.id, {\r\n                userId: localStorage.getItem('userId'),\r\n                newName: editItemDialogValue.name,\r\n                category: editItemDialogValue.category\r\n            }, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(response => {\r\n                getItems(localStorage.getItem('userId'))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            axios.post('/items/' + localStorage.getItem('userId'), {\r\n                name: editItemDialogValue.name,\r\n                category: editItemDialogValue.category\r\n            }, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(response => {\r\n                getItems(localStorage.getItem('userId'))\r\n                getCategories(localStorage.getItem('userId'))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        handleItemEditModalClose()\r\n    }\r\n\r\n    const saveCategoryEdit = (event: any) => {\r\n        event.preventDefault()\r\n        if (editingCategory) {\r\n            axios.put('/categories/' + editingCategory.id + '?userId=' + localStorage.getItem('userId'), {\r\n                newCategoryName: editCategoryDialogValue\r\n            }, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(response => {\r\n                getCategories(localStorage.getItem('userId'))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            axios.post('/categories/' + localStorage.getItem('userId'), {\r\n                name: editCategoryDialogValue\r\n            }, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(response => {\r\n                getCategories(localStorage.getItem('userId'))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        handleCategoryEditModalClose()\r\n    }\r\n\r\n    const handleItemEditModalClose = () => {\r\n        setEditItemDialogValue({\r\n            name: '',\r\n            category: ''\r\n        })\r\n        setEditingItem(null)\r\n        setEditItemModalOpen(false)\r\n    }\r\n\r\n    const handleCategoryEditModalClose = () => {\r\n        setEditCategoryDialogValue('')\r\n        setEditingCategory(null)\r\n        setEditCategoryModalOpen(false)\r\n    }\r\n\r\n    const handleDeleteModalClose = () => {\r\n        setDeleteModalOpen(false)\r\n        setElementToDelete(null)\r\n    }\r\n\r\n    const deleteButtonPressed = (element: any) => {\r\n        setDeleteModalOpen(true)\r\n        setElementToDelete(element)\r\n        setMenuAnchorEl(null)\r\n    }\r\n\r\n    const deleteItemOrCategory = (isItem: boolean) => {\r\n        const url = isItem ? '/items/' : '/categories/'\r\n        axios.delete(url + elementToDelete.id + '?userId=' + localStorage.getItem('userId'), {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n        })\r\n        .then(response => {\r\n            if (isItem) {\r\n                getItems(localStorage.getItem('userId'))\r\n            } else {\r\n                getCategories(localStorage.getItem('userId'))\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        handleDeleteModalClose()\r\n    }\r\n\r\n    const handleDotsClick = (event: React.MouseEvent<HTMLButtonElement>, element: Category | Item) => {\r\n        setMenuAnchorEl(event.currentTarget)\r\n        if (tabValue === 0) {\r\n            setEditingItem(element)\r\n        } else {\r\n            setEditingCategory(element)\r\n        }\r\n    }\r\n\r\n    const closeDotsMenu = () => {\r\n        setMenuAnchorEl(null)\r\n    }\r\n\r\n    return {\r\n        items: items,\r\n        categories: categories,\r\n        elementToDelete: elementToDelete,\r\n        menuAnchorEl: menuAnchorEl,\r\n        addOrEdit: addOrEdit,\r\n        // input values\r\n        tabValue: tabValue,\r\n        editItemDialogValue: editItemDialogValue,\r\n        editCategoryDialogValue: editCategoryDialogValue,\r\n        // modal states\r\n        editItemModalOpen: editItemModalOpen,\r\n        editCategoryModalOpen: editCategoryModalOpen,\r\n        deleteModalOpen: deleteModalOpen,\r\n        // modal close handlers\r\n        handleItemEditModalClose: handleItemEditModalClose,\r\n        handleCategoryEditModalClose: handleCategoryEditModalClose,\r\n        handleDeleteModalClose: handleDeleteModalClose,\r\n        closeDotsMenu: closeDotsMenu,\r\n        //functions when buttons are pressed\r\n        addButtonPressed: addButtonPressed,\r\n        deleteButtonPressed: deleteButtonPressed,\r\n        editItemButtonPressed: editItemButtonPressed,\r\n        editCategoryButtonPressed: editCategoryButtonPressed,\r\n        handleTabChange: handleTabChange,\r\n        handleDotsClick: handleDotsClick,\r\n        // input changes\r\n        editDialogNameChange: editDialogNameChange,\r\n        editItemDialogCategoryChange: editItemDialogCategoryChange,\r\n        editCategoryNameChange: editCategoryNameChange,\r\n        // autocomplete functions\r\n        filterAutocompleteOptions: filterAutocompleteOptions,\r\n        getOptionLabel: getOptionLabel,\r\n        // api request senders\r\n        saveItemEdit: saveItemEdit,\r\n        saveCategoryEdit: saveCategoryEdit,\r\n        deleteElement: deleteItemOrCategory,\r\n    }\r\n}\r\n\r\nexport default useUserItemsAndCategories","import React from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport TabPanel from './components/TabPanel'\r\nimport EditElementDialog from './components/EditElementDialog'\r\nimport EditCategoryDialog from './components/EditCategoryDialog'\r\nimport useUserItemsAndCategories from './hooks/useUserItemsAndCategories'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n        tabs: {\r\n            marginTop: 70\r\n        }\r\n    })\r\n)\r\n\r\nconst UserItemsAndCategories = () => {\r\n    const classes = useStyles()\r\n\r\n    const { \r\n        items,\r\n        categories,\r\n        tabValue,\r\n        menuAnchorEl,\r\n        editItemModalOpen,\r\n        editCategoryModalOpen,\r\n        deleteModalOpen,\r\n        elementToDelete,\r\n        editItemDialogValue,\r\n        editCategoryDialogValue,\r\n        addOrEdit,\r\n        addButtonPressed,\r\n        deleteButtonPressed,\r\n        saveItemEdit,\r\n        saveCategoryEdit,\r\n        editDialogNameChange,\r\n        editItemDialogCategoryChange,\r\n        editCategoryNameChange,\r\n        filterAutocompleteOptions,\r\n        getOptionLabel,\r\n        editItemButtonPressed,\r\n        editCategoryButtonPressed,\r\n        handleItemEditModalClose,\r\n        handleCategoryEditModalClose,\r\n        handleDeleteModalClose,\r\n        handleTabChange,\r\n        deleteElement,\r\n        handleDotsClick,\r\n        closeDotsMenu,\r\n    } = useUserItemsAndCategories()\r\n\r\n    return (\r\n        <Container component='article' maxWidth='sm' className={classes.container}>\r\n            <h1 className={classes.hiddenTitle}>Edit items and categories</h1>\r\n            <Tabs \r\n                value={tabValue}\r\n                variant='fullWidth'\r\n                aria-label=\"user-items-navigation-tabs\"\r\n                className={classes.tabs}\r\n                onChange={handleTabChange}\r\n            >\r\n                <Tab label=\"Items\" />\r\n                <Tab label=\"Categories\" />\r\n                <Tab label=\"Recipes\" disabled />\r\n            </Tabs>\r\n            <TabPanel\r\n                value={tabValue}\r\n                name='Items'\r\n                index={0}\r\n                isItem={true}\r\n                content={items}\r\n                menuAnchorEl={menuAnchorEl}\r\n                handleDotsClick={handleDotsClick}\r\n                closeDotsMenu={closeDotsMenu}\r\n                deleteElement={deleteElement}\r\n                editElement={editItemButtonPressed}\r\n                addButtonPressed={addButtonPressed}\r\n                deleteButtonPressed={deleteButtonPressed}\r\n                deleteModalOpen={deleteModalOpen}\r\n                elementToDelete={elementToDelete}\r\n                deleteModalClose={handleDeleteModalClose}\r\n            />\r\n            <TabPanel\r\n                value={tabValue}\r\n                name='Categories'\r\n                index={1}\r\n                isItem={false}\r\n                content={categories}\r\n                menuAnchorEl={menuAnchorEl}\r\n                handleDotsClick={handleDotsClick}\r\n                closeDotsMenu={closeDotsMenu}\r\n                deleteElement={deleteElement}\r\n                editElement={editCategoryButtonPressed}\r\n                addButtonPressed={addButtonPressed}\r\n                deleteButtonPressed={deleteButtonPressed}\r\n                deleteModalOpen={deleteModalOpen}\r\n                elementToDelete={elementToDelete}\r\n                deleteModalClose={handleDeleteModalClose}\r\n            />\r\n            <EditElementDialog \r\n                dialogOpen={editItemModalOpen}\r\n                dialogClose={handleItemEditModalClose}\r\n                confirmEdit={saveItemEdit}\r\n                dialogValues={editItemDialogValue}\r\n                itemNameChange={editDialogNameChange}\r\n                categoryAutocompleteValue={editItemDialogValue.category}\r\n                dialogCategoryChange={editItemDialogCategoryChange}\r\n                filterOptions={filterAutocompleteOptions}\r\n                categoryOptions={categories}\r\n                getOptionLabel={getOptionLabel}\r\n                addOrEdit={addOrEdit}\r\n            />\r\n            <EditCategoryDialog \r\n                addOrEdit={addOrEdit}\r\n                dialogOpen={editCategoryModalOpen}\r\n                dialogClose={handleCategoryEditModalClose}\r\n                dialogValue={editCategoryDialogValue}\r\n                confirmEdit={saveCategoryEdit}\r\n                nameChange={editCategoryNameChange}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserItemsAndCategories\r\n","import React, { useEffect, useState, useCallback } from 'react'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\nimport { ListData, Item, Category } from '../../ListView/hooks/useListView'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\n\r\nconst useListEdit = () => {\r\n\r\n    const filter = createFilterOptions<Item | Category>()\r\n\r\n    const [list, setList] = useState<ListData>({})\r\n    const [changedList, setChangedList] = useState<ListData>({})\r\n    const [listChanged, setListChanged] = useState({\r\n        name: false,\r\n        items: false\r\n    })\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [categories, setCategories] = useState<Category[]>([])\r\n    const [itemSearchOpen, setItemSearchOpen] = useState<boolean>(false)\r\n    const [itemAddModalOpen, setItemAddModalOpen] = useState<boolean>(false)\r\n    const [itemAutocompleteValue, setItemAutocompleteValue] = useState<Item | null>(null)\r\n    const [itemAddDialogValue, setItemAddDialogValue] = useState<Item>({ name: '', category: '' })\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState<null | HTMLElement>(null)\r\n    const [commentDialogOpen, setCommentDialogOpen] = useState<boolean>(false)\r\n    const [commentDialogValue, setCommentDialogValue] = useState<string>('')\r\n    const [commentItemId, setCommentItemId] = useState<number | null>(null)\r\n    const [alertOpen, setAlertOpen] = useState<boolean>(false)\r\n\r\n\r\n\r\n    const getList = useCallback((listId: number) => {\r\n        axios.get('/list/listdetails/' + listId + '?userId=' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                setList({...response.data, items: response.data.user_items})\r\n                setChangedList({...response.data, items: response.data.user_items})\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    const getItems = () => {\r\n        axios.get('/items/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setItems(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        axios.get('categories/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setCategories(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const itemAutocompleteValueChange = (event: React.ChangeEvent<any>, newValue: Item | string) => {\r\n        if (typeof newValue === 'string') {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            setTimeout(() => {\r\n              setItemAddModalOpen(true);\r\n              setItemAddDialogValue({\r\n                name: newValue,\r\n                category: '',\r\n              })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddModalOpen(true)\r\n            setItemAddDialogValue({\r\n                id: newValue.id,\r\n                name: newValue.inputValue,\r\n                category: '',\r\n            })\r\n        } else {\r\n            setItemAddDialogValue({\r\n                id: newValue.id,\r\n                name: newValue.name,\r\n                category: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    const dialogCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | string) => {\r\n        if (typeof newValue === 'string') {\r\n            setItemAddModalOpen(true);\r\n            setItemAddDialogValue({\r\n            ...(itemAddDialogValue as Item),\r\n            category: newValue,\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue.inputValue})\r\n        } else {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue})\r\n        }\r\n    }\r\n\r\n    const filterOptions = (options: Item[] | Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const getOptionLabel = (option: Item | Category | string) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const handleAddItemModalClose = () => {\r\n        setItemAddDialogValue({\r\n            name: '',\r\n            category: ''\r\n        })\r\n        setItemAddModalOpen(false)\r\n        setItemSearchOpen(false)\r\n        setItemAutocompleteValue(null)\r\n\r\n    }\r\n\r\n    const addItemToList = (event: any) => {\r\n        event.preventDefault()\r\n        let duplicateItem = false\r\n        changedList.items?.forEach(item => {\r\n            if (itemAddDialogValue.id === item.id) {\r\n                setAlertOpen(true)\r\n                handleAddItemModalClose()\r\n                duplicateItem = true\r\n                return\r\n            }\r\n        })\r\n        if (duplicateItem) {\r\n            return\r\n        }\r\n        const newList = {\r\n            ...changedList,\r\n            items: [\r\n                ...(changedList.items as Item[]),\r\n                {name: itemAddDialogValue.name, id: itemAddDialogValue.id, list_item: null }\r\n            ]\r\n        }\r\n        setChangedList(newList)\r\n        setListChanged({...listChanged, items: true})\r\n        handleAddItemModalClose()\r\n    }\r\n\r\n    const addUserItem = (event: any) => {\r\n        event.preventDefault()\r\n        axios.post('/items/' + localStorage.getItem('userId'), {\r\n            itemId: itemAutocompleteValue?.id,\r\n            name: itemAddDialogValue.name,\r\n            category: itemAddDialogValue.category\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            const newListItems = {\r\n                ...changedList,\r\n                items: [\r\n                    ...(changedList.items as Item[]),\r\n                    {name: itemAddDialogValue.name, id: response.data.id, list_item: null}\r\n                ]\r\n            }\r\n            setChangedList(newListItems)\r\n            setListChanged({...listChanged, items: true})\r\n            handleAddItemModalClose()\r\n            getItems()\r\n            getCategories()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const removeListItem = () => {\r\n        const newListItems = changedList.items?.filter(item => {\r\n            return item.id !== commentItemId\r\n        })\r\n        setChangedList({...changedList, items: newListItems})\r\n        closeDotsMenu()\r\n        setListChanged({...listChanged, items: true})\r\n    }\r\n\r\n    const dialogNameChange = (event: React.ChangeEvent<any>) => {\r\n        setItemAddDialogValue({...(itemAddDialogValue as Item), name: event.target.value})\r\n    }\r\n\r\n    const listNameChange = (event: React.ChangeEvent<any>) => {\r\n        setChangedList({...changedList, name: event.target.value})\r\n        setListChanged({...listChanged, name: true})\r\n    }\r\n\r\n    const openItemSearch = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        getItems()\r\n        getCategories()\r\n        setItemSearchOpen(true)\r\n    } \r\n\r\n    const saveList = () => {\r\n        if (!listChanged.items && !listChanged.name) {\r\n            return\r\n        }\r\n        if (listChanged.name) {\r\n            listNameChangeRequest()\r\n        }\r\n        if (listChanged.items) {\r\n            axios.put('/list/update', {\r\n                list: changedList\r\n            }, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(response => {\r\n    \r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    const listNameChangeRequest = () => {\r\n        axios.put('/list/' + list.id, {\r\n            userId: localStorage.getItem('userId'),\r\n            newName: changedList.name\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const addCommentButtonClicked = () => {\r\n        setCommentDialogOpen(true)\r\n    }\r\n\r\n    const handleCommentDialogValueChange = (event: React.ChangeEvent<any>) => {\r\n        setCommentDialogValue(event.target.value)\r\n    }\r\n\r\n    const handleCommentDialogClose = () => {\r\n        setCommentDialogOpen(false)\r\n        setCommentItemId(null)\r\n        setMenuAnchorEl(null)\r\n        setCommentDialogValue('')\r\n    }\r\n\r\n    const deleteItemComment = (id: number) => {\r\n        const updatedCommentItems = changedList.items?.map(item => {\r\n            if (item.id !== id) {\r\n                return item\r\n            }\r\n            return {\r\n                ...item,\r\n                list_item: {...item.list_item, comment: null}\r\n            }\r\n        })\r\n        const updatedList = {...changedList, items: updatedCommentItems}\r\n        setChangedList(updatedList)\r\n        setListChanged({...listChanged, items: true})\r\n        handleCommentDialogClose()\r\n    }\r\n\r\n    const saveItemComment = (event: any) => {\r\n        event.preventDefault()\r\n        const updatedCommentItems = changedList.items?.map(item => {\r\n            if (item.id !== commentItemId) {\r\n                return item\r\n            } \r\n            return {\r\n                ...item,\r\n                list_item: {...item.list_item, comment: commentDialogValue}\r\n            }\r\n        })\r\n        const updatedList = {...changedList, items: updatedCommentItems}\r\n        setChangedList(updatedList)\r\n        setListChanged({...listChanged, items: true})\r\n        handleCommentDialogClose()\r\n    }\r\n\r\n    const handleDotsClick = (event: React.MouseEvent<HTMLButtonElement>, id: number) => {\r\n        setMenuAnchorEl(event.currentTarget)\r\n        setCommentItemId(id)\r\n    }\r\n\r\n    const closeDotsMenu = () => {\r\n        setMenuAnchorEl(null)\r\n    }\r\n\r\n    const handleAlertClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlertOpen(false)\r\n    }\r\n\r\n\r\n    return {\r\n        items: items,\r\n        categories: categories,\r\n        list: list,\r\n        changedList: changedList,\r\n        itemSearchOpen: itemSearchOpen,\r\n        itemAddModalOpen: itemAddModalOpen,\r\n        itemAutocompleteValue: itemAutocompleteValue,\r\n        itemAddDialogValue: itemAddDialogValue,\r\n        menuAnchorEl: menuAnchorEl,\r\n        commentDialogOpen: commentDialogOpen,\r\n        commentDialogValue: commentDialogValue,\r\n        alertOpen: alertOpen,\r\n        handleAlertClose: handleAlertClose,\r\n        addCommentButtonClicked: addCommentButtonClicked,\r\n        handleCommentDialogValueChange: handleCommentDialogValueChange,\r\n        handleCommentDialogClose: handleCommentDialogClose,\r\n        deleteItemComment: deleteItemComment,\r\n        saveItemComment: saveItemComment,\r\n        handleDotsClick: handleDotsClick,\r\n        closeDotsMenu: closeDotsMenu,\r\n        getList: getList,\r\n        saveList: saveList,\r\n        openItemSearch: openItemSearch,\r\n        itemAutocompleteValueChange: itemAutocompleteValueChange,\r\n        handleAddItemModalClose: handleAddItemModalClose,\r\n        dialogCategoryChange: dialogCategoryChange,\r\n        dialogNameChange: dialogNameChange,\r\n        listNameChange: listNameChange,\r\n        filterOptions: filterOptions,\r\n        getOptionLabel: getOptionLabel,\r\n        addItemToList: addItemToList,\r\n        removeListItem: removeListItem,\r\n        addUserItem: addUserItem\r\n    }\r\n}\r\n\r\nexport default useListEdit","import React, { useEffect } from 'react'\r\nimport useListEdit from './hooks/useListEdit'\r\nimport Alert from '../UI/Alert'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport AddItemDialog from '../ListView/components/AddItemDialog'\r\nimport CommentDialog from '../UI/CommentDialog'\r\nimport ListElement from '../UI/ListElement'\r\nimport Container from '@material-ui/core/Container'\r\nimport List from '@material-ui/core/List'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        listNameInput: {\r\n            width: '80%',\r\n            left: '10%',\r\n            right: '10%',\r\n            marginTop: '100px',\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            marginBottom: 30,\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n        listItem: {\r\n            flexGrow: 1,\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n        addButton: {\r\n            position: 'sticky',\r\n            marginTop: theme.spacing(3),\r\n            left: '50\\%',\r\n            right: '50\\%',\r\n            bottom: theme.spacing(2),\r\n            transform: 'translateX(-50\\%)'\r\n        },\r\n        saveButton: {\r\n            left: '50\\%',\r\n            right: '50\\%',\r\n            transform: 'translateX(-50\\%)'\r\n        },\r\n        alert: {\r\n            marginBottom: theme.spacing(9)\r\n        }\r\n    })\r\n)\r\n\r\nconst ListEdit = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    const {\r\n        items,\r\n        categories,\r\n        itemSearchOpen,\r\n        itemAddModalOpen,\r\n        itemAutocompleteValue,\r\n        itemAddDialogValue,\r\n        menuAnchorEl,\r\n        commentDialogOpen,\r\n        commentDialogValue,\r\n        changedList,\r\n        alertOpen,\r\n        handleAlertClose,\r\n        addCommentButtonClicked,\r\n        handleCommentDialogValueChange,\r\n        handleCommentDialogClose,\r\n        deleteItemComment,\r\n        saveItemComment,\r\n        handleDotsClick,\r\n        closeDotsMenu,\r\n        getList,\r\n        openItemSearch,\r\n        itemAutocompleteValueChange,\r\n        handleAddItemModalClose,\r\n        dialogCategoryChange,\r\n        dialogNameChange,\r\n        listNameChange,\r\n        filterOptions,\r\n        getOptionLabel,\r\n        addItemToList,\r\n        removeListItem,\r\n        saveList,\r\n        addUserItem\r\n    } = useListEdit()\r\n\r\n    useEffect(() => {\r\n        getList(props.match.params.listId)\r\n    }, [props.match.params.listId])\r\n\r\n    const listElements = changedList.items?.map(item => {\r\n        return (\r\n            <ListElement\r\n                key={item.id}\r\n                id={item.id}\r\n                listItemId={item.list_item?.id}\r\n                name={item.name}\r\n                comment={item.list_item?.comment}\r\n                deleteComment={deleteItemComment}\r\n                menuAnchorEl={menuAnchorEl}\r\n                closeDotsMenu={closeDotsMenu}\r\n                removeListItem={removeListItem}\r\n                addCommentButtonClicked={addCommentButtonClicked}\r\n                handleDotsClick={handleDotsClick}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Container component='article' maxWidth='sm' >\r\n            <h1 className={classes.hiddenTitle}>{`Edit list - ${changedList.name}`}</h1>\r\n            <TextField\r\n                id=\"list-name\"\r\n                label=\"List name\"\r\n                type=\"text\"\r\n                value={changedList.name}\r\n                onChange={listNameChange}\r\n                className={classes.listNameInput}\r\n                inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                InputLabelProps={{ shrink: true }}\r\n            />\r\n            <Button \r\n                type='button' \r\n                color='inherit' \r\n                variant='contained' \r\n                size='small'\r\n                className={classes.saveButton}\r\n                startIcon={<SaveIcon />}\r\n                onClick={() => {\r\n                    saveList()\r\n                    props.history.push('/mylists/use/' + props.match.params.listId)\r\n                }}\r\n            >\r\n                Save & shop\r\n            </Button>\r\n            <List>\r\n                {listElements}\r\n            </List>\r\n            <Fab\r\n                color='secondary'\r\n                aria-label='add-items-to-list'\r\n                className={classes.addButton}\r\n                onClick={openItemSearch}\r\n            >\r\n                <AddIcon />\r\n            </Fab>\r\n            <Snackbar open={alertOpen} autoHideDuration={9000} onClose={handleAlertClose} className={classes.alert}>\r\n                <Alert onClose={handleAlertClose} severity='error'>\r\n                    This item is already in the list\r\n                </Alert>\r\n            </Snackbar>\r\n            <AddItemDialog \r\n                addItemToList={addItemToList}\r\n                addItem={addUserItem}\r\n                openItemSearch={openItemSearch}\r\n                itemSearchOpen={itemSearchOpen}\r\n                handleItemSearchClose={handleAddItemModalClose}\r\n                itemAutocompleteValue={itemAutocompleteValue}\r\n                categoryAutocompleteValue={itemAddDialogValue.category}\r\n                autoCompleteValueChange={itemAutocompleteValueChange}\r\n                filterOptions={filterOptions}\r\n                itemOptions={items}\r\n                categoryOptions={categories}\r\n                getOptionLabel={getOptionLabel}\r\n                dialogOpen={itemAddModalOpen}\r\n                dialogClose={handleAddItemModalClose}\r\n                dialogValues={itemAddDialogValue}\r\n                dialogNameChange={dialogNameChange}\r\n                dialogCategoryChange={dialogCategoryChange}\r\n            />\r\n            <CommentDialog\r\n                dialogOpen={commentDialogOpen}\r\n                dialogClose={handleCommentDialogClose}\r\n                saveComment={saveItemComment}\r\n                valueChange={handleCommentDialogValueChange}\r\n                value={commentDialogValue}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ListEdit","import React from 'react'\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router'\r\nimport Layout from '../Layout'\r\nimport AddItems from '../AddItems'\r\nimport CreateList from '../CreateList'\r\nimport LogIn from '../LogIn'\r\nimport Register from '../Register'\r\nimport MyLists from '../MyLists'\r\nimport ListView from '../ListView'\r\nimport UserItemsAndCategories from '../UserItemsAndCategories'\r\nimport ListEdit from '../ListEdit'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/login\" component={LogIn}/>\r\n      <Route path=\"/register\" component={Register}/>\r\n      <Route path=\"/\" component={LogIn} />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  )\r\n\r\n  if ( localStorage.getItem('token') ) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/createlist\" component={CreateList} />\r\n        <Route path=\"/additems\" component={AddItems} />\r\n        <Route path=\"/login\" component={LogIn}/>\r\n        <Route path=\"/register\" component={Register}/>\r\n        <Route path=\"/useritems\" component={UserItemsAndCategories} />\r\n        <Route path=\"/mylists/use/:listId\" component={ListView} />\r\n        <Route path=\"/mylists/edit/:listId\" component={ListEdit} />\r\n        <Route path=\"/mylists\" component={MyLists}/>\r\n        <Route path=\"/\" component={CreateList} />\r\n        <Redirect to=\"/\" />\r\n    </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {routes}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default withRouter( App );\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport './index.css';\nimport App from './components/App/App';\nimport AuthContextProvider from './context/auth-context'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <AuthContextProvider>\n          <App />\n        </AuthContextProvider>\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}