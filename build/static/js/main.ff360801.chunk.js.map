{"version":3,"sources":["theme.ts","components/Header/components/MobileNavBar/index.tsx","components/Header/components/DesktopNavBar/index.tsx","reducers/auth.ts","context/auth-context.tsx","components/Header/Header.tsx","components/Layout/Layout.tsx","constants/index.ts","util/axiosAPI.ts","components/AddItems/hooks/useAddItems.ts","components/AddItems/AddItems.tsx","components/CreateList/hooks/useCreateList.ts","components/AddItemForm/AddItemForm.tsx","components/CreateList/components/Suggestions/Suggestions.tsx","components/CreateList/components/ConfirmSaveDialog/ConfirmSaveDialog.tsx","components/CreateList/CreateList.tsx","components/LogIn/hooks/useLogin.tsx","components/UI/Alert/Alert.tsx","components/LogIn/LogIn.tsx","components/Register/hooks/useRegister.tsx","components/Register/Register.tsx","components/MyLists/hooks/useMyLists.tsx","components/MyLists/MyLists.tsx","components/ListView/hooks/useListView.tsx","components/ListView/components/ListCompleteDialog/ListCompleteDialog.tsx","components/ListView/components/AddItemDialog/AddItemDialog.tsx","components/ListView/ListView.tsx","components/UserItemsAndCategories/components/TabPanel/TabPanel.tsx","components/UserItemsAndCategories/components/EditElementDialog/EditElementDialog.tsx","components/UserItemsAndCategories/components/EditCategoryDialog/EditCategoryDialog.tsx","components/UserItemsAndCategories/hooks/useUserItemsAndCategories.tsx","components/UserItemsAndCategories/UserItemsAndCategories.tsx","components/ListEdit/hooks/useListEdit.tsx","components/ListEdit/ListEdit.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","main","blueGrey","secondary","pink","typography","h1","fontSize","h2","h3","h4","h5","h6","useStyles","makeStyles","createStyles","menuButton","marginRight","spacing","title","flexGrow","drawer","width","display","flexDirection","link","textDecoration","margin","linkText","MobileNavBar","props","classes","Toolbar","localStorage","getItem","IconButton","edge","className","color","aria-label","aria-haspopup","onClick","openDrawer","Drawer","open","drawerOpen","onClose","closeDrawer","List","ListItem","alignItems","to","ListItemText","Typography","variant","Button","logOut","component","RouterLink","links","NavBar","Fragment","initialState","isAuth","isLoading","userId","token","username","authReducer","state","action","type","AuthContext","React","createContext","dispatch","AuthContextProvider","useReducer","authState","Provider","value","children","Header","useState","mobileView","redirectToLogin","localState","setLocalState","useContext","useEffect","setResponsiveness","window","innerWidth","prevState","addEventListener","removeItem","loginRedirect","AppBar","position","DesktopNavBar","Layout","config","url","API_URL","instance","axios","create","baseURL","filter","createFilterOptions","useAddItems","itemLasts","setItemLasts","itemName","setItemName","category","setCategory","categories","setCategories","getCategories","get","headers","Authorization","then","response","data","submitItem","event","preventDefault","name","lasts","post","console","log","catch","err","addItemToDB","handleCategoryChange","newValue","setTimeout","inputValue","handleNameChange","target","handleItemLastsChange","filterOptions","options","params","filtered","push","getOptionLabel","option","articleTitle","marginTop","addItemForm","inputs","addButton","AddItems","Container","maxWidth","align","onSubmit","TextField","required","id","label","fullWidth","onChange","Autocomplete","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","freeSolo","renderInput","useCreateList","items","list","setList","setItems","undefined","itemAddDialogValue","setItemAddDialogValue","itemAddModalOpen","setItemAddModalOpen","itemAutocompleteValue","setItemAutocompleteValue","suggestions","setSuggestions","toggleSuggestions","setToggleSuggestions","checkedSuggestions","setCheckedSuggestions","saveListDialogOpen","setSaveListDialogOpen","getItems","getSuggestions","handleAddItemModalClose","handleSuggestionsVisible","handleSaveListDialogClose","saveList","itemAutocompleteValueChange","newList","newItems","item","newSuggestions","dialogNameChange","dialogCategoryChange","listNameChange","removeListItem","itemId","addItem","newListItems","addFromSuggestions","forEach","suggestion","suggestionCheckHandler","currentIndex","indexOf","newChecked","splice","saveListButtonPressed","randomName","String","Math","floor","random","saveListConfirm","AddItemForm","itemAutoCompleteValueChange","itemOptions","Dialog","dialogOpen","dialogClose","aria-labelledby","DialogTitle","DialogContent","autoFocus","dialogValues","categoryAutocompleteValue","onInputChange","categoryOptions","DialogActions","suggestionsBoxVisible","top","left","right","bottom","zIndex","padding","suggestionsBoxHidden","suggestionItem","cursor","buttonContainer","boxSizing","borderTop","suggestionList","maxHeight","overflow","Suggestions","Paper","elevation","map","divider","ListItemSecondaryAction","Checkbox","checked","Grid","container","justify","toggleVisible","disabled","length","addItems","ConfirmSaveDialog","nameChange","nameValue","height","backgroundImage","backgroundSize","hiddenTitle","inputSection","paddingTop","listPaper","justifyContent","marginBottom","minHeight","suggestionButton","saveButton","transform","widescreenInputSection","wideScreenSaveButton","CreateList","widescreen","useMediaQuery","pickedList","size","startIcon","useLogin","setUsername","password","setPassword","errorMessage","setErrorMessage","alertOpen","setAlertOpen","setLoginRedirect","handleAlertClose","reason","handleUsernameChange","handlePasswordChange","submitForm","setItem","error","userLogin","Alert","logInForm","marginLeft","registerContainer","textAlign","registerText","LogIn","Box","Snackbar","autoHideDuration","severity","useRegister","email","setEmail","repeatPassword","setRepeatPassword","resultMessage","setResultMessage","isError","setIsError","successRedirect","handleEmailChange","handleRepeatPasswordChange","confirmPassword","message","registerUser","signUpForm","registerButton","logInContainer","logInText","Register","useMyLists","myLists","setMyLists","getLists","deleteList","listId","delete","listTiles","gridColumnGap","gridRowGap","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","deleteButton","gridArea","useListButton","viewListButton","paddingLeft","date","MyLists","createdAt","split","history","pathname","useListView","listData","setListData","listItems","setListItems","setPickedList","finishModalOpen","setFinishModalOpen","itemSearchOpen","setItemSearchOpen","getList","useCallback","user_items","handleFinishModalOpen","addItemTolist","handleFinishModalClose","openItemSearch","itemCheckClicked","itemKey","clickedItem","find","newPickedItems","itemCheckUndo","listPickingFinished","ListCompleteDialog","handleClose","handleFinished","AddItemDialog","handleItemSearchClose","autoCompleteValueChange","alignContent","listItem","pickedListItem","ListView","match","listElements","pickedListItems","reverse","Fab","itemsList","iconButtons","TabPanel","index","content","deleteElement","isItem","editElement","addButtonPressed","deleteButtonPressed","elementToDelete","deleteModalOpen","deleteModalClose","other","role","hidden","element","DialogContentText","EditElementDialog","confirmEdit","itemNameChange","EditCategoryDialog","dialogValue","useUserItemsAndCategories","tabValue","setTabValue","editItemDialogValue","setEditItemDialogValue","editCategoryDialogValue","setEditCategoryDialogValue","editItemModalOpen","setEditItemModalOpen","editCategoryModalOpen","setEditCategoryModalOpen","editingItem","setEditingItem","editingCategory","setEditingCategory","setElementToDelete","setDeleteModalOpen","handleItemEditModalClose","handleCategoryEditModalClose","handleDeleteModalClose","addItemButtonPressed","addCategoryButtonPressed","editItemButtonPressed","cat","userCategoryId","editCategoryButtonPressed","handleTabChange","editDialogNameChange","editItemDialogCategoryChange","editCategoryNameChange","filterAutocompleteOptions","saveItemEdit","put","newName","saveCategoryEdit","newCategoryName","tabs","UserItemsAndCategories","Tabs","Tab","useListEdit","nameChanged","setNameChanged","saveListNameChange","addItemToList","newListData","list_item","listNameInput","actionsSection","ListEdit","inputProps","min","style","InputLabelProps","shrink","withRouter","routes","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ff360801.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport pink from '@material-ui/core/colors/pink';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blueGrey[500]\r\n        },\r\n        secondary: {\r\n            main: pink[500]\r\n        }\r\n    },\r\n    typography: {\r\n        h1: {\r\n            fontSize: \"2.4rem\",\r\n        },\r\n        h2: {\r\n            fontSize: \"2.2rem\"\r\n        },\r\n        h3: {\r\n            fontSize: \"2rem\"\r\n        },\r\n        h4: {\r\n            fontSize: \"1.6rem\"\r\n        },\r\n        h5: {\r\n            fontSize: \"1.3rem\"\r\n        },\r\n        h6: {\r\n            fontSize: \"1rem\"\r\n        }\r\n    }\r\n})\r\n\r\nexport default theme;","import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        menuButton: {\r\n            marginRight: theme.spacing(2)\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            fontSize: \"1.5rem\"\r\n        },\r\n        drawer: {\r\n            width: \"180px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            fontSize: '1.3rem'\r\n        },\r\n        link: {\r\n            textDecoration: \"none\",\r\n            margin: theme.spacing(2)\r\n        },\r\n        linkText: {\r\n            fontSize: '20px'\r\n        },\r\n    })\r\n);\r\n\r\n\r\nconst MobileNavBar = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Toolbar>\r\n            { localStorage.getItem('token') && (\r\n                <IconButton \r\n                    edge=\"start\" \r\n                    className={classes.menuButton} \r\n                    color=\"inherit\" \r\n                    aria-label=\"menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={props.openDrawer}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n            )}\r\n            <Drawer open={props.drawerOpen} onClose={props.closeDrawer}>\r\n                <nav className={classes.drawer}>\r\n                    <List>\r\n                        <ListItem color=\"inherit\" alignItems=\"center\" onClick={props.closeDrawer}>\r\n                            <RouterLink to=\"/createlist\" className={classes.link}>\r\n                                <ListItemText primary=\"Create a list\" classes={{ primary: classes.linkText }} />\r\n                            </RouterLink>\r\n                        </ListItem>\r\n                        <ListItem color=\"inherit\" alignItems=\"center\" onClick={props.closeDrawer}>\r\n                            <RouterLink to=\"/useritems\" className={classes.link}>\r\n                                <ListItemText primary=\"Edit Items\" classes={{ primary: classes.linkText }} />\r\n                            </RouterLink>\r\n                        </ListItem>\r\n                        <ListItem color=\"inherit\" alignItems=\"center\" onClick={props.closeDrawer}>\r\n                            <RouterLink to=\"/mylists\" className={classes.link}>\r\n                                <ListItemText primary=\"My lists\" classes={{ primary: classes.linkText }} />\r\n                            </RouterLink>\r\n                        </ListItem>\r\n                    </List>\r\n                </nav>\r\n            </Drawer>\r\n            <Typography variant=\"h1\" className={classes.title} color=\"inherit\">\r\n                Shopping\r\n            </Typography>\r\n            {!localStorage.getItem('token')\r\n                ?\r\n                <Button color=\"secondary\" variant=\"contained\" component={RouterLink} to=\"/login\">\r\n                    Log In\r\n                </Button>\r\n                :\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={props.logOut}>\r\n                    Log Out\r\n                </Button> \r\n            }\r\n        </Toolbar>\r\n    )\r\n}\r\n\r\nexport default MobileNavBar;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        menuButton: {\r\n            marginRight: theme.spacing(2)\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            fontSize: \"2rem\"\r\n        },\r\n        links: {\r\n            marginRight: theme.spacing(2)\r\n        }\r\n    })\r\n);\r\n\r\n\r\nconst NavBar = (props: { logOut: () => void }) => {\r\n    const classes = useStyles()\r\n\r\n\r\n    return (\r\n        <Toolbar>\r\n            <Typography variant=\"h1\" className={classes.title} color=\"inherit\">\r\n                Shopping\r\n            </Typography>\r\n            { localStorage.getItem('token') && (\r\n                <React.Fragment>\r\n                    <Button color=\"inherit\" component={RouterLink} to=\"/createlist\" className={classes.links}>\r\n                        Create a list\r\n                    </Button>\r\n                    <Button color=\"inherit\" component={RouterLink} to=\"/useritems\" className={classes.links}>\r\n                        Edit items\r\n                    </Button>\r\n                    <Button color=\"inherit\" component={RouterLink} to=\"/mylists\" className={classes.links}>\r\n                        My lists\r\n                    </Button>\r\n                </React.Fragment>\r\n            )}\r\n            {!localStorage.getItem('token')\r\n                ?\r\n                <Button color=\"secondary\" variant=\"contained\" component={RouterLink} to=\"/login\">\r\n                    Log In\r\n                </Button>\r\n                :\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={props.logOut}>\r\n                    Log Out\r\n                </Button> \r\n            }\r\n        </Toolbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { useReducer } from 'react'\r\n\r\nexport interface userInfo  {\r\n    isAuth: boolean;\r\n    isLoading: boolean;\r\n    userId: number | null;\r\n    token: string | null;\r\n    username: string | null;\r\n}\r\n\r\ntype Action = \r\n    { type: 'LOGIN_START' }\r\n    | {\r\n        type: 'LOGIN_SUCCESS';\r\n        username: string;\r\n        isAuth: boolean;\r\n        userId: number | null;\r\n        token: string | null;\r\n    }\r\n    | { type: 'LOGOUT' }\r\n    // | { type: 'REGISTER_START';\r\n    //     username: string;\r\n    //     email: string;\r\n    //     password: string;\r\n    //     repeatPassword: string;\r\n    //     }\r\n\r\nexport const initialState: userInfo = {\r\n    isAuth: false,\r\n    isLoading: false,\r\n    userId: null,\r\n    token: null,\r\n    username: null\r\n}\r\n\r\nexport const ActionTypes = {\r\n    LOGIN_START: 'LOGIN_START',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGOUT: 'LOGOUT',\r\n    REGISTER_START: 'REGISTER_START',\r\n    REGISTER_SUCCESS: 'REGISTER_SUCCESS'\r\n\r\n}\r\n\r\nexport type Reducer<userInfo, Action> =\r\n    (state: userInfo, action: Action) => userInfo\r\n\r\nconst authReducer = (state: userInfo, action: Action): userInfo => {\r\n    switch (action.type) {\r\n        case 'LOGIN_START':\r\n            return { ...state, isLoading: true }\r\n        case 'LOGIN_SUCCESS':\r\n            return { ...state, isAuth: true, userId: action.userId, token: action.token, username: action.username }\r\n        case 'LOGOUT':\r\n            return initialState\r\n        default:\r\n            return initialState\r\n    }\r\n}\r\n\r\nexport default authReducer","import React,  { useReducer } from 'react'\r\n\r\nimport authReducer, { initialState } from '../reducers/auth'\r\nimport {userInfo} from '../reducers/auth'\r\n\r\nexport const AuthContext = React.createContext<{state: userInfo; dispatch: React.Dispatch<any>}>(\r\n    {\r\n    state: initialState,\r\n    dispatch: () => null\r\n    }\r\n)\r\n\r\nconst AuthContextProvider = (props: any) => {\r\n\r\n    const [authState, dispatch] = useReducer(authReducer, initialState)   \r\n\r\n    return (\r\n        <AuthContext.Provider value={{state: authState, dispatch: dispatch}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider","import React, {useState, useEffect, useContext } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport MobileNavBar from './components/MobileNavBar';\r\nimport DesktopNavBar from './components/DesktopNavBar';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from '../../context/auth-context'\r\n\r\nconst Header = () => {\r\n    const [localState, setLocalState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false,\r\n        redirectToLogin: false\r\n    })\r\n\r\n    const {state, dispatch} = useContext(AuthContext)\r\n\r\n    const { mobileView } = localState\r\n    const { drawerOpen } = localState\r\n\r\n    useEffect(() => {\r\n        const setResponsiveness = () => {\r\n            return window.innerWidth < 900\r\n                ? setLocalState((prevState) => ({...prevState, mobileView: true }))\r\n                : setLocalState((prevState) => ({...prevState, mobileView: false }))\r\n        };\r\n        setResponsiveness()\r\n        window.addEventListener(\"resize\", () => setResponsiveness())\r\n    }, [])\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('userId')\r\n        setLocalState({...localState, redirectToLogin: true})\r\n    }\r\n\r\n\r\n    const handleDrawerOpen = () =>\r\n      setLocalState((prevState) => ({ ...prevState, drawerOpen: true }))\r\n\r\n      \r\n    const handleDrawerClose = () =>\r\n      setLocalState((prevState) => ({ ...prevState, drawerOpen: false }))\r\n\r\n    let loginRedirect = null\r\n    if ( localState.redirectToLogin ) {\r\n        loginRedirect = <Redirect to=\"/login\" />\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <AppBar color='primary' position='fixed'>\r\n                {mobileView \r\n                    ?   <MobileNavBar \r\n                            openDrawer={handleDrawerOpen} \r\n                            closeDrawer={handleDrawerClose}\r\n                            drawerOpen={drawerOpen}\r\n                            logOut={logOut}\r\n                        /> \r\n                    :   <DesktopNavBar logOut={logOut} />}\r\n            </AppBar>\r\n            {loginRedirect}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Fragment } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst Layout = (props: any) => {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <main>\r\n                {props.children}\r\n            </main>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout;","const prod = {\r\n    url: {\r\n        API_URL: 'http://ec2-18-191-229-230.us-east-2.compute.amazonaws.com/api/'\r\n    }\r\n}\r\n\r\nconst dev = {\r\n    url: {\r\n        API_URL: 'http://localhost:8080/'\r\n    }\r\n}\r\n\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import axios from 'axios'\r\nimport { config } from '../constants'\r\n\r\nconst instance = axios.create({\r\n    baseURL: config.url.API_URL\r\n})\r\n\r\nexport default instance","import React, { useEffect, useState } from 'react'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\nimport axios from '../../../util/axiosAPI'\r\n\r\ninterface Category {\r\n    id?: number;\r\n    name: string;\r\n    createdAt?: Date;\r\n    updatedAt?: Date;\r\n    inputValue?: string; \r\n}\r\n\r\nconst filter = createFilterOptions<Category>()\r\n\r\nconst useAddItems = () => {\r\n    const [itemLasts, setItemLasts] = useState('')\r\n    const [itemName, setItemName] = useState('')\r\n    const [category, setCategory] = useState<Category | null | string>(null)\r\n    const [categories, setCategories] = useState<Category[]>([])\r\n\r\n    useEffect(() => {\r\n        getCategories();\r\n    }, [])\r\n\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setItemName(event.target.value)\r\n    }\r\n\r\n    const handleCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | null | string) => {\r\n        if (typeof newValue === 'string') {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            setTimeout(() => {\r\n              setCategory({ name: newValue })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setCategory({ name: newValue.inputValue })\r\n        } else {\r\n            setCategory(newValue)\r\n        }\r\n    }\r\n\r\n    const filterOptions = (options: Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const getOptionLabel = (option: Category) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const handleItemLastsChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setItemLasts(event.target.value)\r\n    }\r\n\r\n    const getCategories = () => {\r\n        axios.get('/categories/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                setCategories(response.data)\r\n            })\r\n    }\r\n\r\n    const addItemToDB = (name: string, category?: Category | null | string, lasts?: string) => {\r\n        axios.post('/items/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            },\r\n            name: name,\r\n            category: category,\r\n            lasts: (lasts !== '' ? lasts : null)\r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const submitItem = (event: any) => {\r\n        event.preventDefault()\r\n        addItemToDB(itemName, category, itemLasts)\r\n    }\r\n\r\n    return {\r\n        submitItem,\r\n        handleCategoryChange: handleCategoryChange,\r\n        handleNameChange: handleNameChange,\r\n        handleItemLastsChange: handleItemLastsChange,\r\n        filterOptions: filterOptions,\r\n        getOptionLabel: getOptionLabel,\r\n        itemName: itemName,\r\n        category: category,\r\n        categories: categories,\r\n        itemLasts: itemLasts\r\n    }\r\n}\r\n\r\nexport default useAddItems","import React, { useState, useEffect } from 'react';\r\nimport useAddItems from './hooks/useAddItems'\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        articleTitle: {\r\n            marginTop: '100px'\r\n        },\r\n        addItemForm: {\r\n            margin: theme.spacing(4)\r\n        },\r\n        inputs: {\r\n            marginTop: theme.spacing(2)\r\n        },\r\n        addButton: {\r\n            display: \"block\",\r\n            marginTop: theme.spacing(2)\r\n        }\r\n    })\r\n);\r\n\r\nconst AddItems = () => {\r\n    const classes = useStyles();\r\n    const { \r\n        itemName, \r\n        categories, \r\n        category, \r\n        itemLasts, \r\n        handleNameChange, \r\n        submitItem, \r\n        handleCategoryChange, \r\n        handleItemLastsChange,\r\n        filterOptions,\r\n        getOptionLabel,\r\n    } = useAddItems();\r\n\r\n    return(\r\n        <Container component='article' maxWidth='md'>\r\n            <Typography variant='h1' className={classes.articleTitle} color='primary' align='center'>\r\n                Add an item\r\n            </Typography>\r\n            <form className={classes.addItemForm} onSubmit={submitItem}>\r\n                <TextField \r\n                    required\r\n                    id='item-name'\r\n                    label='Item name'\r\n                    variant='outlined'\r\n                    fullWidth={true}\r\n                    value={itemName}\r\n                    onChange={handleNameChange}\r\n                    className={classes.inputs}\r\n                />\r\n                <Autocomplete \r\n                    value={category}\r\n                    onChange={handleCategoryChange}\r\n                    filterOptions={filterOptions}\r\n                    id='category-autocomplete'\r\n                    options={categories}\r\n                    getOptionLabel={getOptionLabel}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    handleHomeEndKeys\r\n                    renderOption={option => option.name}\r\n                    freeSolo\r\n                    renderInput={params => (<TextField {...params} label='category' variant='outlined' className={classes.inputs}/>)}\r\n                />\r\n                <TextField \r\n                    id='item-name'\r\n                    label='Lasts (days)'\r\n                    variant='outlined'\r\n                    value={itemLasts}\r\n                    onChange={handleItemLastsChange}\r\n                    className={classes.inputs}\r\n                />\r\n                <Button type=\"submit\" className={classes.addButton} variant='contained' color='secondary'>\r\n                    Add\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddItems;","import axios from '../../../util/axiosAPI'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\n\r\nexport interface Item {\r\n    id?: number;\r\n    name: string;\r\n    categoryId?: number;\r\n    userCategoryId?: number;\r\n    category?: string | Category | null;\r\n    last_bought?: Date;\r\n    lasts?: number;\r\n    inputValue?: string\r\n}\r\n\r\nexport interface Category {\r\n    id?: number;\r\n    name: string\r\n    inputValue?: string;\r\n}\r\n\r\ninterface List { name: string; items: Item[] }\r\n\r\nconst useCreateList = () => {\r\n\r\n    const filter = createFilterOptions<Item | Category>()\r\n\r\n    const [list, setList] = useState<List>({name: '', items: []})\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [categories, setCategories] = useState([])\r\n    const [itemAddDialogValue, setItemAddDialogValue] = useState<Item>({ id: undefined, name: '', category: '' })\r\n    const [itemAddModalOpen, setItemAddModalOpen] = useState<boolean>(false)\r\n    const [itemAutocompleteValue, setItemAutocompleteValue] = useState<Item | null>(null)\r\n    const [suggestions, setSuggestions] = useState<Item[]>([])\r\n    const [toggleSuggestions, setToggleSuggestions] = useState<boolean>(false)\r\n    const [checkedSuggestions, setCheckedSuggestions] = useState<Item[]>([])\r\n    const [saveListDialogOpen, setSaveListDialogOpen] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        getItems(localStorage.getItem('userId'))\r\n        getCategories(localStorage.getItem('userId'))\r\n        getSuggestions(localStorage.getItem('userId'))\r\n    }, [localStorage.getItem('userId')])\r\n\r\n    const getItems = (userId: string | null) => {\r\n        axios.get('items/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setItems(response.data)\r\n        })\r\n    }\r\n\r\n    const getCategories = (userId: string | null) => {\r\n        axios.get('categories/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setCategories(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getSuggestions = (userId: string | null) => {\r\n        axios.get('items/suggestions/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setSuggestions(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const itemAutocompleteValueChange = (event: React.ChangeEvent<any>, newValue: Item | string) => {\r\n        if (typeof newValue === 'string') {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            setTimeout(() => {\r\n              setItemAddModalOpen(true)\r\n              setItemAddDialogValue({\r\n                name: newValue,\r\n                category: '',\r\n              })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddModalOpen(true)\r\n            setItemAddDialogValue({\r\n                id: newValue.id,\r\n                name: newValue.inputValue,\r\n                category: '',\r\n            })\r\n        } else {\r\n            setItemAddDialogValue({\r\n                id: newValue.id,\r\n                name: newValue.name,\r\n                category: ''\r\n            })\r\n            const newList = {...list, items: [...list.items, {name: newValue.name, id: newValue.id }]}\r\n            const newItems = items.filter(item => item.id !== newValue.id)\r\n            const newSuggestions = suggestions.filter(item => item.id !== newValue.id)\r\n            setSuggestions(newSuggestions)\r\n            setList(newList)\r\n            setItems(newItems)\r\n        }\r\n    }\r\n\r\n    const dialogCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | string) => {\r\n        if (typeof newValue === 'string') {\r\n            setTimeout(() => {\r\n              setItemAddModalOpen(true);\r\n              setItemAddDialogValue({\r\n                ...(itemAddDialogValue as Item),\r\n                category: newValue,\r\n              })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue.inputValue})\r\n        } else {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue})\r\n        }\r\n    }\r\n\r\n    const dialogNameChange = (event: React.ChangeEvent<any>) => {\r\n        setItemAddDialogValue({...(itemAddDialogValue as Item), name: event.target.value, id: event.target.value.id })\r\n    }\r\n\r\n    const listNameChange = (event: React.ChangeEvent<any>) => {\r\n        setList({...list, name: event.target.value})\r\n    }\r\n\r\n    const filterOptions = (options: Item[] | Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`,\r\n            id: params.id\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const getOptionLabel = (option: Item | Category | string) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const addItem = (event: any) => {\r\n        event.preventDefault()\r\n        console.log(itemAddDialogValue.category)\r\n        axios.post('/items/' + localStorage.getItem('userId'), {\r\n            itemId: itemAutocompleteValue?.id,\r\n            name: itemAddDialogValue.name,\r\n            category: itemAddDialogValue.category\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            const newListItems = {...list, items: [...list.items, {name: itemAddDialogValue.name, id: response.data.id }]}\r\n            setList(newListItems)\r\n            handleAddItemModalClose()\r\n            getItems(localStorage.getItem('userId'))\r\n            getCategories(localStorage.getItem('userId'))\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleAddItemModalClose = () => {\r\n        setItemAddDialogValue({\r\n            name: '',\r\n            category: ''\r\n        })\r\n        setItemAddModalOpen(false)\r\n        setItemAutocompleteValue(null)\r\n    }\r\n\r\n    const handleSuggestionsVisible = () => {\r\n        if (toggleSuggestions === true) {\r\n            setToggleSuggestions(false)\r\n        } else {\r\n            setToggleSuggestions(true)\r\n        }\r\n    }\r\n\r\n    const suggestionCheckHandler = (item: Item) => {\r\n        const currentIndex = checkedSuggestions.indexOf(item)\r\n        const newChecked = [...checkedSuggestions]\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(item)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n        setCheckedSuggestions(newChecked)\r\n    }\r\n\r\n    const addFromSuggestions = () => {\r\n        const newListItems = {...list, items: [...list.items, ...checkedSuggestions]}\r\n        let newSuggestions = [...suggestions]\r\n        let newItems = [...items]\r\n        // Taking off items from suggestions and item autocomplete item pool after they are added to list\r\n        checkedSuggestions.forEach(suggestion => {\r\n            newSuggestions = newSuggestions.filter(item => item.id !== suggestion.id)\r\n            newItems = newItems.filter(item => item.id !== suggestion.id)\r\n        })\r\n        setList(newListItems)\r\n        setItems(newItems)\r\n        setSuggestions(newSuggestions)\r\n        handleSuggestionsVisible()\r\n        setCheckedSuggestions([])\r\n    }\r\n\r\n    const removeListItem = (itemId: number | undefined) => {\r\n        const newList = list.items.filter(item => {\r\n            return item.id !== itemId\r\n        })\r\n        setList({...list, items: newList })\r\n        getItems(localStorage.getItem('userId'))\r\n    }\r\n\r\n    const handleSaveListDialogClose = () => {\r\n        setSaveListDialogOpen(false)\r\n    }\r\n\r\n    const saveListButtonPressed = () => {\r\n        setSaveListDialogOpen(true)\r\n        const randomName = 'list' + String(Math.floor(Math.random() * 10000))\r\n        setList({...list, name: randomName})\r\n    }\r\n\r\n    const saveListConfirm = (event: any) => {\r\n        event.preventDefault()\r\n        saveList()\r\n        handleSaveListDialogClose()\r\n    }\r\n\r\n    const saveList = (): void => {\r\n        axios.post('/list', {\r\n            list: list,\r\n            userId: localStorage.getItem('userId')\r\n        }, { \r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return {\r\n        list: list,\r\n        items: items,\r\n        categories: categories,\r\n        suggestions: suggestions,\r\n        itemAddDialogValue: itemAddDialogValue,\r\n        itemAddModalOpen: itemAddModalOpen,\r\n        saveListDialogOpen: saveListDialogOpen,\r\n        itemAutocompleteValue: itemAutocompleteValue,\r\n        toggleSuggestions: toggleSuggestions,\r\n        checkedSuggestions: checkedSuggestions,\r\n        handleAddItemModalClose: handleAddItemModalClose,\r\n        handleSaveListDialogClose: handleSaveListDialogClose,\r\n        handleSuggestionsVisible: handleSuggestionsVisible,\r\n        itemAutocompleteValueChange: itemAutocompleteValueChange,\r\n        dialogNameChange: dialogNameChange,\r\n        dialogCategoryChange: dialogCategoryChange,\r\n        listNameChange: listNameChange,\r\n        getOptionLabel: getOptionLabel,\r\n        filterOptions: filterOptions,\r\n        getItems: getItems,\r\n        getCategories: getCategories,\r\n        removeListItem: removeListItem,\r\n        addItem: addItem,\r\n        addFromSuggestions: addFromSuggestions,\r\n        suggestionCheckHandler: suggestionCheckHandler,\r\n        saveListButtonPressed: saveListButtonPressed,\r\n        saveListConfirm: saveListConfirm,\r\n        saveList: saveList,\r\n\r\n    }\r\n}\r\n\r\nexport default useCreateList","import React from 'react'\r\nimport { Item } from '../ListView/hooks/useListView'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n// import { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst AddItemForm = (props: any) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Autocomplete \r\n                value={props.itemAutocompleteValue}\r\n                onChange={props.itemAutoCompleteValueChange}\r\n                filterOptions={props.filterOptions}\r\n                id='add-item-autocomplete'\r\n                options={props.itemOptions}\r\n                getOptionLabel={props.getOptionLabel}\r\n                selectOnFocus\r\n                clearOnBlur\r\n                handleHomeEndKeys\r\n                fullWidth={true}\r\n                renderOption={option => option.name}\r\n                freeSolo\r\n                renderInput={params => (<TextField {...params} label='Search Item or add new' variant='outlined' />)}\r\n            />\r\n            <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"add-item-dialog-name\">\r\n                    <form onSubmit={props.addItem}>\r\n                        <DialogTitle id=\"add-item-dialog-name\">Add a new item</DialogTitle>\r\n                        <DialogContent>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                value={(props.dialogValues as Item).name}\r\n                                onChange={props.dialogNameChange}\r\n                                label=\"name\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <Autocomplete \r\n                                value={props.categoryAutocompleteValue}\r\n                                onChange={props.dialogCategoryChange}\r\n                                onInputChange={props.onInputChange}\r\n                                filterOptions={props.filterOptions}\r\n                                id='category-autocomplete'\r\n                                options={props.categoryOptions}\r\n                                getOptionLabel={props.getOptionLabel}\r\n                                selectOnFocus\r\n                                clearOnBlur\r\n                                handleHomeEndKeys\r\n                                renderOption={option => option.name}\r\n                                freeSolo\r\n                                renderInput={params => (<TextField {...params} label='category' margin='dense' variant='outlined' />)}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={props.dialogClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Add\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n            </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddItemForm","import React, { useEffect } from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Item } from '../../hooks/useCreateList'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        suggestionsBoxVisible: {\r\n            display: 'block',\r\n            position: 'fixed',\r\n            top: '100px',\r\n            left: '50px',\r\n            right: 50,\r\n            bottom: 100,\r\n            zIndex: 10,\r\n            padding: theme.spacing(1)\r\n        },\r\n        suggestionsBoxHidden: {\r\n            display: 'none'\r\n        },\r\n        suggestionItem: {\r\n            cursor: 'pointer'\r\n        },\r\n        buttonContainer: {\r\n            boxSizing: 'border-box',\r\n            position: 'absolute',\r\n            width: '100%',\r\n            bottom: 0,\r\n            left: 0,\r\n            margin: 0,\r\n            padding: theme.spacing(1),\r\n            borderTop: '1px black solid',\r\n            zIndex: 11\r\n        },\r\n        suggestionList: {\r\n            maxHeight: 400,\r\n            overflow: 'auto'\r\n        }\r\n    })\r\n)\r\n\r\nconst Suggestions = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Paper\r\n            className={props.toggleSuggestions \r\n                ? classes.suggestionsBoxVisible \r\n                : classes.suggestionsBoxHidden\r\n            } \r\n            elevation={4}\r\n            component='article'\r\n        >\r\n            <List className={classes.suggestionList}>\r\n                {props.items.map((item: Item) => {\r\n                    return (\r\n                        <ListItem \r\n                            key={item.id} \r\n                            className={classes.suggestionItem}\r\n                            divider={true}\r\n                        >\r\n                            <ListItemText primary={item.name}/>\r\n                            <ListItemSecondaryAction>\r\n                                <Checkbox \r\n                                    edge='end'\r\n                                    onChange={() => props.suggestionCheckHandler(item)}\r\n                                    checked={props.checkedSuggestions.indexOf(item) !== -1}\r\n                                />\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem> \r\n                    )\r\n                })}\r\n            </List>\r\n            <Grid container justify='space-evenly' spacing={2} className={classes.buttonContainer} component='footer'>\r\n                <Grid item>\r\n                    <Button\r\n                        color='primary'\r\n                        variant='contained'\r\n                        onClick={props.toggleVisible}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button \r\n                        color='secondary'\r\n                        variant='contained'\r\n                        disabled={props.checkedSuggestions.length < 1}\r\n                        onClick={props.addItems}\r\n                    >\r\n                        Add Items\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Suggestions","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ConfirmSaveDialog = (props: any) => {\r\n\r\n    return (\r\n                <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"confirm-save-dialog\">\r\n                    <form onSubmit={props.saveList}>\r\n                        <DialogTitle id=\"confirm-save-dialog\">Edit name</DialogTitle>\r\n                        <DialogContent>\r\n                            <TextField\r\n                                autoFocus\r\n                                id=\"list-name\"\r\n                                onChange={props.nameChange}\r\n                                label=\"List name\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                value={props.nameValue}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={props.dialogClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"submit\" color=\"secondary\">\r\n                                Save\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n    )\r\n}\r\n\r\nexport default ConfirmSaveDialog","import React from 'react'\r\nimport useCreateList from './hooks/useCreateList'\r\nimport AddItemForm from '../AddItemForm/AddItemForm'\r\nimport Suggestions from './components/Suggestions'\r\nimport ConfirmSaveDialog from './components/ConfirmSaveDialog'\r\nimport Container from '@material-ui/core/Container'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport { createStyles, makeStyles, Theme, useMediaQuery } from '@material-ui/core'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport HelpIcon from '@material-ui/icons/Help'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        articleTitle: {\r\n            margin: '0 0 20px 0'\r\n        },\r\n        container: {\r\n            height: '100vh',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            backgroundImage: 'url(\"groceries1.jpg\")',\r\n            backgroundSize: 'cover',\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n        inputSection: {\r\n            boxSizing: 'border-box',\r\n            width: '100%',\r\n            padding: '1rem',\r\n            paddingTop: '2rem',\r\n            marginTop: '70px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        listPaper: {\r\n            position: 'relative',\r\n            boxSizing: 'border-box',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(3),\r\n            padding: theme.spacing(3),\r\n            width: '100%',\r\n            minHeight: '350px'\r\n        },\r\n        list: {\r\n            marginBottom: '4rem'\r\n        },\r\n        suggestionButton: {\r\n            margin: '5px auto'\r\n        },\r\n        saveButton: {\r\n            position: 'fixed',\r\n            bottom: 15,\r\n            left: '50%',\r\n            transform: 'translateX(-50%)'\r\n        },\r\n        widescreenInputSection: {\r\n            boxSizing: 'border-box',\r\n            width: '100%',\r\n            padding: '3rem',\r\n            marginTop: '120px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        wideScreenSaveButton: {\r\n            position: 'absolute',\r\n            width: '12rem',\r\n            bottom: '15px',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)'\r\n        }\r\n    })\r\n)\r\n\r\nconst CreateList = () => {\r\n    const classes = useStyles()\r\n    const widescreen = useMediaQuery('(min-width:600px)')\r\n    const { \r\n        list,\r\n        items,\r\n        categories,\r\n        suggestions,\r\n        itemAddDialogValue,\r\n        itemAutocompleteValue,\r\n        itemAddModalOpen,\r\n        toggleSuggestions,\r\n        checkedSuggestions,\r\n        saveListDialogOpen,\r\n        handleAddItemModalClose,\r\n        handleSuggestionsVisible,\r\n        handleSaveListDialogClose,\r\n        itemAutocompleteValueChange,\r\n        dialogNameChange,\r\n        dialogCategoryChange,\r\n        listNameChange,\r\n        getOptionLabel,\r\n        filterOptions,\r\n        removeListItem,\r\n        addItem,\r\n        addFromSuggestions,\r\n        suggestionCheckHandler,\r\n        saveListButtonPressed,\r\n        saveListConfirm\r\n    } = useCreateList()\r\n\r\n    const pickedList = list.items.map(item => {\r\n        return (\r\n            <ListItem key={item.id} divider={true}>\r\n                <ListItemText primary={item.name} />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge='end' size='small' color='inherit' onClick={() => removeListItem((item.id))}>\r\n                        <CancelIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    })\r\n\r\n    const saveButton = \r\n        <Button \r\n            type='button' \r\n            color='secondary' \r\n            variant='contained' \r\n            size='large'\r\n            onClick={saveListButtonPressed}\r\n            disabled={list.items.length < 1}\r\n            className={widescreen ? classes.wideScreenSaveButton : classes.saveButton}\r\n        >\r\n            Save list\r\n        </Button>\r\n\r\n    const listPaper = \r\n        <Paper  className={classes.listPaper} elevation={3} component='section'>\r\n            <List className={classes.list}>\r\n                {pickedList}\r\n            </List>\r\n            {widescreen && saveButton}\r\n        </Paper>\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container component='article' maxWidth='sm' className={classes.container}>\r\n                <h1 className={classes.hiddenTitle}>Create a List!</h1>\r\n                <Paper className={widescreen ? classes.widescreenInputSection : classes.inputSection} elevation={3} component='section'>\r\n                    <AddItemForm\r\n                        itemAutocompleteValue={itemAutocompleteValue}\r\n                        categoryAutocompleteValue={itemAutocompleteValue?.category}\r\n                        itemAutoCompleteValueChange={itemAutocompleteValueChange}\r\n                        filterOptions={filterOptions}\r\n                        itemOptions={items}\r\n                        categoryOptions={categories}\r\n                        getOptionLabel={getOptionLabel}\r\n                        dialogOpen={itemAddModalOpen}\r\n                        dialogClose={handleAddItemModalClose}\r\n                        addItem={addItem}\r\n                        dialogValues={itemAddDialogValue}\r\n                        dialogNameChange={dialogNameChange}\r\n                        dialogCategoryChange={dialogCategoryChange}\r\n                    />\r\n                    <Button \r\n                        color='secondary'\r\n                        className={classes.suggestionButton}\r\n                        startIcon={<HelpIcon />}\r\n                        onClick={handleSuggestionsVisible}\r\n                    >\r\n                        Suggestions\r\n                    </Button>\r\n                </Paper>\r\n                {listPaper}\r\n                <Suggestions \r\n                    items={suggestions}\r\n                    toggleSuggestions={toggleSuggestions}\r\n                    suggestionCheckHandler={suggestionCheckHandler}\r\n                    checkedSuggestions={checkedSuggestions}\r\n                    addItems={addFromSuggestions}\r\n                    toggleVisible={handleSuggestionsVisible}\r\n                />\r\n            </Container>\r\n            {!widescreen && saveButton}\r\n            <ConfirmSaveDialog \r\n                dialogOpen={saveListDialogOpen}\r\n                dialogClose={handleSaveListDialogClose}\r\n                nameValue={list.name}\r\n                nameChange={listNameChange}\r\n                saveList={saveListConfirm}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateList","import React, { useEffect, useState,} from 'react'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\n\r\nconst useLogin = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [alertOpen, setAlertOpen] = useState(false)\r\n    const [loginRedirect, setLoginRedirect] = useState(false)\r\n\r\n    const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleAlertClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlertOpen(false)\r\n    }\r\n\r\n    const userLogin = (username: string, password: string): void => {\r\n        axios.post('/auth/login', {\r\n            username: username,\r\n            password: password\r\n        })\r\n        .then(response => {\r\n            localStorage.setItem('token', response.data.token)\r\n            localStorage.setItem('userId', response.data.userId)\r\n            localStorage.setItem('username', response.data.username)\r\n            setLoginRedirect(true)\r\n        })\r\n        .catch(err => {\r\n            setErrorMessage(err.response.data.error)\r\n            setAlertOpen(true)\r\n        })\r\n    }\r\n\r\n    const submitForm = (event: any): void => {\r\n        event.preventDefault()\r\n        userLogin(username, password)\r\n    }\r\n\r\n    return {\r\n        username: username,\r\n        password: password,\r\n        errorMessage: errorMessage,\r\n        alertOpen: alertOpen,\r\n        loginRedirect: loginRedirect,\r\n        handleAlertClose: handleAlertClose,\r\n        handleUsernameChange: handleUsernameChange,\r\n        handlePasswordChange: handlePasswordChange,\r\n        submitForm: submitForm\r\n    }\r\n}\r\n\r\nexport default useLogin","import React from 'react'\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport useLogin from './hooks/useLogin'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '../UI/Alert'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        articleTitle: {\r\n            marginTop: '100px'\r\n        },\r\n        logInForm: {\r\n            margin: theme.spacing(2)\r\n        },\r\n        inputs: {\r\n            marginTop: theme.spacing(4)\r\n        },\r\n        addButton: {\r\n            display: \"block\",\r\n            marginTop: theme.spacing(4),\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto'\r\n        },\r\n        registerContainer: {\r\n            marginTop: theme.spacing(8),\r\n            textAlign: 'center'\r\n        },\r\n        registerText: {\r\n            marginBottom: theme.spacing(1)\r\n        }\r\n    })\r\n)\r\n\r\nconst LogIn = () => {\r\n    const classes = useStyles()\r\n    const { \r\n        errorMessage,\r\n        alertOpen,\r\n        loginRedirect,\r\n        handleAlertClose,\r\n        handleUsernameChange,\r\n        handlePasswordChange,\r\n        submitForm,\r\n        \r\n    } = useLogin()\r\n\r\n\r\n    return (\r\n        <Container component='article' maxWidth='sm'>\r\n            <Typography variant='h1' className={classes.articleTitle} color='primary' align='center'>\r\n                Log In\r\n            </Typography>\r\n            <form className={classes.logInForm} onSubmit={submitForm}>\r\n                <TextField\r\n                    required\r\n                    id='username'\r\n                    label='Username'\r\n                    variant='outlined'\r\n                    onChange={handleUsernameChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='password'\r\n                    label='Password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    onChange={handlePasswordChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <Button \r\n                    type=\"submit\" \r\n                    className={classes.addButton} \r\n                    variant='contained' \r\n                    size='large' \r\n                    color='secondary'\r\n                >\r\n                    Log In\r\n                </Button>\r\n            </form>\r\n            <Box component=\"section\" className={classes.registerContainer}>\r\n                <Typography \r\n                    variant='h5' \r\n                    component='h2' \r\n                    className={classes.registerText} \r\n                    color='primary' \r\n                    align='center'\r\n                >\r\n                    New to the app?\r\n                </Typography>\r\n                <Button \r\n                    type=\"button\" \r\n                    color='secondary' \r\n                    size='large' \r\n                    component={RouterLink} \r\n                    to='/register'\r\n                >\r\n                    Sign Up Here\r\n                </Button>\r\n            </Box>\r\n            <Snackbar open={alertOpen} autoHideDuration={9000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} severity=\"error\">\r\n                    {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            {loginRedirect ? <Redirect to=\"/createlist\" /> : null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LogIn","import React, { useState } from 'react'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\n\r\nconst useRegister = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    const [resultMessage, setResultMessage] = useState('')\r\n    const [alertOpen, setAlertOpen] = useState(false)\r\n    const [isError, setIsError] = useState(false)\r\n    const [successRedirect, setSuccessRedirect] = useState(false)\r\n\r\n    const handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleRepeatPasswordChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setRepeatPassword(event.target.value)\r\n    }\r\n\r\n    const handleAlertClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlertOpen(false)\r\n    }\r\n\r\n    const registerUser = (username: string, email: string, password: string, repeatPassword: string): void => {\r\n        if (password === repeatPassword) {\r\n            axios.post('/auth/signup', {\r\n                username: username,\r\n                email: email,\r\n                password: password,\r\n                confirmPassword: repeatPassword\r\n            })\r\n            .then(response => {\r\n                setIsError(false)\r\n                setAlertOpen(true)\r\n                setResultMessage(response.data.message)\r\n                // setSuccessRedirect(true)\r\n                \r\n            })\r\n            .catch(err => {\r\n                setIsError(true)\r\n                setResultMessage(err.response.data.error)\r\n                setAlertOpen(true)\r\n            })\r\n        }\r\n    }\r\n\r\n    const submitForm = (event: any) => {\r\n        event.preventDefault()\r\n        registerUser(username, email, password, repeatPassword)\r\n    }\r\n\r\n    return {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        resultMessage: resultMessage,\r\n        alertOpen: alertOpen,\r\n        isError: isError,\r\n        successRedirect: successRedirect,\r\n        handleAlertClose: handleAlertClose,\r\n        handleUsernameChange: handleUsernameChange,\r\n        handleEmailChange: handleEmailChange,\r\n        handlePasswordChange: handlePasswordChange,\r\n        handleRepeatPasswordChange: handleRepeatPasswordChange,\r\n        submitForm: submitForm\r\n    }\r\n}\r\n\r\nexport default useRegister\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport useRegister from './hooks/useRegister'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '../UI/Alert'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        articleTitle: {\r\n            marginTop: '100px'\r\n        },\r\n        signUpForm: {\r\n            margin: theme.spacing(2)\r\n        },\r\n        inputs: {\r\n            marginTop: theme.spacing(4)\r\n        },\r\n        registerButton: {\r\n            display: \"block\",\r\n            marginTop: theme.spacing(4),\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto'\r\n        },\r\n        logInContainer: {\r\n            marginTop: theme.spacing(6),\r\n            textAlign: 'center'\r\n        },\r\n        logInText: {\r\n            marginBottom: theme.spacing(1)\r\n        }\r\n    })\r\n)\r\n\r\nconst Register = () => {\r\n    const classes = useStyles()\r\n    const {\r\n        resultMessage,\r\n        alertOpen,\r\n        isError,\r\n        successRedirect,\r\n        handleAlertClose,\r\n        handleUsernameChange,\r\n        handleEmailChange,\r\n        handlePasswordChange,\r\n        handleRepeatPasswordChange,\r\n        submitForm\r\n    } = useRegister()\r\n    \r\n    return (\r\n        <Container component='article' maxWidth='sm'>\r\n            <Typography variant='h1' className={classes.articleTitle} color='primary' align='center'>\r\n                Sign Up\r\n            </Typography>\r\n            <form className={classes.signUpForm} onSubmit={submitForm}>\r\n                <TextField\r\n                    required\r\n                    id='email'\r\n                    label='e-mail'\r\n                    variant='outlined'\r\n                    onChange={handleEmailChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='username'\r\n                    label='Username'\r\n                    variant='outlined'\r\n                    onChange={handleUsernameChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='password'\r\n                    label='Password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    onChange={handlePasswordChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <TextField\r\n                    required\r\n                    id='repeat-password'\r\n                    label='Repeat password'\r\n                    type='password'\r\n                    variant='outlined'\r\n                    onChange={handleRepeatPasswordChange}\r\n                    fullWidth={true}\r\n                    className={classes.inputs}\r\n                />\r\n                <Button \r\n                    type=\"submit\" \r\n                    className={classes.registerButton} \r\n                    variant='contained' \r\n                    size='large' \r\n                    color='secondary'\r\n                >\r\n                    Register\r\n                </Button>\r\n            </form>\r\n            <Box component=\"section\" className={classes.logInContainer}>\r\n                <Typography \r\n                    variant='h5' \r\n                    component='h2' \r\n                    className={classes.logInText} \r\n                    color='primary' \r\n                    align='center'\r\n                >\r\n                    Already a user?\r\n                </Typography>\r\n                <Button \r\n                    type=\"button\" \r\n                    color='secondary' \r\n                    size='large' \r\n                    component={RouterLink} \r\n                    to='/login'\r\n                >\r\n                    Log In\r\n                </Button>\r\n            </Box>\r\n            <Snackbar open={alertOpen} autoHideDuration={9000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} severity={isError? 'error': 'success'}>\r\n                    {resultMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            {successRedirect ? <Redirect to=\"/login\" /> : null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register","import React, { useEffect, useState } from 'react'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\n\r\ninterface ListTile {\r\n    id: number;\r\n    name: string;\r\n    createdAt?: string;\r\n    updatedAt?: string; \r\n}\r\n\r\ntype MyLists = ListTile[]\r\n\r\nconst useMyLists = () => {\r\n\r\n    const [myLists, setMyLists] = useState<MyLists>([])\r\n\r\n    useEffect(() => {\r\n        getLists()\r\n    }, [])\r\n\r\n    const getLists = () => {\r\n        axios.get('/list/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setMyLists(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const deleteList = (listId: number) => {\r\n        axios.delete('/list/delete/' + listId + '?userId=' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            getLists()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return {\r\n        myLists: myLists,\r\n        deleteList: deleteList\r\n    }\r\n}\r\n\r\nexport default useMyLists","import React from 'react'\r\nimport useMyLists from './hooks/useMyLists'\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        articleTitle: {\r\n            margin: '100px 10px 40px 10px'\r\n        },\r\n        listTiles: {\r\n            boxSizing: 'border-box',\r\n            display: 'grid',\r\n            gridColumnGap: '1rem',\r\n            gridRowGap: '10%',\r\n            gridTemplateColumns:\r\n                '4fr 4fr 4fr 4fr',\r\n            gridTemplateRows:\r\n                '45% 45%',\r\n            gridTemplateAreas: `\r\n                \"name name date date\"\r\n                \"useListButton viewListButton . deleteButton\"\r\n                `,\r\n            justifyContent: 'space-around',\r\n            marginTop: theme.spacing(2),\r\n            padding: theme.spacing(2),\r\n            width: '100%',\r\n            height: '8rem'\r\n        },\r\n        deleteButton: {\r\n            gridArea: 'deleteButton'\r\n        },\r\n        useListButton: {\r\n            gridArea: 'useListButton'\r\n        },\r\n        viewListButton: {\r\n            gridArea: 'viewListButton'\r\n        },\r\n        name: {\r\n            gridArea: 'name',\r\n            textAlign: 'left',\r\n            paddingLeft: theme.spacing(1)\r\n            \r\n        },\r\n        date: {\r\n            gridArea: 'date'\r\n        }\r\n    })\r\n)\r\n\r\nconst MyLists = (props: any) => {\r\n    const classes = useStyles()\r\n    const { myLists, deleteList } = useMyLists()\r\n\r\n    const listTiles = myLists.map(list => {\r\n        return (\r\n            <Paper \r\n                className={classes.listTiles} \r\n                elevation={3} \r\n                component='section' \r\n                key={list.id}\r\n            >\r\n                <Typography variant='h4' color='secondary' align='center' component='h2' className={classes.name}>\r\n                    {list.name}\r\n                </Typography>\r\n                <Typography variant='h5' color='inherit' align='center' component='h3' className={classes.date}>\r\n                    {list.createdAt?.split('T')[0]}\r\n                </Typography>\r\n                <IconButton \r\n                    color='inherit'\r\n                    aria-label='delete-list'\r\n                    className={classes.deleteButton}\r\n                    onClick={() => deleteList(list.id)}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n                <Button \r\n                    color='primary'\r\n                    variant='contained'\r\n                    className={classes.useListButton}\r\n                    onClick={() => props.history.push({ pathname: '/mylists/use/' + list.id })}\r\n                >\r\n                    Shop\r\n                </Button>\r\n                <Button \r\n                    color='inherit'\r\n                    variant='contained'\r\n                    className={classes.viewListButton}\r\n                    onClick={() => props.history.push({ pathname: '/mylists/edit/' + list.id })}    \r\n                >\r\n                    Edit\r\n                </Button>\r\n            </Paper>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Container component='article' maxWidth='sm'>\r\n            <Typography variant='h1' className={classes.articleTitle} color='primary' align='center'>\r\n                My lists\r\n            </Typography>\r\n            {listTiles}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MyLists","import React, { useCallback, useState } from 'react'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\n\r\nexport interface Item {\r\n    id?: number;\r\n    name: string;\r\n    categoryId?: number;\r\n    category?: string | Category | null;\r\n    last_bought?: Date;\r\n    lasts?: number;\r\n    inputValue?: string;\r\n    list_item?: any\r\n}\r\n\r\nexport interface Category {\r\n    id?: number;\r\n    name: string\r\n    inputValue?: string;\r\n}\r\n\r\nexport type ListData = {\r\n    id? : number;\r\n    name?: string;\r\n    createdAt?: Date;\r\n    updatedAt?: Date;\r\n    userId?: number;\r\n    items?: Item[]\r\n} \r\n\r\nconst useListView = () => {\r\n\r\n    const filter = createFilterOptions<Item | Category>()\r\n\r\n    const [listData, setListData] = useState<ListData>({})\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [categories, setCategories] = useState([])\r\n    const [itemAddDialogValue, setItemAddDialogValue] = useState<Item>({ name: '', category: '' })\r\n    const [listItems, setListItems] = useState<Item[]>([])\r\n    const [pickedList, setPickedList] = useState<Item[]>([])\r\n    const [finishModalOpen, setFinishModalOpen] = useState<boolean>(false)\r\n    const [itemAddModalOpen, setItemAddModalOpen] = useState<boolean>(false)\r\n    const [itemSearchOpen, setItemSearchOpen] = useState<boolean>(false)\r\n    const [itemAutocompleteValue, setItemAutocompleteValue] = useState<Item | null>(null)\r\n\r\n    const getList = useCallback((listId: number) => {\r\n        axios.get('/list/listdetails/' + listId + '?userId=' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                setListData(response.data)\r\n                setListItems(response.data.user_items)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    const getItems = () => {\r\n        axios.get('/items/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setItems(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        axios.get('categories/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setCategories(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const itemCheckClicked = (itemKey: number | undefined): void => {\r\n        // remove clicked item from list items\r\n        const newListItems = listItems?.filter(item => item.id !== itemKey)\r\n        setListItems(newListItems)\r\n        if (newListItems.length < 1) {\r\n            handleFinishModalOpen()\r\n        }\r\n        // put item into picked items list\r\n        const clickedItem = listItems.find(item => item.id === itemKey)\r\n        let newPickedItems = [...pickedList, clickedItem as Item]\r\n        setPickedList(newPickedItems)\r\n    }\r\n\r\n    const itemCheckUndo = (itemKey: number | undefined): void => {\r\n        const newPickedItems = pickedList.filter(item => item.id !== itemKey)\r\n        const clickedItem = pickedList.find(item => item.id === itemKey)\r\n        setPickedList(newPickedItems)\r\n        let newListItems = [...listItems, clickedItem as Item]\r\n        setListItems(newListItems)\r\n    }\r\n\r\n    const itemAutocompleteValueChange = (event: React.ChangeEvent<any>, newValue: Item | string) => {\r\n        if (typeof newValue === 'string') {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            setTimeout(() => {\r\n              setItemAddModalOpen(true);\r\n              setItemAddDialogValue({\r\n                name: newValue,\r\n                category: '',\r\n              })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddModalOpen(true)\r\n            setItemAddDialogValue({\r\n                name: newValue.inputValue,\r\n                category: '',\r\n            })\r\n        } else {\r\n            setItemAddDialogValue({\r\n                name: newValue.name,\r\n                category: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    const dialogCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | string) => {\r\n        if (typeof newValue === 'string') {\r\n            setItemAddModalOpen(true);\r\n            setItemAddDialogValue({\r\n            ...(itemAddDialogValue as Item),\r\n            category: newValue,\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue.inputValue})\r\n        } else {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue})\r\n        }\r\n    }\r\n\r\n    const filterOptions = (options: Item[] | Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const getOptionLabel = (option: Item | Category | string) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const handleAddItemModalClose = () => {\r\n        setItemAddDialogValue({\r\n            name: '',\r\n            category: ''\r\n        })\r\n        setItemAddModalOpen(false)\r\n        setItemSearchOpen(false)\r\n        setItemAutocompleteValue(null)\r\n\r\n    }\r\n\r\n    const addItemToList = (event: any) => {\r\n        event.preventDefault()\r\n        axios.post('/list/add/' + listData.id, {\r\n            userId: localStorage.getItem('userId'),\r\n            itemId: itemAutocompleteValue?.id,\r\n            name: itemAddDialogValue.name,\r\n            category: itemAddDialogValue.category\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            const newListItems = [...listItems, {name: itemAddDialogValue.name, id: response.data.itemId }]\r\n            setListItems(newListItems)\r\n            handleAddItemModalClose()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const dialogNameChange = (event: React.ChangeEvent<any>) => {\r\n        setItemAddDialogValue({...(itemAddDialogValue as Item), name: event.target.value})\r\n    }\r\n\r\n    const handleFinishModalOpen = () => {\r\n        setFinishModalOpen(true)\r\n    }\r\n    \r\n    const handleFinishModalClose = () => {\r\n        setFinishModalOpen(false)\r\n    }\r\n\r\n    const listPickingFinished = () => {\r\n        axios.post('/items/bought/' + localStorage.getItem('userId'), {\r\n            items: pickedList,\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        setFinishModalOpen(false)\r\n    }\r\n\r\n    const openItemSearch = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        getItems()\r\n        getCategories()\r\n        setItemSearchOpen(true)\r\n    }   \r\n\r\n    return {\r\n        listData: listData,\r\n        items: items,\r\n        categories: categories,\r\n        itemAddDialogValue: itemAddDialogValue,\r\n        itemAddModalOpen: itemAddModalOpen,\r\n        listItems: listItems,\r\n        pickedList: pickedList,\r\n        finishModalOpen: finishModalOpen,\r\n        itemSearchOpen: itemSearchOpen,\r\n        itemAutocompleteValue: itemAutocompleteValue,\r\n        addItemTolist: addItemToList,\r\n        handleFinishModalOpen: handleFinishModalOpen,\r\n        handleFinishModalClose: handleFinishModalClose,\r\n        handleAddItemModalClose: handleAddItemModalClose,\r\n        openItemSearch: openItemSearch,\r\n        itemAutoCompleteValueChange: itemAutocompleteValueChange,\r\n        dialogNameChange: dialogNameChange,\r\n        dialogCategoryChange: dialogCategoryChange,\r\n        getOptionLabel: getOptionLabel,\r\n        filterOptions: filterOptions,\r\n        itemCheckClicked: itemCheckClicked,\r\n        itemCheckUndo: itemCheckUndo,\r\n        getItems: getItems,\r\n        getList: getList,\r\n        listPickingFinished: listPickingFinished,\r\n    }\r\n}\r\n\r\nexport default useListView","import React from 'react'\r\nimport useListView from '../../hooks/useListView'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        \r\n    })\r\n)\r\n\r\nconst ListCompleteDialog = (props: any) => {\r\n    const classes = useStyles()\r\n    return(\r\n        <Dialog \r\n            open={props.open} \r\n            onClose={props.handleClose} \r\n            aria-labelledby='finish-dialog'\r\n        >\r\n            <DialogTitle id='finish-dialog'>{'Mark shopping complete?'}</DialogTitle>\r\n            <DialogActions>\r\n                <Button onClick={props.handleClose} color=\"primary\">\r\n                    No, I forgot something\r\n                </Button>\r\n                <Button onClick={props.handleFinished} color=\"secondary\" autoFocus>\r\n                    Yes\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )   \r\n}\r\n\r\nexport default ListCompleteDialog","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { Item } from '../../hooks/useListView'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        \r\n    })\r\n)\r\n\r\n\r\nconst AddItemDialog = (props: any) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog open={props.itemSearchOpen} fullWidth={true} onClose={props.handleItemSearchClose} aria-labelledby='add-item-search'>\r\n                <DialogContent>\r\n                    <Autocomplete \r\n                        value={props.itemAutocompleteValue}\r\n                        onChange={props.autoCompleteValueChange}\r\n                        filterOptions={props.filterOptions}\r\n                        id='add-item-autocomplete'\r\n                        options={props.itemOptions}\r\n                        getOptionLabel={props.getOptionLabel}\r\n                        selectOnFocus\r\n                        clearOnBlur\r\n                        handleHomeEndKeys\r\n                        renderOption={option => option.name}\r\n                        freeSolo\r\n                        renderInput={params => (<TextField {...params} label='Search Item or add new' variant='outlined' />)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleItemSearchClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\" onClick={props.addItem}>\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"add-item-dialog-name\">\r\n                <form onSubmit={props.addItem}>\r\n                    <DialogTitle id=\"add-item-dialog-name\">Add a new item</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            value={(props.dialogValues as Item).name}\r\n                            onChange={props.dialogNameChange}\r\n                            label=\"name\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Autocomplete \r\n                            value={props.categoryAutocompleteValue}\r\n                            onChange={props.dialogCategoryChange}\r\n                            filterOptions={props.filterOptions}\r\n                            id='category-autocomplete'\r\n                            options={props.categoryOptions}\r\n                            getOptionLabel={props.getOptionLabel}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            renderOption={option => option.name}\r\n                            freeSolo\r\n                            renderInput={params => (<TextField {...params} label='category' margin='dense' variant='outlined' />)}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.dialogClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AddItemDialog","import React, { useEffect } from 'react'\r\nimport useListView from './hooks/useListView'\r\nimport ListCompleteDialog from './components/ListCompleteDialog'\r\nimport Container from '@material-ui/core/Container'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RestoreIcon from '@material-ui/icons/Restore'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport AddItemDialog from './components/AddItemDialog'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        articleTitle: {\r\n            marginBottom: '1.5rem',\r\n        },\r\n        listPaper: {\r\n            boxSizing: 'border-box',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignContent: 'center',\r\n            justifyContent: 'space-evenly',\r\n            marginTop: theme.spacing(10),\r\n            padding: theme.spacing(3),\r\n            width: '100%'\r\n        },\r\n        pickedList: {\r\n            marginTop: theme.spacing(4),\r\n        },\r\n        listItem: {\r\n            flexGrow: 1\r\n        },\r\n        pickedListItem: {\r\n            textDecoration: 'line-through'\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n        addButton: {\r\n            position: 'fixed',\r\n            left: '50\\%',\r\n            right: '50\\%',\r\n            bottom: theme.spacing(2),\r\n            transform: 'translateX(-50\\%)'\r\n        }\r\n    })\r\n)\r\n\r\nconst ListView = (props: any) => {\r\n    const classes = useStyles()\r\n    const { \r\n        listData,\r\n        items,\r\n        categories,\r\n        itemAddDialogValue,\r\n        itemAddModalOpen,\r\n        itemAutocompleteValue,\r\n        listItems,\r\n        pickedList,\r\n        finishModalOpen,\r\n        itemSearchOpen,\r\n        addItemTolist,\r\n        handleFinishModalClose,\r\n        handleAddItemModalClose,\r\n        openItemSearch,\r\n        dialogNameChange,\r\n        dialogCategoryChange,\r\n        itemCheckUndo,\r\n        getOptionLabel,\r\n        itemCheckClicked,\r\n        getList,\r\n        itemAutoCompleteValueChange,\r\n        filterOptions,\r\n        listPickingFinished\r\n    } = useListView()\r\n\r\n    useEffect(() => {\r\n        getList(props.match.params.listId)\r\n    }, [props.match.params.listId])\r\n\r\n    const listElements = listItems.map(item => {\r\n        return (\r\n            <ListItem key={item.id} className={classes.listItem} divider={true}>\r\n                <ListItemText primary={item.name} />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge='end' size='small' color='secondary' onClick={() => itemCheckClicked(item.id)}>\r\n                        <CheckIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    })\r\n\r\n    const pickedListItems = pickedList.map(item => {\r\n        return (\r\n            <ListItem key={item.id} className={classes.pickedListItem} divider={true}>\r\n                <ListItemText primary={item.name} />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge='end' size='small' color='inherit' onClick={() => itemCheckUndo(item.id)}>\r\n                        <RestoreIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container component='article' maxWidth='sm'>\r\n                <h1 className={classes.hiddenTitle}>{`Shopping ${listData.name}`}</h1>\r\n                <Paper \r\n                    className={classes.listPaper} \r\n                    elevation={3} \r\n                    component='section' \r\n                >\r\n                    <Typography variant='h4' component='h2' className={classes.articleTitle} color='primary' align='center'>\r\n                        {listData.name}\r\n                    </Typography>\r\n                    <List>\r\n                        {listElements}\r\n                    </List>\r\n                    <List className={classes.pickedList}>\r\n                        {pickedListItems.reverse()}\r\n                    </List>\r\n                </Paper>\r\n            </Container>\r\n            <ListCompleteDialog open={finishModalOpen} handleClose={handleFinishModalClose} handleFinished={listPickingFinished} />\r\n            <Fab color='secondary' aria-label='add-items-to-list' className={classes.addButton} onClick={openItemSearch}>\r\n                <AddIcon />\r\n            </Fab>\r\n            <AddItemDialog \r\n                addItem={addItemTolist}\r\n                openItemSearch={openItemSearch}\r\n                itemSearchOpen={itemSearchOpen}\r\n                handleItemSearchClose={handleAddItemModalClose}\r\n                itemAutocompleteValue={itemAutocompleteValue}\r\n                categoryAutocompleteValue={itemAddDialogValue.category}\r\n                autoCompleteValueChange={itemAutoCompleteValueChange}\r\n                filterOptions={filterOptions}\r\n                itemOptions={items}\r\n                categoryOptions={categories}\r\n                getOptionLabel={getOptionLabel}\r\n                dialogOpen={itemAddModalOpen}\r\n                dialogClose={handleAddItemModalClose}\r\n                dialogValues={itemAddDialogValue}\r\n                dialogNameChange={dialogNameChange}\r\n                dialogCategoryChange={dialogCategoryChange}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ListView","import React from 'react'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { createStyles, DialogContentText, makeStyles, Theme } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n    name: string;\r\n    content: any;\r\n    deleteElement?: any;\r\n    isItem?: boolean;\r\n    editElement?: any;\r\n    addButtonPressed?: any;\r\n    deleteButtonPressed: any;\r\n    deleteModalOpen: any;\r\n    deleteModalClose: any;\r\n    elementToDelete: any;\r\n  }\r\n\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        itemsList: {\r\n\r\n        },\r\n        listItem: {\r\n            marginBottom: '0.5rem'\r\n        },\r\n        iconButtons: {\r\n            marginLeft: theme.spacing(2)\r\n        },\r\n        addButton: {\r\n            position: 'fixed',\r\n            left: '50\\%',\r\n            right: '50\\%',\r\n            bottom: theme.spacing(2),\r\n            transform: 'translateX(-50\\%)'\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n    })\r\n)\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const classes = useStyles()\r\n    const { \r\n        children,\r\n        value,\r\n        index,\r\n        content,\r\n        deleteElement,\r\n        isItem,\r\n        editElement,\r\n        addButtonPressed,\r\n        deleteButtonPressed,\r\n        elementToDelete,\r\n        deleteModalOpen,\r\n        deleteModalClose,\r\n        name,\r\n        ...other\r\n    } = props\r\n\r\n    return (\r\n        <section \r\n            role='tabpanel'\r\n            hidden={value !== index}\r\n            id={`${name} Tab`}\r\n            aria-labelledby={name}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <React.Fragment>\r\n                    <h2 className={classes.hiddenTitle}>{name}</h2>\r\n                    <List className={classes.itemsList}>\r\n                        {content.map((element: any) => {\r\n                            return (\r\n                                <ListItem\r\n                                    key={element.id}\r\n                                    className={classes.listItem}\r\n                                    divider={true}\r\n                                >\r\n                                    <ListItemText primary={element.name} />\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton\r\n                                            edge='end'\r\n                                            size='small'\r\n                                            color='inherit'\r\n                                            className={classes.iconButtons}\r\n                                            onClick={() => editElement(element)}\r\n                                        >\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            edge='end'\r\n                                            size='small'\r\n                                            color='inherit'\r\n                                            className={classes.iconButtons}\r\n                                            onClick={() => deleteButtonPressed(element)}\r\n                                        >\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            )\r\n                        })}\r\n                    </List>\r\n                    <Dialog open={deleteModalOpen} onClose={deleteModalClose}>\r\n                        <DialogTitle id=\"confirm-delete\">\r\n                            Delete item?\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                {`Are you sure you want to delete ${isItem ? 'item ' : 'category '} - ${elementToDelete ? elementToDelete.name : null} ?`}\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button color=\"primary\" onClick={deleteModalClose}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button color=\"primary\" onClick={() => deleteElement(isItem)}>\r\n                                Yes\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Fab color='secondary' aria-label={`add-${isItem ? 'item' : 'category'}`} className={classes.addButton} onClick={addButtonPressed}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </React.Fragment>\r\n            ) }\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default TabPanel","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { Item } from '../../../ListView/hooks/useListView'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        \r\n    })\r\n)\r\n\r\nconst EditElementDialog = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n\r\n    return (\r\n        <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"add-item-dialog-name\">\r\n                <form onSubmit={props.confirmEdit}>\r\n                    <DialogTitle id=\"add-item-dialog-name\">Edit item</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            value={(props.dialogValues as Item).name}\r\n                            onChange={props.itemNameChange}\r\n                            label=\"name\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Autocomplete \r\n                            value={props.categoryAutocompleteValue}\r\n                            onChange={props.dialogCategoryChange}\r\n                            filterOptions={props.filterOptions}\r\n                            id='category-autocomplete'\r\n                            options={props.categoryOptions}\r\n                            getOptionLabel={props.getOptionLabel}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            renderOption={option => option.name}\r\n                            freeSolo\r\n                            renderInput={params => (<TextField {...params} label='category' margin='dense' variant='outlined' />)}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={props.dialogClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditElementDialog","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { Category } from '../../../ListView/hooks/useListView'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        \r\n    })\r\n)\r\n\r\nconst EditCategoryDialog = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={props.dialogOpen} onClose={props.dialogClose} aria-labelledby=\"edit-category-dialog\">\r\n            <form onSubmit={props.confirmEdit}>\r\n                <DialogTitle id=\"edit-category-dialog\">Edit item</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        value={props.dialogValue}\r\n                        onChange={props.nameChange}\r\n                        label=\"name\"\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.dialogClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditCategoryDialog","import React, { useEffect, useState } from 'react'\r\nimport axios from '../../../util/axiosAPI'\r\nimport { Item } from '../../CreateList/hooks/useCreateList'\r\nimport { Category } from '../../CreateList/hooks/useCreateList'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\n\r\nconst useUserItemsAndCategories = () => {\r\n    const [tabValue, setTabValue] = useState<number>(0)\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [categories, setCategories] = useState<Category[]>([])\r\n    const [editItemDialogValue, setEditItemDialogValue] = useState({ name: '', category: {}})\r\n    const [editCategoryDialogValue, setEditCategoryDialogValue] = useState<string>('')\r\n    const [editItemModalOpen, setEditItemModalOpen] = useState<boolean>(false)\r\n    const [editCategoryModalOpen, setEditCategoryModalOpen] = useState<boolean>(false)\r\n    const [editingItem, setEditingItem] = useState<Item | null>(null)\r\n    const [editingCategory, setEditingCategory] = useState<Category | null>(null)\r\n    const [elementToDelete, setElementToDelete] = useState<any>(null)\r\n    const [deleteModalOpen, setDeleteModalOpen] = useState<boolean>(false)\r\n\r\n    const filter = createFilterOptions<Item | Category>()\r\n\r\n    useEffect(() => {\r\n        getItems(localStorage.getItem('userId'))\r\n        getCategories(localStorage.getItem('userId'))\r\n    }, [localStorage.getItem('userId')])\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTabValue(newValue)\r\n    }\r\n\r\n    const getItems = (userId: string | null) => {\r\n        axios.get('/items/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setItems(response.data)\r\n        })\r\n    }\r\n\r\n    const getCategories = (userId: string | null) => {\r\n        axios.get('/categories/' + userId, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setCategories(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const addItemButtonPressed = () => {\r\n        setEditItemModalOpen(true)\r\n    }\r\n\r\n    const addCategoryButtonPressed = () => {\r\n        setEditCategoryModalOpen(true)\r\n    }\r\n\r\n    const editItemButtonPressed = (item: Item) => {\r\n        setEditingItem(item)\r\n        const category = categories.find(cat => cat.id === item.userCategoryId)\r\n        setEditItemDialogValue({ name: item.name, category: (category as Category) })\r\n        setEditItemModalOpen(true)\r\n    }\r\n\r\n    const editCategoryButtonPressed = (category: Category) => {\r\n        setEditingCategory(category)\r\n        setEditCategoryDialogValue(category.name)\r\n        setEditCategoryModalOpen(true)\r\n    }\r\n\r\n    const editDialogNameChange = (event: React.ChangeEvent<any>) => {\r\n        setEditItemDialogValue({ ...editItemDialogValue, name: event.target.value })\r\n    }\r\n\r\n    const editItemDialogCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | string) => {\r\n        if (typeof newValue === 'string') {\r\n            setEditItemModalOpen(true);\r\n            setEditItemDialogValue({\r\n            ...(editItemDialogValue as Item),\r\n            category: newValue,\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setEditItemDialogValue({...(editItemDialogValue as Item), category: newValue.inputValue})\r\n        } else {\r\n            setEditItemDialogValue({...(editItemDialogValue as Item), category: newValue})\r\n        }\r\n    }\r\n\r\n    const filterAutocompleteOptions = (options: Item[] | Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const editCategoryNameChange = (event: React.ChangeEvent<any>) => {\r\n        setEditCategoryDialogValue(event.target.value)\r\n    }\r\n\r\n    const getOptionLabel = (option: Item | Category | string) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const saveItemEdit = (event: any) => {\r\n        event.preventDefault()\r\n        if (editingItem) {\r\n            axios.put('/items/' + editingItem!.id, {\r\n                userId: localStorage.getItem('userId'),\r\n                newName: editItemDialogValue.name,\r\n                category: editItemDialogValue.category\r\n            }, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(response => {\r\n                getItems(localStorage.getItem('userId'))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            axios.post('/items/' + localStorage.getItem('userId'), {\r\n                name: editItemDialogValue.name,\r\n                category: editItemDialogValue.category\r\n            }, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(response => {\r\n                getItems(localStorage.getItem('userId'))\r\n                getCategories(localStorage.getItem('userId'))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        handleItemEditModalClose()\r\n    }\r\n\r\n    const saveCategoryEdit = (event: any) => {\r\n        event.preventDefault()\r\n        if (editingCategory) {\r\n            axios.put('/categories/' + editingCategory.id + '?userId=' + localStorage.getItem('userId'), {\r\n                newCategoryName: editCategoryDialogValue\r\n            }, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(response => {\r\n                getCategories(localStorage.getItem('userId'))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            axios.post('/categories/' + localStorage.getItem('userId'), {\r\n                name: editCategoryDialogValue\r\n            }, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(response => {\r\n                getCategories(localStorage.getItem('userId'))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        handleCategoryEditModalClose()\r\n    }\r\n\r\n    const handleItemEditModalClose = () => {\r\n        setEditItemDialogValue({\r\n            name: '',\r\n            category: ''\r\n        })\r\n        setEditingItem(null)\r\n        setEditItemModalOpen(false)\r\n    }\r\n\r\n    const handleCategoryEditModalClose = () => {\r\n        setEditCategoryDialogValue('')\r\n        setEditingCategory(null)\r\n        setEditCategoryModalOpen(false)\r\n    }\r\n\r\n    const handleDeleteModalClose = () => {\r\n        setDeleteModalOpen(false)\r\n        setElementToDelete(null)\r\n    }\r\n\r\n    const deleteButtonPressed = (element: any) => {\r\n        setDeleteModalOpen(true)\r\n        setElementToDelete(element)\r\n    }\r\n\r\n    const deleteItemOrCategory = (isItem: boolean) => {\r\n        const url = isItem ? '/items/' : '/categories/'\r\n        axios.delete(url + elementToDelete.id + '?userId=' + localStorage.getItem('userId'), {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n        })\r\n        .then(response => {\r\n            if (isItem) {\r\n                getItems(localStorage.getItem('userId'))\r\n            } else {\r\n                getCategories(localStorage.getItem('userId'))\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        handleDeleteModalClose()\r\n    }\r\n\r\n    return {\r\n        items: items,\r\n        categories: categories,\r\n        elementToDelete: elementToDelete,\r\n        // input values\r\n        tabValue: tabValue,\r\n        editItemDialogValue: editItemDialogValue,\r\n        editCategoryDialogValue: editCategoryDialogValue,\r\n        // modal states\r\n        editItemModalOpen: editItemModalOpen,\r\n        editCategoryModalOpen: editCategoryModalOpen,\r\n        deleteModalOpen: deleteModalOpen,\r\n        // modal close handlers\r\n        handleItemEditModalClose: handleItemEditModalClose,\r\n        handleCategoryEditModalClose: handleCategoryEditModalClose,\r\n        handleDeleteModalClose: handleDeleteModalClose,\r\n        //functions when buttons are pressed\r\n        addItemButtonPressed: addItemButtonPressed,\r\n        addCategoryButtonPressed: addCategoryButtonPressed,\r\n        deleteButtonPressed: deleteButtonPressed,\r\n        editItemButtonPressed: editItemButtonPressed,\r\n        editCategoryButtonPressed: editCategoryButtonPressed,\r\n        handleTabChange: handleTabChange,\r\n        // input changes\r\n        editDialogNameChange: editDialogNameChange,\r\n        editItemDialogCategoryChange: editItemDialogCategoryChange,\r\n        editCategoryNameChange: editCategoryNameChange,\r\n        // autocomplete functions\r\n        filterAutocompleteOptions: filterAutocompleteOptions,\r\n        getOptionLabel: getOptionLabel,\r\n        // api request senders\r\n        saveItemEdit: saveItemEdit,\r\n        saveCategoryEdit: saveCategoryEdit,\r\n        deleteElement: deleteItemOrCategory,\r\n    }\r\n}\r\n\r\nexport default useUserItemsAndCategories","import React from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport TabPanel from './components/TabPanel'\r\nimport EditElementDialog from './components/EditElementDialog'\r\nimport EditCategoryDialog from './components/EditCategoryDialog'\r\nimport useUserItemsAndCategories from './hooks/useUserItemsAndCategories'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n        tabs: {\r\n            marginTop: 70\r\n        }\r\n    })\r\n)\r\n\r\nconst UserItemsAndCategories = () => {\r\n    const classes = useStyles()\r\n\r\n    const { \r\n        items,\r\n        categories,\r\n        tabValue,\r\n        editItemModalOpen,\r\n        editCategoryModalOpen,\r\n        deleteModalOpen,\r\n        elementToDelete,\r\n        editItemDialogValue,\r\n        editCategoryDialogValue,\r\n        addItemButtonPressed,\r\n        addCategoryButtonPressed,\r\n        deleteButtonPressed,\r\n        saveItemEdit,\r\n        saveCategoryEdit,\r\n        editDialogNameChange,\r\n        editItemDialogCategoryChange,\r\n        editCategoryNameChange,\r\n        filterAutocompleteOptions,\r\n        getOptionLabel,\r\n        editItemButtonPressed,\r\n        editCategoryButtonPressed,\r\n        handleItemEditModalClose,\r\n        handleCategoryEditModalClose,\r\n        handleDeleteModalClose,\r\n        handleTabChange,\r\n        deleteElement,\r\n\r\n    } = useUserItemsAndCategories()\r\n\r\n    return (\r\n        <Container component='article' maxWidth='sm' className={classes.container}>\r\n            <h1 className={classes.hiddenTitle}>Edit items and categories</h1>\r\n            <Tabs \r\n                value={tabValue}\r\n                variant='fullWidth'\r\n                aria-label=\"user-items-navigation-tabs\"\r\n                className={classes.tabs}\r\n                onChange={handleTabChange}\r\n            >\r\n                <Tab label=\"Items\" />\r\n                <Tab label=\"Categories\" />\r\n                <Tab label=\"Recipes\" disabled />\r\n            </Tabs>\r\n            <TabPanel\r\n                value={tabValue}\r\n                name='Items'\r\n                index={0}\r\n                isItem={true}\r\n                content={items}\r\n                deleteElement={deleteElement}\r\n                editElement={editItemButtonPressed}\r\n                addButtonPressed={addItemButtonPressed}\r\n                deleteButtonPressed={deleteButtonPressed}\r\n                deleteModalOpen={deleteModalOpen}\r\n                elementToDelete={elementToDelete}\r\n                deleteModalClose={handleDeleteModalClose}\r\n            />\r\n            <TabPanel\r\n                value={tabValue}\r\n                name='Categories'\r\n                index={1}\r\n                isItem={false}\r\n                content={categories}\r\n                deleteElement={deleteElement}\r\n                editElement={editCategoryButtonPressed}\r\n                addButtonPressed={addCategoryButtonPressed}\r\n                deleteButtonPressed={deleteButtonPressed}\r\n                deleteModalOpen={deleteModalOpen}\r\n                elementToDelete={elementToDelete}\r\n                deleteModalClose={handleDeleteModalClose}\r\n            />\r\n            <EditElementDialog \r\n                dialogOpen={editItemModalOpen}\r\n                dialogClose={handleItemEditModalClose}\r\n                confirmEdit={saveItemEdit}\r\n                dialogValues={editItemDialogValue}\r\n                itemNameChange={editDialogNameChange}\r\n                categoryAutocompleteValue={editItemDialogValue.category}\r\n                dialogCategoryChange={editItemDialogCategoryChange}\r\n                filterOptions={filterAutocompleteOptions}\r\n                categoryOptions={categories}\r\n                getOptionLabel={getOptionLabel}\r\n            />\r\n            <EditCategoryDialog \r\n                dialogOpen={editCategoryModalOpen}\r\n                dialogClose={handleCategoryEditModalClose}\r\n                dialogValue={editCategoryDialogValue}\r\n                confirmEdit={saveCategoryEdit}\r\n                nameChange={editCategoryNameChange}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserItemsAndCategories\r\n","import React, { useEffect, useState, useCallback } from 'react'\r\n\r\nimport axios from '../../../util/axiosAPI'\r\nimport { ListData, Item, Category } from '../../ListView/hooks/useListView'\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'\r\n\r\nconst useListEdit = () => {\r\n\r\n    const filter = createFilterOptions<Item | Category>()\r\n\r\n    const [listData, setListData] = useState<ListData>({})\r\n    const [items, setItems] = useState<Item[]>([])\r\n    const [nameChanged, setNameChanged] = useState<boolean>(false)\r\n    const [categories, setCategories] = useState<Category[]>([])\r\n    const [itemSearchOpen, setItemSearchOpen] = useState<boolean>(false)\r\n    const [itemAddModalOpen, setItemAddModalOpen] = useState<boolean>(false)\r\n    const [itemAutocompleteValue, setItemAutocompleteValue] = useState<Item | null>(null)\r\n    const [itemAddDialogValue, setItemAddDialogValue] = useState<Item>({ name: '', category: '' })\r\n\r\n\r\n    const getList = useCallback((listId: number) => {\r\n        axios.get('/list/listdetails/' + listId + '?userId=' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                setListData({...response.data, items: response.data.user_items})\r\n                console.log(response.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    const getItems = () => {\r\n        axios.get('/items/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setItems(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getCategories = () => {\r\n        axios.get('categories/' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setCategories(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const itemAutocompleteValueChange = (event: React.ChangeEvent<any>, newValue: Item | string) => {\r\n        if (typeof newValue === 'string') {\r\n            // timeout to avoid instant validation of the dialog's form.\r\n            setTimeout(() => {\r\n              setItemAddModalOpen(true);\r\n              setItemAddDialogValue({\r\n                name: newValue,\r\n                category: '',\r\n              })\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddModalOpen(true)\r\n            setItemAddDialogValue({\r\n                name: newValue.inputValue,\r\n                category: '',\r\n            })\r\n        } else {\r\n            setItemAddDialogValue({\r\n                name: newValue.name,\r\n                category: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    const dialogCategoryChange = (event: React.ChangeEvent<any>, newValue: Category | string) => {\r\n        if (typeof newValue === 'string') {\r\n            setItemAddModalOpen(true);\r\n            setItemAddDialogValue({\r\n            ...(itemAddDialogValue as Item),\r\n            category: newValue,\r\n            })\r\n        } else if (newValue && newValue.inputValue) {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue.inputValue})\r\n        } else {\r\n            setItemAddDialogValue({...(itemAddDialogValue as Item), category: newValue})\r\n        }\r\n    }\r\n\r\n    const filterOptions = (options: Item[] | Category[], params: any) => {\r\n        const filtered = filter(options, params);\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            name: `Add \"${params.inputValue}\"`\r\n          })\r\n        }\r\n        return filtered\r\n    }\r\n\r\n    const getOptionLabel = (option: Item | Category | string) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n    }\r\n\r\n    const handleAddItemModalClose = () => {\r\n        setItemAddDialogValue({\r\n            name: '',\r\n            category: ''\r\n        })\r\n        setItemAddModalOpen(false)\r\n        setItemSearchOpen(false)\r\n        setItemAutocompleteValue(null)\r\n\r\n    }\r\n\r\n    const addItemToList = (event: any) => {\r\n        event.preventDefault()\r\n        axios.post('/list/add/' + listData.id, {\r\n            userId: localStorage.getItem('userId'),\r\n            itemId: itemAutocompleteValue?.id,\r\n            name: itemAddDialogValue.name,\r\n            category: itemAddDialogValue.category\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            const newListData = { ...listData, items: [...listData.items!, {name: itemAddDialogValue.name, id: response.data.itemId }]}\r\n            setListData(newListData)\r\n            handleAddItemModalClose()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const removeListItem = (itemId: any) => {\r\n        const newList = listData.items?.filter(item => {\r\n            return item.list_item.id !== itemId\r\n        })\r\n        axios.delete('/list/listitem/delete/' + itemId + '?userId=' + localStorage.getItem('userId'), {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            setListData({...listData, items: newList })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const dialogNameChange = (event: React.ChangeEvent<any>) => {\r\n        setItemAddDialogValue({...(itemAddDialogValue as Item), name: event.target.value})\r\n    }\r\n\r\n    const listNameChange = (event: React.ChangeEvent<any>) => {\r\n        setListData({...listData, name: event.target.value})\r\n        setNameChanged(true)\r\n    }\r\n\r\n    const openItemSearch = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        getItems()\r\n        getCategories()\r\n        setItemSearchOpen(true)\r\n    } \r\n\r\n    const saveListNameChange = () => {\r\n        if (!nameChanged) {\r\n            return\r\n        }\r\n        axios.put('/list/' + listData.id, {\r\n            userId: localStorage.getItem('userId'),\r\n            newName: listData.name\r\n        }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(response.data)\r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return {\r\n        items: items,\r\n        categories: categories,\r\n        listData: listData,\r\n        itemSearchOpen: itemSearchOpen,\r\n        itemAddModalOpen: itemAddModalOpen,\r\n        itemAutocompleteValue: itemAutocompleteValue,\r\n        itemAddDialogValue: itemAddDialogValue,\r\n        getList: getList,\r\n        saveListNameChange: saveListNameChange,\r\n        openItemSearch: openItemSearch,\r\n        itemAutocompleteValueChange: itemAutocompleteValueChange,\r\n        handleAddItemModalClose: handleAddItemModalClose,\r\n        dialogCategoryChange: dialogCategoryChange,\r\n        dialogNameChange: dialogNameChange,\r\n        listNameChange: listNameChange,\r\n        filterOptions: filterOptions,\r\n        getOptionLabel: getOptionLabel,\r\n        addItemToList: addItemToList,\r\n        removeListItem: removeListItem,\r\n    }\r\n}\r\n\r\nexport default useListEdit","import React, { useEffect } from 'react'\r\nimport useListEdit from './hooks/useListEdit'\r\nimport AddItemDialog from '../ListView/components/AddItemDialog'\r\nimport Container from '@material-ui/core/Container'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        listNameInput: {\r\n            width: '80%',\r\n            left: '10%',\r\n            right: '10%',\r\n            marginTop: '100px',\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            marginBottom: 30,\r\n        },\r\n        listPaper: {\r\n            boxSizing: 'border-box',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignContent: 'center',\r\n            justifyContent: 'space-evenly',\r\n            marginTop: theme.spacing(10),\r\n            padding: theme.spacing(3),\r\n            width: '100%'\r\n        },\r\n        actionsSection: {\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: 40,\r\n            right: 0,\r\n            bottom: 15,\r\n            margin: 0,\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n\r\n        },\r\n        hiddenTitle: {\r\n            position: 'absolute',\r\n            left: '-10000px',\r\n            top: 'auto',\r\n            width: '1px',\r\n            height: '1px',\r\n            overflow: 'hidden'\r\n        },\r\n        listItem: {\r\n            flexGrow: 1,\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n        addButton: {\r\n            marginLeft: theme.spacing(2)\r\n        },\r\n        saveButton: {\r\n            marginRight: theme.spacing(2)\r\n        }\r\n    })\r\n)\r\n\r\nconst ListEdit = (props: any) => {\r\n    const classes = useStyles()\r\n\r\n    const {\r\n        listData,\r\n        items,\r\n        categories,\r\n        itemSearchOpen,\r\n        itemAddModalOpen,\r\n        itemAutocompleteValue,\r\n        itemAddDialogValue,\r\n        getList,\r\n        openItemSearch,\r\n        itemAutocompleteValueChange,\r\n        handleAddItemModalClose,\r\n        dialogCategoryChange,\r\n        dialogNameChange,\r\n        listNameChange,\r\n        filterOptions,\r\n        getOptionLabel,\r\n        addItemToList,\r\n        removeListItem,\r\n        saveListNameChange\r\n    } = useListEdit()\r\n\r\n    useEffect(() => {\r\n        getList(props.match.params.listId)\r\n    }, [props.match.params.listId])\r\n\r\n    const listElements = listData.items?.map(item => {\r\n        return (\r\n            <ListItem key={item.id} className={classes.listItem} divider={true}>\r\n                <ListItemText primary={item.name} />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge='end' size='small' onClick={() => removeListItem(item.list_item.id)}>\r\n                        <CancelIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Container component='article' maxWidth='sm' >\r\n            <h1 className={classes.hiddenTitle}>{`Edit list - ${listData.name}`}</h1>\r\n            <TextField\r\n                id=\"list-name\"\r\n                label=\"List name\"\r\n                type=\"text\"\r\n                value={listData.name}\r\n                onChange={listNameChange}\r\n                className={classes.listNameInput}\r\n                inputProps={{min: 0, style: { textAlign: 'center' }}}\r\n                InputLabelProps={{ shrink: true }}\r\n            />\r\n            <List>\r\n                {listElements}\r\n            </List>\r\n            <section className={classes.actionsSection}>\r\n                <Button \r\n                    type='button'\r\n                    color='primary'\r\n                    variant='contained'\r\n                    size='small'\r\n                    className={classes.addButton}\r\n                    onClick={openItemSearch}\r\n                >\r\n                    Add items\r\n                </Button>\r\n                <Button \r\n                    type='button' \r\n                    color='secondary' \r\n                    variant='contained' \r\n                    size='small'\r\n                    className={classes.saveButton}\r\n                    onClick={() => {\r\n                        saveListNameChange()\r\n                        props.history.push('/mylists')\r\n                    }}\r\n                >\r\n                    Save & exit\r\n                </Button>\r\n            </section>\r\n            <AddItemDialog \r\n                addItem={addItemToList}\r\n                openItemSearch={openItemSearch}\r\n                itemSearchOpen={itemSearchOpen}\r\n                handleItemSearchClose={handleAddItemModalClose}\r\n                itemAutocompleteValue={itemAutocompleteValue}\r\n                categoryAutocompleteValue={itemAddDialogValue.category}\r\n                autoCompleteValueChange={itemAutocompleteValueChange}\r\n                filterOptions={filterOptions}\r\n                itemOptions={items}\r\n                categoryOptions={categories}\r\n                getOptionLabel={getOptionLabel}\r\n                dialogOpen={itemAddModalOpen}\r\n                dialogClose={handleAddItemModalClose}\r\n                dialogValues={itemAddDialogValue}\r\n                dialogNameChange={dialogNameChange}\r\n                dialogCategoryChange={dialogCategoryChange}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ListEdit","import React from 'react'\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router'\r\nimport Layout from '../Layout'\r\nimport AddItems from '../AddItems'\r\nimport CreateList from '../CreateList'\r\nimport LogIn from '../LogIn'\r\nimport Register from '../Register'\r\nimport MyLists from '../MyLists'\r\nimport ListView from '../ListView'\r\nimport UserItemsAndCategories from '../UserItemsAndCategories'\r\nimport ListEdit from '../ListEdit'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/login\" component={LogIn}/>\r\n      <Route path=\"/register\" component={Register}/>\r\n      <Route path=\"/\" component={LogIn} />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  )\r\n\r\n  if ( localStorage.getItem('token') ) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/createlist\" component={CreateList} />\r\n        <Route path=\"/additems\" component={AddItems} />\r\n        <Route path=\"/login\" component={LogIn}/>\r\n        <Route path=\"/register\" component={Register}/>\r\n        <Route path=\"/useritems\" component={UserItemsAndCategories} />\r\n        <Route path=\"/mylists/use/:listId\" component={ListView} />\r\n        <Route path=\"/mylists/edit/:listId\" component={ListEdit} />\r\n        <Route path=\"/mylists\" component={MyLists}/>\r\n        <Route path=\"/\" component={CreateList} />\r\n        <Redirect to=\"/\" />\r\n    </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {routes}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default withRouter( App );\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport './index.css';\nimport App from './components/App/App';\nimport AuthContextProvider from './context/auth-context'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <AuthContextProvider>\n          <App />\n        </AuthContextProvider>\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}